<!-- ======================================================= -->

<!-- ======================================================= -->

<!-- ======================================================= -->

# Übergang zu R { }

Im Folgenden findest du einige Ratschläge und Ressourcen, wenn du auf R umsteigst.

R wurde in den späten 1990er Jahren eingeführt und hat seitdem stark an Umfang gewonnen. Seine Möglichkeiten sind so umfangreich, dass kommerzielle Alternativen auf die Entwicklungen von R reagiert haben, um wettbewerbsfähig zu bleiben! ([Lies diesen Artikel über den Vergleich von R, SPSS, SAS, STATA und Python](https://www.inwt-statistics.com/read-blog/comparison-of-r-python-sas-spss-and-stata.html)).

Außerdem ist R viel einfacher zu lernen als noch vor 10 Jahren. Früher hatte R den Ruf, für Anfänger schwierig zu sein. Heute ist es viel einfacher, dank benutzerfreundlicher Oberflächen wie RStudio, intuitivem Code wie dem **tidyverse** und vielen Tutorials.

<span style="color: darkgreen;">**Lass dich nicht einschüchtern - komm und entdecke die Welt von R!**</span>

```{r, echo=F, out.width="75%", out.height="75%", fig.align="center"}
knitr::include_graphics(here::here("images", "transition_door.png"))
```

## Von Excel

Der Umstieg von Excel direkt auf R ist ein sehr erreichbares Ziel. Es mag entmutigend erscheinen, aber du kannst es schaffen!

Es stimmt, dass jemand mit guten Excel-Kenntnissen sehr fortgeschrittene Aktivitäten allein in Excel durchführen kann - sogar mit Skripting-Tools wie VBA. Excel wird auf der ganzen Welt verwendet und ist ein unverzichtbares Werkzeug für einen Epidemiologen. Wenn du es jedoch mit R ergänzt, kannst du deine Arbeitsabläufe drastisch verbessern und erweitern.

### Vorteile {.unnumbered}

Du wirst feststellen, dass die Verwendung von R immense Vorteile bietet: Zeitersparnis, konsistentere und genauere Analysen, Reproduzierbarkeit, Austauschbarkeit und schnellere Fehlerkorrekturen. Wie bei jeder neuen Software musst du eine gewisse Zeit investieren, um dich mit ihr vertraut zu machen. Das zahlt sich aus, denn mit R eröffnen sich dir unendlich viele neue Möglichkeiten.

Excel ist eine bekannte Software, mit der auch Anfänger einfache Analysen und Visualisierungen mit "Zeigen und Klicken" erstellen können. Im Vergleich dazu kann es ein paar Wochen dauern, bis du dich mit den Funktionen und der Oberfläche von R vertraut gemacht hast. Allerdings hat sich R in den letzten Jahren weiterentwickelt und ist viel anfängerfreundlicher geworden.

Viele Excel-Arbeitsabläufe beruhen auf dem Gedächtnis und auf Wiederholungen - daher gibt es viele Möglichkeiten für Fehler. Außerdem sind die Datenbereinigung, die Analysemethode und die verwendeten Gleichungen in der Regel nicht einsehbar. Ein neuer Kollege oder eine neue Kollegin braucht viel Zeit, um zu lernen, was eine Excel-Arbeitsmappe macht und wie er oder sie Fehler beheben kann. In R sind alle Schritte explizit in einem Skript festgehalten und können leicht eingesehen, bearbeitet, korrigiert und auf andere Datensätze angewendet werden.

**Um von Excel auf R umzusteigen, musst du deine Denkweise in einigen wichtigen Punkten ändern:**

### Daten aufräumen {.unnumbered}

Verwende maschinenlesbare "aufgeräumte" Daten anstelle von unordentlichen "menschenlesbaren" Daten. Dies sind die drei wichtigsten Anforderungen an "ordentliche" Daten, wie in diesem Tutorial erklärt wird ["aufgeräumte" Daten in R](https://r4ds.had.co.nz/tidy-data.html):

- Jede Variable muss ihre eigene Spalte haben
- Jede Beobachtung muss eine eigene Zeile haben
- Jeder Wert muss seine eigene Zelle haben

An Excel-Benutzer - denken Sie an die Rolle, die [Excel-"Tabellen"](https://exceljet.net/excel-tables) spielen, um Daten zu standardisieren und das Format berechenbarer zu machen.

Ein Beispiel für "aufgeräumte" Daten ist die Fallliste, die in diesem Handbuch verwendet wird - jede Variable ist in einer Spalte enthalten, jede Beobachtung (ein Fall) hat eine eigene Zeile und jeder Wert steht in nur einer Zelle. Unten siehst du die ersten 50 Zeilen der Strichliste:

```{r, echo=F}
# import the linelist into R
linelist <- rio::import(here::here("data", "case_linelists", "linelist_cleaned.rds"))
```

```{r, message=FALSE, echo=F}
# display the linelist data as a table
DT::datatable(head(linelist, 50), rownames = FALSE, filter="top", options = list(pageLength = 5, scrollX=T), class = 'white-space: nowrap' )
```

*Der Hauptgrund, warum man auf unordentliche Daten stößt, ist, dass viele Excel-Tabellen so gestaltet sind, dass sie von Menschen leicht gelesen werden können und nicht von Maschinen/Software.*

Um dir den Unterschied zu verdeutlichen, findest du hier einige fiktive Beispiele für **unordentlichen Daten** die Prioritäten setzen *menschliche*\-Lesbarkeit über *Maschine*\-Lesbarkeit:

```{r, echo=F, out.width="100%", out.height="75%", fig.align="center"}
knitr::include_graphics(here::here("images", "Excel_nonTidy_1.png"))
```

*Probleme:* In der obigen Tabelle gibt es *zusammengeführte Zellen* die von R nicht leicht zu verstehen sind. Es ist nicht klar, welche Zeile als "Kopfzeile" gelten soll. Auf der rechten Seite befindet sich ein farbbasiertes Wörterbuch und die Zellwerte werden durch Farben dargestellt - auch das ist für R nicht leicht zu interpretieren (und für Menschen mit Farbenblindheit auch nicht!). Außerdem werden verschiedene Informationen in einer Zelle zusammengefasst (mehrere Partnerorganisationen, die in einem Gebiet arbeiten, oder der Status "TBC" in derselben Zelle wie "Partner D").

```{r, echo=F, out.width="100%", out.height="100%", fig.align="center"}
knitr::include_graphics(here::here("images", "Excel_nonTidy_2.png"))
```

*Probleme:* In der obigen Tabelle gibt es zahlreiche zusätzliche leere Zeilen und Spalten im Datensatz - das bereitet in R Kopfzerbrechen. Außerdem sind die GPS-Koordinaten für ein bestimmtes Behandlungszentrum auf zwei Zeilen verteilt. Nebenbei bemerkt: Die GPS-Koordinaten sind in zwei verschiedenen Formaten!

"Aufgeräumte" Datensätze sind für das menschliche Auge vielleicht nicht so gut lesbar, aber sie machen die Datenbereinigung und -analyse viel einfacher! Tidy-Daten können in verschiedenen Formaten gespeichert werden, zum Beispiel "lang" oder "breit" (siehe Seite über [Daten spiegeln]), aber die oben genannten Grundsätze werden trotzdem beachtet.

### Funktionen {.unnumbered}

Das R-Wort "Funktion" mag neu sein, aber das Konzept existiert auch in Excel als *Formeln*. Auch Formeln in Excel erfordern eine präzise Syntax (z. B. die Platzierung von Semikolons und Klammern). Alles, was du tun musst, ist, ein paar neue Funktionen zu lernen und wie sie in R zusammenarbeiten.

### Skripte {.unnumbered}

Anstatt auf Schaltflächen zu klicken und Zellen zu ziehen, schreibst du *jede* Schritt und Vorgang in ein "Skript".
Excel-Benutzer sind vielleicht mit den "VBA-Makros" vertraut, die ebenfalls einen Skript-Ansatz verwenden.

*Das R-Skript besteht aus Schritt-für-Schritt-Anweisungen.*So kann jeder Kollege das Skript lesen und leicht erkennen, welche Schritte du gemacht hast. Das hilft auch dabei, Fehler oder ungenaue Berechnungen zu beseitigen. Siehe die [R-Grundlagen] Abschnitt über Skripte findest du Beispiele.

Hier ist ein Beispiel für ein R-Skript:

```{r, echo=F, out.width="75%", out.height="75%", fig.align="center"}
knitr::include_graphics(here::here("images", "example_script.png"))
```

### Excel-zu-R-Ressourcen {.unnumbered}

Hier findest du einige Links zu Tutorials, die dir den Umstieg von Excel auf R erleichtern:

- [R vs. Excel](https://www.northeastern.edu/graduate/blog/r-vs-excel/)
- [RStudio-Kurs in R für Excel-Benutzer](https://rstudio-conf-2020.github.io/r-for-excel/)

### R-Excel-Interaktion {.unnumbered}

R hat robuste Möglichkeiten, Excel-Arbeitsmappen zu importieren, mit den Daten zu arbeiten, Excel-Dateien zu exportieren/speichern und mit den Feinheiten von Excel-Blättern zu arbeiten.

Es stimmt, dass einige der ästhetischeren Excel-Formatierungen bei der Übersetzung verloren gehen können (z. B. Kursivschrift, seitlich stehender Text usw.). Wenn dein Arbeitsablauf erfordert, dass Dokumente zwischen R und Excel hin- und hergeschoben werden, ohne dass die ursprüngliche Excel-Formatierung verloren geht, solltest du Pakete wie **openxlsx**.

## Von Stata

<!-- ======================================================= -->

**Von Stata zu R kommen**

Viele Epidemiologen und Epidemiologinnen lernen zunächst, wie man Stata benutzt, und der Umstieg auf R kann entmutigend wirken. Wenn du jedoch mit Stata gut zurechtkommst, ist der Umstieg auf R sicherlich einfacher als du denkst. Es gibt zwar einige wichtige Unterschiede zwischen Stata und R, was die Erstellung und Änderung von Daten und die Implementierung von Analysefunktionen angeht - aber wenn du diese Unterschiede kennengelernt hast, wirst du in der Lage sein, deine Kenntnisse zu übertragen.

Im Folgenden findest du einige wichtige Übersetzungen zwischen Stata und R, die dir bei der Lektüre dieses Leitfadens nützlich sein können.

**Allgemeine Hinweise**

| **STATA**                                                                                                                                                                                                                                       | **R**                                                                                                                                                                                                                                            | 
| -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| Du kannst immer nur einen Datensatz zur gleichen Zeit anzeigen und bearbeiten                                                                                                                                                          | Du kannst mehrere Datensätze gleichzeitig anzeigen und bearbeiten, daher musst du deinen Datensatz häufig im Code angeben                                                                                                                   | 
| Online-Community verfügbar über [https://www.statalist.org/](https://www.statalist.org/)                                                                                                                                                                                                       | Online-Community verfügbar über [RStudio](https://community.rstudio.com/), [StackOverFlow](https://stackoverflow.com/questions/tagged/r) und [R-Blogger](https://www.r-bloggers.com/)                                                                                                                                                                                                            | 
| Point-and-Click-Funktionalität als Option                                                                                                                                                                                              | Minimale Point-and-Click-Funktionalität                                                                                                                                                                                                     | 
| Hilfe für Befehle verfügbar durch `help [command]`                                                                                                                                                                                                     | Hilfe verfügbar durch `[function]?` oder im Hilfefenster suchen                                                                                                                                                                                                                      | 
| Code mit \* oder /// oder /\* TEXT \*/ kommentieren                                                                                                                                                                                       | Code mit # kommentieren                                                                                                                                                                                                                     | 
| Fast alle Befehle sind in Stata eingebaut. Neue/benutzergeschriebene Funktionen können als **ado** Dateien mit **ssc installieren**[Paket]                                                                                                                                            | R installiert sich mit **Basis**Funktionen, aber typischerweise müssen andere Pakete von CRAN installiert werden (siehe Seite über [R-Grundlagen])                                                                                                                                                                                                                     | 
| Die Analyse wird normalerweise in einer **tun** Datei                                                                                                                                                                                               | Analyse, die in einem R-Skript im RStudio-Quelltextfenster geschrieben wurde. R Markdown-Skripte sind eine Alternative.                                                                                                                     | 

**Arbeitsverzeichnis**

| **STATA**                                                                                                                                                                                                                                       | **R**                                                                                                                                                                                                                                            | 
| -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| Bei Arbeitsverzeichnissen handelt es sich um absolute Dateipfade (z.B. "C:/username/documents/projects/data/")                                                                                                                         | Arbeitsverzeichnisse können entweder absolut oder relativ zu einem Projektstammordner sein, indem du die **hier**Paket (siehe [Import und Export])                                                                                                                                   | 
| Siehe aktuelles Arbeitsverzeichnis mit **pwd**                                                                                                                                                                                                | verwenden `getwd()` oder `here()` (bei Verwendung der **hier** Paket), mit leeren Klammern                                                                                                                                                                                                                                  | 
| Arbeitsverzeichnis festlegen mit **cd** "Ordnerstandort"                                                                                                                                                                                                      | verwenden `setwd("folder location")`, oder `set_here("folder location)` (bei Verwendung von **hier** Paket)                                                                                                                                                                                                                                  | 

**Daten importieren und anzeigen**

| **STATA**                                                                                                                                                                                                                                       | **R**                                                                                                                                                                                                                                            | 
| -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| Spezifische Befehle pro Dateityp                                                                                                                                                                                                       | verwenden `import()` von **rio**Paket für fast alle Dateitypen. Es gibt spezielle Funktionen als Alternativen (siehe [Importieren und Exportieren])                                                                                                                                                                                                                                  | 
| Das Einlesen von csv-Dateien erfolgt durch **import delimited** "filename.csv"                                                                                                                                                                                            | verwenden `import("filename.csv")`                                                                                                                                                                                                                                  | 
| Das Einlesen von xslx-Dateien erfolgt durch **excel importieren** "filename.xlsx"                                                                                                                                                                                           | verwenden `import("filename.xlsx")`                                                                                                                                                                                                                                  | 
| Durchsuche deine Daten in einem neuen Fenster mit dem Befehl **durchsuchen**                                                                                                                                                                          | Betrachte einen Datensatz im RStudio-Quellbereich mit `View(dataset)`. *Du musst den Namen deines Datensatzes für die Funktion in R angeben, da mehrere Datensätze gleichzeitig gehalten werden können. Beachte das große "V" in dieser Funktion*                                                                                                                                                                                      | 
| Verschaffe dir einen umfassenden Überblick über deinen Datensatz mit **zusammenfassen** der die Variablennamen und grundlegende Informationen liefert                                                                                                                                                                  | Verschaffe dir einen umfassenden Überblick über deinen Datensatz mit `summary(dataset)`                                                                                                                                                                       | 

**Grundlegende Datenmanipulation**

| **STATA**                                                                                                                                                                                                                                       | **R**                                                                                                                                                                                                                                            | 
| -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| Datensatzspalten werden oft als "Variablen" bezeichnet                                                                                                                                                                                 | Häufiger als "Spalten" oder manchmal als "Vektoren" oder "Variablen" bezeichnet                                                                                                                                                             | 
| Keine Notwendigkeit, den Datensatz zu spezifizieren                                                                                                                                                                                    | Bei jedem der folgenden Befehle musst du das Dataset angeben - siehe die Seite über [Daten bereinigen und Kernfunktionen] für Beispiele                                                                                                     | 
| Neue Variablen werden mit dem Befehl erstellt **erzeugen** *varname* =                                                                                                                                                                                         | Erstelle neue Variablen mit der Funktion `mutate(varname = )`. Siehe Seite über [Datenbereinigung und Kernfunktionen] für Details zu allen folgenden Punkten**dplyr** Funktionen.                                                                                                                                                                                                   | 
| Variablen werden umbenannt mit **umbenennen** *alter\_name neuer\_name*                                                                                                                                                                                                        | Spalten können umbenannt werden mit der Funktion `rename(new_name = old_name)`                                                                                                                                                                                           | 
| Variablen werden gelöscht mit **drop** *varname*                                                                                                                                                                                                         | Spalten können mit der Funktion entfernt werden `select()` mit dem Spaltennamen in der Klammer nach einem Minuszeichen                                                                                                                                                                                            | 
| Faktorvariablen können mit einer Reihe von Befehlen beschriftet werden, z. B. **Etikett definieren**                                                                                                                                                         | Du kannst Werte beschriften, indem du die Spalte in eine Faktorklasse umwandelst und Stufen angibst. Siehe Seite über [Faktoren]. Spaltennamen werden in der Regel nicht beschriftet, wie es in Stata der Fall ist.                         | 

**Deskriptive Analyse**

| **STATA**                                                                                                                                                                                                                                       | **R**                                                                                                                                                                                                                                            | 
| -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| Zählungen einer Variablen tabellarisch darstellen mit **tab** *varname*                                                                                                                                                                                 | Geben Sie den Datensatz und den Spaltennamen an `table()` wie zum Beispiel `table(dataset$colname)`. Alternativ kannst du auch `count(varname)` aus dem **dplyr**Paket, wie in [Daten gruppieren]                                                                                                                                                                                            | 
| Die Kreuztabelle von zwei Variablen in einer 2x2-Tabelle wird mit **tab** *varname1 varname2*                                                                                                                                                                     | verwenden `table(dataset$varname1, dataset$varname2` oder `count(varname1, varname2)`                                                                                                                                                                                                                                  | 

Diese Liste gibt zwar einen Überblick über die Grundlagen der Übersetzung von Stata-Befehlen in R, ist aber nicht vollständig. Es gibt noch viele andere großartige Ressourcen für Stata-Nutzer, die auf R umsteigen, die von Interesse sein könnten:

- [https://dss.princeton.edu/training/RStata.pdf](https://dss.princeton.edu/training/RStata.pdf)
- [https://clanfear.github.io/Stata\_R\_Equivalency/docs/r\_stata\_commands.html](https://clanfear.github.io/Stata_R_Equivalency/docs/r_stata_commands.html)
- [http://r4stats.com/books/r4stata/](http://r4stats.com/books/r4stata/)

## Von SAS

<!-- ======================================================= -->

**Von SAS zu R kommend**

SAS wird häufig in Behörden des öffentlichen Gesundheitswesens und in der akademischen Forschung eingesetzt. Der Umstieg auf eine neue Sprache ist zwar selten einfach, aber wenn du die wichtigsten Unterschiede zwischen SAS und R verstehst, kann es dir helfen, dich mit deiner Muttersprache in der neuen Sprache zurechtzufinden.
Im Folgenden werden die wichtigsten Unterschiede zwischen SAS und R bei der Datenverwaltung und der deskriptiven Analyse beschrieben.

**Allgemeine Hinweise**

| **SAS**                                                                                                                                                                                                                                       | **R**                                                                                                                                                                                                                                            | 
| -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| Online-Community verfügbar über [SAS Kundenbetreuung](https://support.sas.com/en/support-home.html)                                                                                                                                                                                                       | Online-Community verfügbar über RStudio, StackOverFlow und R-Blogger                                                                                                                                                                        | 
| Hilfe für Befehle verfügbar über `help [command]`                                                                                                                                                                                                      | Hilfe verfügbar durch [Funktion]? oder Suche im Hilfefenster                                                                                                                                                                                | 
| Code kommentieren mit `* TEXT ;` oder `/* TEXT */`                                                                                                                                                                                                                 | Code mit # kommentieren                                                                                                                                                                                                                     | 
| Fast alle Befehle sind eingebaut.  Benutzer können neue Funktionen mit SAS-Makros, SAS/IML, SAS Component Language (SCL) und neuerdings auch mit Prozeduren schreiben `Proc Fcmp` und `Proc Proto`                                                                 | R installiert sich mit **Basis**Funktionen, aber typischerweise müssen andere Pakete von CRAN installiert werden (siehe Seite über [R-Grundlagen])                                                                                                                                                                                                                     | 
| Die Analyse wird normalerweise durch das Schreiben eines SAS-Programms im Editor-Fenster durchgeführt.                                                                                                                                 | Die Analyse wird in einem R-Skript im RStudio-Quelltextfenster geschrieben. R Markdown-Skripte sind eine Alternative.                                                                                                                       | 

**Arbeitsverzeichnis**

| **SAS**                                                                                                                                                                                                                                       | **R**                                                                                                                                                                                                                                            | 
| -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| Arbeitsverzeichnisse können entweder absolut oder relativ zu einem Projektstammverzeichnis sein, indem das Stammverzeichnis mit `%let rootdir=/root path; %include "&rootdir/subfoldername/filename"`                                                                                                       | Arbeitsverzeichnisse können entweder absolut oder relativ zu einem Projektstammordner angegeben werden, indem Sie die **hier**Paket (siehe [Import und Export])                                                                                                                      | 
| Siehe aktuelles Arbeitsverzeichnis mit `%put %sysfunc(getoption(work));`                                                                                                                                                                                                | verwenden. `getwd()` oder `here()` (bei Verwendung der **hier** Paket), mit leeren Klammern                                                                                                                                                                                                                                 | 
| Arbeitsverzeichnis festlegen mit `libname "folder location"`                                                                                                                                                                                                      | verwenden `setwd("folder location")`, oder `set_here("folder location)` wenn Sie **hier** Paket                                                                                                                                                                                                                                  | 

**Daten importieren und anzeigen**

| **SAS**                                                                                                                                                                                                                                       | **R**                                                                                                                                                                                                                                            | 
| -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| verwenden `Proc Import` Verfahren oder mit `Data Step Infile` Anweisung.                                                                                                                                                                                                                             | verwenden `import()` von **rio**Paket für fast alle Dateitypen. Es gibt spezielle Funktionen als Alternativen (siehe [Importieren und Exportieren])                                                                                                                                                                                                                                  | 
| Das Einlesen von csv-Dateien erfolgt mit Hilfe von `Proc Import datafile="filename.csv" out=work.filename dbms=CSV; run;` ODER mit [Datenschritt Infile-Anweisung](http://support.sas.com/techsup/technote/ts673.pdf)                                                                                                                                                                                    | verwenden `import("filename.csv")`                                                                                                                                                                                                                                  | 
| Das Einlesen von xslx-Dateien erfolgt mit der `Proc Import datafile="filename.xlsx" out=work.filename dbms=xlsx; run;` ODER mit [Datenschritt Infile-Anweisung](http://support.sas.com/techsup/technote/ts673.pdf)                                                                                                                                                                                         | Verwende import("Dateiname.xlsx")                                                                                                                                                                                                           | 
| Durchsuche deine Daten in einem neuen Fenster, indem du das Explorer-Fenster öffnest und die gewünschte Bibliothek und den Datensatz auswählst                                                                                         | Zeige einen Datensatz im RStudio-Quellfenster mit View(dataset) an. Du musst den Namen deines Datensatzes in der Funktion in R angeben, da mehrere Datensätze gleichzeitig gehalten werden können. Beachte das große "V" in dieser Funktion | 

**Grundlegende Datenmanipulation**

| **SAS**                                                                                                                                                                                                                                       | **R**                                                                                                                                                                                                                                            | 
| -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| Datensatzspalten werden oft als "Variablen" bezeichnet                                                                                                                                                                                 | Häufiger als "Spalten" oder manchmal als "Vektoren" oder "Variablen" bezeichnet                                                                                                                                                             | 
| Um eine Variable zu erstellen, sind keine besonderen Verfahren erforderlich. Neue Variablen werden einfach durch die Eingabe des neuen Variablennamens, gefolgt von einem Gleichheitszeichen und einem Ausdruck für den Wert, erstellt | Erstelle neue Variablen mit der Funktion `mutate()`. Siehe Seite über [Datenbereinigung und Kernfunktionen] für Details zu allen folgenden Punkten**dplyr** Funktionen.                                                                                                                                                                                                   | 
| Variablen werden umbenannt mit `rename *old_name=new_name*`                                                                                                                                                                                                        | Spalten können umbenannt werden mit der Funktion `rename(new_name = old_name)`                                                                                                                                                                                           | 
| Variablen werden beibehalten mit `**keep**=varname`                                                                                                                                                                                                      | Spalten können mit der Funktion ausgewählt werden `select()` mit dem Spaltennamen in den Klammern                                                                                                                                                                                          | 
| Variablen werden mit der Funktion `**drop**=varname`                                                                                                                                                                                                     | Spalten können mit der Funktion entfernt werden `select()` mit dem Spaltennamen in der Klammer nach einem Minuszeichen                                                                                                                                                                                            | 
| Faktorvariablen können im Datenschritt mit den folgenden Funktionen gekennzeichnet werden `Label` Anweisung                                                                                                                                             | Du kannst Werte beschriften, indem du die Spalte in eine Faktorklasse umwandelst und Stufen angibst. Siehe Seite über [Faktoren]. Spaltennamen werden normalerweise nicht beschriftet.                                                      | 
| Datensätze werden ausgewählt mit `Where` oder `If` Anweisung im Datenschritt ausgewählt. Mehrere Auswahlbedingungen werden mit dem Befehl "und" getrennt.                                                                                                                                                                                                      | Die Auswahl der Datensätze erfolgt mit der Funktion `filter()` mit mehreren Auswahlbedingungen, die entweder durch einen UND-Operator (\&) oder ein Komma getrennt sind                                                                                                                                                                                        | 
| Datensätze werden kombiniert mit `Merge` Anweisung im Datenschritt kombiniert. Die zusammenzuführenden Datensätze müssen zunächst sortiert werden. `Proc Sort` Verfahren.                                                                                                                                                                                                      | **dplyr**Paket bietet ein paar Funktionen zum Zusammenführen von Datensätzen. Siehe Seite [Daten zusammenführen] für Details.                                                                                                                        | 

**Deskriptive Analyse**

| **SAS**                                                                                                                                                                                                                                       | **R**                                                                                                                                                                                                                                            | 
| -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| Verschaffe dir einen umfassenden Überblick über deinen Datensatz mit `Proc Summary` Prozedur, die die Variablennamen und beschreibenden Statistiken liefert                                                                                                                                                                  | Verschaffe dir einen umfassenden Überblick über deinen Datensatz mit `summary(dataset)` oder `skim(dataset)` aus dem **skimr** Paket                                                                                                                                                                       | 
| Zählungen einer Variable tabellarisch darstellen mit `proc freq data=Dataset; Tables varname; Run;`                                                                                                                                                                                  | Siehe die Seite über [Beschreibende Tabellen]. Die Optionen umfassen`table()` von **Basis** R, und `tabyl()` von **Hausmeister** Paket, unter anderem. Beachte, dass du den Datensatz und den Spaltennamen angeben musst, da R mehrere Datensätze speichert.                                                                                                                                                                        | 
| Die Kreuztabellierung von zwei Variablen in einer 2x2-Tabelle wird durchgeführt mit `proc freq data=Dataset; Tables rowvar*colvar; Run;`                                                                                                                                                   | Auch hier kannst du verwenden `table()`, `tabyl()`oder andere Optionen verwenden, wie sie in den [Beschreibende Tabellen] Seite beschrieben sind.                                                                                                                                                                                                              | 

**Einige nützliche Ressourcen:**

[R für SAS- und SPSS-Benutzer (2011)](https://www.amazon.com/SAS-SPSS-Users-Statistics-Computing/dp/1461406846/ref=sr_1_1?dchild=1&gclid=EAIaIQobChMIoqLOvf6u7wIVAhLnCh1c9w_DEAMYASAAEgJLIfD_BwE&hvadid=241675955927&hvdev=c&hvlocphy=9032185&hvnetw=g&hvqmt=e&hvrand=16854847287059617468&hvtargid=kwd-44746119007&hydadcr=16374_10302157&keywords=r+for+sas+users&qid=1615698213&sr=8-1)

[SAS und R, Zweite Ausgabe (2014)](https://www.amazon.com/SAS-Management-Statistical-Analysis-Graphics-dp-1466584491/dp/1466584491/ref=dp_ob_title_bk)

## Daten-Interoperabilität

<!-- ======================================================= -->

Siehe die [Importieren und Exportieren] Seite für Details darüber, wie das R-Paket**rio** Dateien wie STATA .dta Dateien, SAS .xpt und.sas7bdat Dateien, SPSS .por und.sav Dateien und viele andere importieren und exportieren kann.


