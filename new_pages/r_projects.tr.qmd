
# R projeleri {}  


Bir R projesi, çalışmanızın taşınabilir, bağımsız bir klasörde paketlenmesini sağlar. Proje klasörü içinde, ilgili tüm komutlar, veri dosyaları, şekiller/çıktılar ve geçmiş kayıtları alt klasörlerde saklanır. *Çalışma dizini* projenin ana klasörüdür.


## Önerilen kullanım 

R'ı kullanmanın yaygın, verimli ve sorunsuz bir yolu bu 3 unsuru birleştirmektir. Herbir proje, bir R klasörü içinde barındırılmaktadır. İlgili başlıklar aşağıdaki bölümlerde açıklanmıştır.

1) Bir **R projesi**  
     - Veriler, komut dosyaları, çıktılar vb. için ilgili klasörlerden oluşan bağımsız bir çalışma ortamı. 
2) Alternatif dosya yolakları için **here** paketi 
     - Dosya yolakları, R projesinin ana klasörüne göre yazılır - daha fazla bilgi için [İçe ve dışa aktar](importing.tr.qmd) bölümüne bakınız.  
3) İçe/dışa aktarma için **rio** paketi  
     - `import()` ve `export()`, herhangi bir dosya türünü uzantısına göre işler (ör. .csv, .xlsx, .png)
     
     


<!-- ======================================================= -->
## Bir R projesi yaratma {}

Bir R projesi oluşturmak için Dosya menüsünden "Yeni Proje" seçeneğini seçiniz.

* Proje için yeni bir klasör oluşturmak istiyorsanız, "Yeni dizin"i seçin ve projenizin nerede oluşturulmasını istediğinizi belirtiniz.  
* Projeyi mevcut bir klasör içinde oluşturmak istiyorsanız, "Mevcut dizin" seçeneğine tıklayıp ve klasörü belirtiniz.  
* Bir Github deposunu klonlamak istiyorsanız, üçüncü seçenek olan "Versiyon Kontrolü"nü seçip ve ardından "Git"i seçiniz. Daha fazla ayrıntı için [Versiyon kontrolü, Git ve Github ile işbirliği](collaboration.tr.qmd) hakkındaki sayfaya bakınız.  


```{r out.width = "75%", fig.align = "center", echo=F}
knitr::include_graphics(here::here("images", "create_project.png"))
```


R projesi, *.Rproj* dosyası içeren bir klasör şeklinde oluşturulacaktır. Bu dosya bir kısayoldur ve projenizi açmanın birincil yoludur. Dosya menüsünden "Projeyi Aç"ı seçerek de bir projeyi açabilirsiniz. Alternatif olarak, RStudio'nun en sağ üst tarafında bir R projesi simgesi ve mevcut R projelerinin açılır menüsünü göreceksiniz. 

Bir R projesinden çıkmak için ya yeni bir proje açın ya da açık olan projeyi kapatınız (Dosya - Projeyi Kapat).


### Projeler arasında geçiş yapma {.unnumbered}

Projeler arasında geçiş yapmak için, RStudio'nun sağ üst köşesindeki R projesi simgesini ve açılır menüyü tıklayınız. "Projeyi Kapat", "Projeyi Aç" seçeneklerini ve son projelerin bir listesini göreceksiniz.  

```{r out.width = "100%", fig.align = "center", echo=F}
knitr::include_graphics(here::here("images", "Rproject_dropdown.png"))
```


### Ayarlar {.unnumbered}  

Genellikle RStudio'yu her seferinde "temiz bir sayfa" ile başlatmanız önerilmektedir - yani, çalışma alanınız önceki oturumunuzdan **korunmamış** olarak. Bu, nesnelerinizin ve çıktılarınızın oturumdan oturuma devam etmeyeceği anlamına gelir (komut dosyalarınızı çalıştırarak bunları yeniden oluşturmanız gerekmektedir). Bu iyi bir durumdur, çünkü sizi daha iyi komutlar yazmaya ve uzun vadede hatalardan kaçınmaya zorlayacaktır.  

RStudio'yu her açılışta "temiz bir sayfaya" sahip olacak şekilde ayarlamak için:

* Araçlar menüsünden "Proje Seçenekleri"ni seçiniz.
* "Genel" sekmesinde, RStudio'yu başlangıçta .RData'yı çalışma alanına **geri yüklemeyecek** ve çıkışta çalışma alanını .RData'ya **kaydetmeyecek** şekilde ayarlayınız.


### Organizasyon {.unnumbered}  

Projenizde alt klasörlerin olması yaygın bir durumdur. "Veri", "komut dosyaları", "şekiller", "sunular" gibi klasörleri oluşturabilirsiniz. Bilgisayarınız için yeni bir klasör eklediğiniz gibi proje alt klasörlerini ekleyebilirsiniz. Alternatif olarak, R komutlarıyla yeni klasörlerin nasıl oluşturulacağını öğrenmek için [Dizin etkileşimleri](directories.tr.qmd) hakkındaki sayfaya bakınız. 


### Versiyon kontrolü {.unnumbered}  

Projelerinizde her zaman bir versiyon kontrol sistemi düşünmelisiniz. Komut dosyalarının adlarında (örneğin, "transmission_analysis_2020-10-03.R") ve bir "arşiv" klasöründe tarihlerin eklenmesi gibi basit bir yöntemi kullanabilirsiniz. Ayrıca açıklama, etiketler, yazarlar ve değişiklik günlüğü ile her komut dosyasının üst kısmında yorumlar da ekleyebilirsiniz.

Daha karmaşık bir yöntem, sürüm kontrolü için Github veya benzer bir platform kullanmayı içermektedir. [Versiyon kontrolü, Git ve Github ile işbirliği](collaboration.tr.qmd) hakkındaki sayfaya bakınız.

Bir ipucu olarak, "Dosyalarda Bul" aracını (Düzenle menüsü) kullanarak tüm projede veya klasörde arama yapabilmenizdir. Birden çok dosyada istediğiniz kelime/dizeleri arayabilir ve hatta değiştirebilirsiniz.  






## Örnekler

Aşağıda, bir R projesi içinden `here()` fonksiyonunu kullanarak bazı içe/dışa aktarma/kaydetme örnekleri verilmiştir. [İçe ve dışa aktar](importing.tr.qmd) sayfasında **here** paketinin kullanımı hakkında daha fazla bilgi edinebilirsiniz.


*R projenizdeki "data" klasöründen `linelist_raw.xlsx` dosyasını içe aktarın*  

```{r eval=F}
linelist <- import(here("data", "linelist_raw.xlsx"))
```

*R projenizdeki "data" klasörü içindeki "clean" klasörüne, R nesnesi 'linelist'i, "my_linelist.rds" olarak dışa aktarın.*   

```{r, eval=F}
export(linelist, here("data","clean", "my_linelist.rds"))
```

*En son yazdırılan grafiği, R projenizdeki "outputs" klasöründeki "epicurves" klasörüne "epicurve_2021-02-15.png" olarak kaydedin.*  

```{r, eval=F}
ggsave(here("outputs", "epicurves", "epicurve_2021-02-15.png"))
```




<!-- ======================================================= -->
## Kaynaklar {}

RStudio web sayfası - [R projelerini kullanma](https://support.rstudio.com/hc/en-us/articles/200526207-Using-Projects)




