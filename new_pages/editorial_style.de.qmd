# Redaktionelle und technische Hinweise {#editorial-style}

Auf dieser Seite beschreiben wir den philosophischen Ansatz, den Stil und die spezifischen redaktionellen Entscheidungen, die bei der Erstellung dieses Handbuchs getroffen wurden.

## Herangehensweise und Stil

Die potenzielle Zielgruppe für dieses Buch ist groß. Es wird sicherlich von Menschen genutzt werden, die neu in R sind, aber auch von erfahrenen R-Nutzern, die nach Best Practices und Tipps suchen. Es muss also sowohl zugänglich als auch prägnant sein. Unser Ansatz war daher, Folgendes zu bieten *gerade genug* Text zu erklären, damit auch jemand, der R noch nicht kennt, den Code anwenden und nachvollziehen kann, was der Code macht.

Ein paar andere Punkte:

- Dies ist ein Nachschlagewerk für Codes mit relativ kurzen Beispielen - *nicht* ein umfassendes Lehrbuch über R oder Datenwissenschaft
- Dies ist ein *R-Handbuch* für den Einsatz in der angewandten Epidemiologie - kein Handbuch über die Methoden oder die Wissenschaft der angewandten Epidemiologie
- Dies soll ein lebendiges Dokument sein - die optimalen R-Pakete für eine bestimmte Aufgabe ändern sich häufig und wir freuen uns über Diskussionen darüber, welche in diesem Handbuch hervorgehoben werden sollen

### R-Pakete {.unnumbered}

**So viele Auswahlmöglichkeiten**

Einer der schwierigsten Aspekte beim Erlernen von R ist es, zu wissen, welches R-Paket man für eine bestimmte Aufgabe verwenden soll. Es kommt häufig vor, dass man sich durch eine Aufgabe quält und erst später merkt - hey, es gibt ein R-Paket, das all das in einer Befehlszeile erledigt!

In diesem Handbuch versuchen wir, dir für jede Aufgabe mindestens zwei Möglichkeiten anzubieten: eine bewährte Methode (wahrscheinlich in **Basis** R oder **tidyverse**) und ein spezielles R-Paket, das speziell für diesen Zweck entwickelt wurde. Wir möchten, dass du ein paar Optionen hast, falls du ein bestimmtes Paket nicht herunterladen kannst oder es aus anderen Gründen nicht für dich geeignet ist.

Bei der Auswahl der zu verwendenden Pakete haben wir R-Pakete und -Ansätze bevorzugt, die von der Community getestet und geprüft wurden, die die Anzahl der in einer typischen Arbeitssitzung verwendeten Pakete minimieren, die stabil sind (sich nicht oft ändern) und die die Aufgabe einfach und sauber erledigen

Dieses Handbuch priorisiert generell R-Pakete und Funktionen aus der **tidyverse**. Tidyverse ist eine Sammlung von R-Paketen, die für die Datenwissenschaft entwickelt wurden und die zugrunde liegende Grammatik und Datenstrukturen teilen. Alle tidyverse-Pakete können über die Funktion "R" installiert oder geladen werden. **tidyverse** Paket installiert oder geladen werden. Lies mehr auf der [tidyverse Website](https://www.tidyverse.org/).

Falls zutreffend, bieten wir auch Code-Optionen mit **Basis** R - die Pakete und Funktionen, die bei der Installation von R mitgeliefert werden. Wir sind uns bewusst, dass einige der Leser dieses Buches vielleicht kein zuverlässiges Internet haben, um zusätzliche Pakete herunterzuladen.

**Funktionen explizit mit Paketen verknüpfen**

In R-Tutorials ist es oft frustrierend, wenn eine Funktion im Code gezeigt wird, du aber nicht weißt, aus welchem Paket sie stammt! Wir versuchen, diese Situation zu vermeiden.

Im Text sind die Paketnamen fett gedruckt (z. B. **dplyr**) und Funktionen werden wie folgt geschrieben: `mutate()`. Wir bemühen uns, explizit anzugeben, aus welchem Paket eine Funktion stammt, entweder durch einen Verweis auf das Paket in der Nähe des Textes oder durch die explizite Angabe des Pakets im Code wie hier: `dplyr::mutate()`. Das sieht vielleicht redundant aus, aber wir tun es absichtlich.

Siehe die Seite über [R-Grundlagen] um mehr über Pakete und Funktionen zu erfahren.

### Code-Stil {.unnumbered}

Im Handbuch verwenden wir häufig "neue Zeilen", die unseren Code "lang" erscheinen lassen. Das tun wir aus mehreren Gründen:

- Wir können erklärende Kommentare schreiben mit `#` die neben jedem kleinen Teil des Codes stehen
- Im Allgemeinen ist längerer (vertikaler) Code leichter zu lesen.
- Er ist auf einem schmalen Bildschirm leichter zu lesen (kein seitliches Scrollen erforderlich)
- Anhand der Einrückungen kann man leichter erkennen, welche Argumente zu welcher Funktion gehören

Infolgedessen kann der Code, der *könnte* wie folgt geschrieben werden:

```{r, eval=F}
linelist %>% 
  group_by(hospital) %>%  # group rows by hospital
  slice_max(date, n = 1, with_ties = F) # if there's a tie (of date), take the first row
```

...wird so geschrieben:

```{r, eval=F}
linelist %>% 
  group_by(hospital) %>% # group rows by hospital
  slice_max(
    date,                # keep row per group with maximum date value 
    n = 1,               # keep only the single highest row 
    with_ties = F)       # if there's a tie (of date), take the first row
```

R-Code wird im Allgemeinen nicht durch neue Zeilen oder Einrückungen beeinflusst. Wenn du beim Schreiben von Code eine neue Zeile nach einem Komma einleitest, werden automatische Einrückungsmuster angewendet.

Wir verwenden auch viele Leerzeichen (z. B. `n = 1` anstelle von `n=1`), weil das einfacher zu lesen ist. Sei nett zu den Leuten, die deinen Code lesen!

### Nomenklatur {.unnumbered}

In diesem Handbuch beziehen wir uns im Allgemeinen auf "Spalten" und "Zeilen" anstelle von "Variablen" und "Beobachtungen". Wie in dieser Fibel erklärt ["Aufgeräumte Daten"](https://tidyr.tidyverse.org/articles/tidy-data.html) erläutert, bestehen die meisten epidemiologischen statistischen Datensätze strukturell aus Zeilen, Spalten und Werten.

*Variablen* enthalten die Werte, die dasselbe zugrundeliegende Attribut messen (z. B. die Altersgruppe, das Ergebnis oder das Datum des Auftretens). *Beobachtungen* enthalten alle Werte, die an der gleichen Einheit gemessen werden (z. B. eine Person, ein Standort oder eine Laborprobe). Diese Aspekte lassen sich also schwerer greifbar definieren.

In "ordentlichen" Datensätzen ist jede Spalte eine Variable, jede Zeile eine Beobachtung und jede Zelle ein einzelner Wert. Manche Datensätze, auf die du triffst, passen jedoch nicht in dieses Schema - ein Datensatz mit "breitem" Format kann eine Variable enthalten, die auf mehrere Spalten aufgeteilt ist (siehe ein Beispiel im Abschnitt [Pivotierung von Daten] Seite). Ebenso können Beobachtungen auf mehrere Zeilen aufgeteilt sein.

Der größte Teil dieses Handbuchs befasst sich mit der Verwaltung und Umwandlung von Daten. Daher ist der Verweis auf die konkreten Datenstrukturen von Zeilen und Spalten wichtiger als die abstrakteren Beobachtungen und Variablen. Ausnahmen gibt es vor allem auf den Seiten zur Datenanalyse, wo du mehr Verweise auf Variablen und Beobachtungen finden wirst.

### Hinweise {.unnumbered}

Hier sind die Arten von Hinweisen, die du im Handbuch finden kannst:

<span style="color: black;">***HINWEIS:*** Dies ist ein Hinweis</span>  
<span style="color: darkgreen;">***TIPP:*** Dies ist ein Tipp.</span>  
<span style="color: orange;">***VORSICHT!*** Dies ist ein Vorsichtshinweis.</span>  
<span style="color: red;">***GEFAHR!*** Dies ist eine Warnung.</span>

## Redaktionelle Entscheidungen

Im Folgenden dokumentieren wir wichtige redaktionelle Entscheidungen zur Auswahl von Paketen und Funktionen. Wenn du anderer Meinung bist oder ein neues Tool vorschlagen möchtest, nimm bitte an einer Diskussion in unserem [Github-Seite](https://github.com/appliedepi/epirhandbook_eng).

**Tabelle der Paket-, Funktions- und anderen redaktionellen Entscheidungen**

| Thema                                        | Berücksichtigt                     | Ergebnis                                    | Kurze Begründung                                                                                                      | 
| -------------------------------------------- | ---------------------------------- | ------------------------------------------- | --------------------------------------------------------------------------------------------------------------------- |
| Allgemeiner Kodierungsansatz                 | **tidyverse**, **data.table**, **Basis**                                 | **aufgeräumt** mit einer Seite über **Daten.Tabelle**, und Erwähnungen von **Basis** Alternativen für Leser ohne Internet                      | **tidyverse** Lesbarkeit, Allgemeingültigkeit, meistgelehrt                                                                        | 
| Paket laden                                  | `library()`,`install.packages()`, `require()`, **pacman**                                  | **pacman**                                            | Verkürzt und vereinfacht den Code für die meisten Anwendungsfälle, in denen mehrere Pakete installiert/geladen werden | 
| Import und Export                            | **rio**, viele andere Pakete              | **rio**                                            | Einfachheit für viele Dateitypen                                                                                      | 
| Gruppierung für zusammenfassende Statistiken | **dplyr** `group_by()`, **stats** `aggregate()`                                  | **dplyr** `group_by()`                                           | Im Einklang mit **tidyverse** Schwerpunkt                                                                                                      | 
| Pivotieren                                   | **tidyr** (Pivot-Funktionen), **reshape2** (Schmelzen/Gießen), **tidyr** (ausbreiten/sammeln)              | **tidyr** (Pivot-Funktionen)                         | **neu formen2** ist im Ruhestand, **tidyr** verwendet Pivot-Funktionen ab v1.0.0                                                                                                   | 
| Saubere Spaltennamen                         | **linelist**, **Hausmeister**                                 | **Hausmeister**                                            | Konsolidierung von Paketen hervorgehoben                                                                              | 
| Epiweeks                                     | **lubridate**, **aweek**, **tsibble**, **zoo**                                 | **lubridate** allgemein, die anderen für spezielle Fälle | **lubridate's** Flexibilität, Konsistenz, Paketpflege Aussichten                                                                     | 
| ggplot-Etiketten                             | `labs()`, `ggtitle()`/`ylab()`/`xlab()`                                 | `labs()`                                            | alle Etiketten an einem Ort, Einfachheit                                                                              | 
| In Faktor umrechnen                          | `factor()`, **forcats**                                 | **forcats**                                            | seine verschiedenen Funktionen auch in Faktor umwandeln im gleichen Befehl                                            | 
| Epidemische Kurven                           | **Inzidenz**, **ggplot2**, **EpiCurve**                                 | **Inzidenz2** als schnell, **ggplot2** wie detailliert                              | Verlässlichkeit                                                                                                       | 
| Verkettung                                   | `paste()`, `paste0()`, `str_glue()`, `glue()`                                 | `str_glue()`                                            | Einfachere Syntax als Einfügefunktionen; innerhalb **stringr**                                                                   | 

## Wichtige Überarbeitungen

| Datum                                        | Wichtige Änderungen                | 
| -------------------------------------------- | ---------------------------------- |
| 10\. Mai 2021                                 | Veröffentlichung der Version 1.0.0 | 
| 20 Nov 2022                                  | Veröffentlichung der Version 1.0.1 | 

**NEWS**
Mit der Version 1.0.1 wurden die folgenden Änderungen eingeführt:

- Update auf R Version 4.2
- Datenbereinigung: umgestellt {linelist} auf {matchmaker}, unnötige Zeile entfernt aus `case_when()` Beispiel
- Daten: umgestellt {linelist} `guess_date()` zu {parsedate} `parse_date()`
- Pivotierung: leichte Aktualisierung auf `pivot_wider()` `id_cols=`
- Analyse der Umfrage: geschaltet `plot_age_pyramid()` zu `age_pyramid()` leichte Änderung des Codes für Auenlandschaften
- Wärmeplots: hinzugefügt `ungroup()` zu `agg_weeks` chunk
- Interaktive Plots: hinzugefügt `ungroup()` zum Chunk hinzugefügt, der die `agg_weeks` so dass `expand()` wie vorgesehen funktioniert
- Zeitreihen: hinzugefügt `data.frame()` um Objekte innerhalb aller `trending::fit()` und `predict()` Befehle
- Analyse der Kombinationen: Switch `case_when()` zu `ifelse()` und füge optionale `across()` Code für die Aufbereitung der Daten
- Übertragungsketten: Update auf neuere Version von {epicontacts}

## Sitzungsinformationen (R, RStudio, Pakete)

Im Folgenden findest du Informationen zu den Versionen von R, RStudio und den R-Paketen, die während dieser Ausgabe des Handbuchs verwendet wurden.

```{r}
sessioninfo::session_info()
```


