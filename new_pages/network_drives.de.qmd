# R auf Netzlaufwerken {#network-drives}

<!-- ======================================================= -->

## Übersicht {  }

Die Verwendung von R auf gemeinsam genutzten Netzwerk- oder "Firmen"-Laufwerken kann zusätzliche Herausforderungen mit sich bringen. Auf dieser Seite findest du Ansätze, häufige Fehler und Vorschläge zur Fehlerbehebung, die wir aus unserer Erfahrung mit diesen Problemen gewonnen haben. Dazu gehören auch Tipps für besonders heikle Situationen mit R Markdown.

**R auf Netzwerklaufwerken verwenden: Übergreifende Grundsätze**

1) Du musst Administratorrechte für deinen Computer erhalten. RStudio muss so eingerichtet werden, dass es als Administrator läuft.
2) Speichere Pakete in einer Bibliothek auf einem Laufwerk mit Buchstaben (z.B. "C:"), wenn möglich. Verwende eine Paketbibliothek, deren Pfad mit "\\" beginnt, so wenig wie möglich.
3) die **rmarkdown** Paket muss **nicht** in einer "\\"-Paketbibliothek sein, da es sich dann nicht mit TinyTex oder Pandoc verbinden kann.

## RStudio als Administrator

Wenn du auf das RStudio-Symbol klickst, um RStudio zu öffnen, musst du mit der rechten Maustaste klicken. Abhängig von deinem Computer wird dir möglicherweise die Option "Als Administrator ausführen" angezeigt. Andernfalls kann es sein, dass du die Option "Eigenschaften" auswählst (dann sollte ein Fenster mit der Option "Kompatibilität" erscheinen, in dem du ein Häkchen bei "Als Administrator ausführen" setzen kannst).

## Nützliche Befehle

Im Folgenden findest du einige nützliche Befehle, um Probleme mit R auf Netzlaufwerken zu beheben.

Du kannst den/die Pfad(e) zu den Paketbibliotheken zurückgeben, die R verwendet. Sie werden in der Reihenfolge aufgelistet, die R zum Installieren/Laden/Suchen von Paketen verwendet. Wenn du also möchtest, dass R eine andere Standardbibliothek verwendet, kannst du die Reihenfolge der Pfade ändern (siehe unten).

```{r, eval=F}
# Find libraries
.libPaths()                   # Your library paths, listed in order that R installs/searches. 
                              # Note: all libraries will be listed, but to install to some (e.g. C:) you 
                              # may need to be running RStudio as an administrator (it won't appear in the 
                              # install packages library drop-down menu) 
```

Möglicherweise möchtest du die Reihenfolge der von R verwendeten Paketbibliotheken ändern. Zum Beispiel, wenn R eine Bibliothek verwendet, die mit "\\" beginnt, und eine, die mit einem Buchstaben beginnt, z. B. "D:". Du kannst die Reihenfolge der `.libPaths()` mit dem folgenden Code anpassen.

```{r, eval=F}
# Switch order of libraries
# this can effect the priority of R finding a package. E.g. you may want your C: library to be listed first
myPaths <- .libPaths() # get the paths
myPaths <- c(myPaths[2], myPaths[1]) # switch them
.libPaths(myPaths) # reassign them
```

Wenn du Probleme mit der Verbindung von R Markdown zu Pandoc hast, kannst du mit diesem Code herausfinden, wo RStudio denkt, dass deine Pandoc-Installation ist.

```{r, eval=F}
# Find Pandoc
Sys.getenv("RSTUDIO_PANDOC")  # Find where RStudio thinks your Pandoc installation is
```

Wenn du sehen willst, aus welcher Bibliothek ein Paket geladen wird, probiere den folgenden Code aus:

```{r, eval=F}
# Find a package
# gives first location of package (note order of your libraries)
find.package("rmarkdown", lib.loc = NULL, quiet = FALSE, verbose = getOption("verbose")) 
```

<!-- ======================================================= -->

## Fehlersuche bei häufigen Fehlern {  }

**"Failed to compile...tex in rmarkdown"**

- Überprüfe die Installation von TinyTex, oder installiere TinyTex auf C:. Siehe die [R-Grundlagen] Seite, wie du TinyTex installierst.

```{r, eval=F}
# check/install tinytex, to C: location
tinytex::install_tinytex()
tinytex:::is_tinytex() # should return TRUE (note three colons)
```

**Internet-Routinen können nicht geladen werden**

Zum Beispiel, `Error in tools::startDynamicHelp() : internet routines cannot be loaded`

- Versuche, die 32-Bit-Version von RStudio über Extras/Globale Optionen auszuwählen.
  - Hinweis: Wenn die 32-Bit-Version nicht im Menü erscheint, stelle sicher, dass du nicht RStudio v1.2 verwendest.
- Alternativ kannst du versuchen, R zu deinstallieren und mit einer anderen Bit-Version (32 statt 64) neu zu installieren.

**C: Bibliothek erscheint nicht als Option, wenn ich versuche, Pakete manuell zu installieren**

- Führe RStudio als Administrator aus, dann wird diese Option angezeigt.
- Um RStudio so einzustellen, dass es immer als Administrator ausgeführt wird (vorteilhaft, wenn du ein RProjekt verwendest, bei dem du zum Öffnen nicht auf das RStudio-Symbol klickst), klicke mit der rechten Maustaste auf das Rstudio-Symbol

Das Bild unten zeigt, wie du die Bibliothek, in die ein Paket installiert werden soll, manuell auswählen kannst. Dieses Fenster erscheint, wenn du den Bereich Pakete RStudio öffnest und auf "Installieren" klickst.

```{r, warning=F, message=F, echo=F}
knitr::include_graphics(here::here("images", "network_install.png"))
```

**Pandoc 1 Fehler**

Wenn du beim Stricken von R Markdowns-Skripten auf Netzlaufwerken den "Pandoc-Fehler 1" erhältst:

- Von mehreren Bibliotheksstandorten sollte derjenige mit einem Laufwerk mit Buchstaben zuerst aufgeführt werden (siehe Codes oben)
- Die obige Lösung funktioniert, wenn du auf einem lokalen Laufwerk strickst, aber bei einer vernetzten Internetverbindung
- Weitere Tipps findest du hier: [https://ciser.cornell.edu/rmarkdown-knit-to-html-word-pdf/](https://ciser.cornell.edu/rmarkdown-knit-to-html-word-pdf/)

**Pandoc Fehler 83**

Der Fehler sieht in etwa so aus: `can't find file...rmarkdown...lua...`. Das bedeutet, dass diese Datei nicht gefunden werden konnte.

Siehe [https://stackoverflow.com/questions/58830927/rmarkdown-unable-to-locate-lua-filter-when-knitting-to-word](https://stackoverflow.com/questions/58830927/rmarkdown-unable-to-locate-lua-filter-when-knitting-to-word)

Möglichkeiten:

1) Das Rmarkdown-Paket ist nicht installiert
2) Das Rmarkdown-Paket ist nicht auffindbar
3) Ein Problem mit Adminrechten.

Es ist möglich, dass R nicht in der Lage ist, die **rmarkdown** Paketdatei nicht finden kann. Prüfe also, welche Bibliothek die **rmarkdown** Paket befindet (siehe Code oben). Wenn das Paket in einer Bibliothek installiert ist, auf die nicht zugegriffen werden kann (z. B. weil sie mit "\\" beginnt), solltest du es manuell nach C: oder in eine andere Bibliothek auf einem benannten Laufwerk verschieben. Beachte, dass das **rmarkdown** sich mit der TinyTex-Installation verbinden können muss, also nicht in einer Bibliothek auf einem Netzlaufwerk liegen kann.

**Pandoc Fehler 61**

Zum Beispiel: `Error: pandoc document conversion failed with error 61`  oder `Could not fetch...`

- Versuche, RStudio als Administrator auszuführen (Rechtsklick auf das Symbol, wähle "Als Administrator ausführen", siehe obige Anweisungen)
- Prüfe auch, ob das Paket, das nicht erreicht werden konnte, in die C:-Bibliothek verschoben werden kann.

**LaTex-Fehler (siehe unten)**

Ein Fehler wie: `! Package pdftex.def Error: File 'cict_qm2_2020-06-29_files/figure-latex/unnamed-chunk-5-1.png' not found: using draft setting.` oder `Error: LaTeX failed to compile file_name.tex.`

- Siehe [https://yihui.org/tinytex/r/#debugging](https://yihui.org/tinytex/r/#debugging) für Tipps zur Fehlersuche.
- Siehe file\_name.log für weitere Informationen.

**Pandoc Fehler 127**

Das könnte ein RAM-Problem (Speicherplatz) sein. Starten Sie Ihre R-Sitzung neu und versuchen Sie es erneut.

**Netzlaufwerke zuordnen**

Das Mappen eines Netzlaufwerks kann riskant sein. Sprich mit deiner IT-Abteilung, bevor du dies versuchst.

Ein Tipp, den wir von dieser Seite übernommen haben [Forumsdiskussion](https://stackoverflow.com/questions/48161177/r-markdown-openbinaryfile-does-not-exist-no-such-file-or-directory/55616529?noredirect=1#comment97966859_55616529):

Wie kann man eine Datei "über ein zugeordnetes Netzlaufwerk" öffnen?

- Zuerst musst du wissen, auf welches Netzlaufwerk du zugreifen willst.
- Klicke im Windows-Dateimanager mit der rechten Maustaste auf "Dieser PC" und wähle "Ein Netzlaufwerk zuordnen".
- Gehe durch den Dialog, um den Netzwerkspeicherort von vorhin als Laufwerk mit Buchstaben zu definieren.
- Jetzt hast du zwei Möglichkeiten, um zu der Datei zu gelangen, die du öffnen willst. Die Verwendung des Pfads mit dem Laufwerksbuchstaben sollte funktionieren.

**Fehler in install.packages()**

Wenn du eine Fehlermeldung erhältst, in der ein "lock"-Verzeichnis erwähnt wird, zum Beispiel: `Error in install.packages : ERROR: failed to lock directory...`

Schau in deiner Paketbibliothek nach und du wirst einen Ordner sehen, dessen Name mit "00LOCK" beginnt. Probiere die folgenden Tipps aus:

- Lösche das Verzeichnis des Ordners "00LOCK" manuell aus deiner Paketbibliothek. Versuche, das Paket erneut zu installieren.
- Du kannst es auch mit dem Befehl `pacman::p_unlock()` ausprobieren (du kannst diesen Befehl auch in das R-Profil aufnehmen, damit er bei jedem Öffnen des Projekts ausgeführt wird). Versuche dann, das Paket erneut zu installieren. Es kann mehrere Versuche brauchen.
- Versuche, RStudio im Administratormodus zu starten und die Pakete nacheinander zu installieren.
- Wenn alles andere fehlschlägt, installiere das Paket in eine andere Bibliothek oder einen anderen Ordner (z. B. Temp) und kopiere dann den Ordner des Pakets manuell in die gewünschte Bibliothek.


