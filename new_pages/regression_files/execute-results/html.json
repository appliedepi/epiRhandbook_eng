{
  "hash": "747d81f90a204d35bd7b85d08f706d55",
  "result": {
    "engine": "knitr",
    "markdown": "# Univariate and multivariable regression { }\n\n<!-- ======================================================= -->\n\nThis page demonstrates the use of **base** R regression functions such as `glm()` and the **gtsummary** package to \nlook at associations between variables (e.g. odds ratios, risk ratios and hazard\nratios). It also uses functions like `tidy()` from the **broom** package to clean-up regression outputs.  \n\n1.  Univariate: two-by-two tables. \n2.  Stratified: Mantel–Haenszel estimates.  \n3.  Multivariable: variable selection, model selection, final table.\n4.  Forest plots.\n\nFor Cox proportional hazard regression, see the [Survival analysis](survival_analysis.qmd) page.  \n\n<span style=\"color: black;\">**_NOTE:_** We use the term *multivariable* to refer to a regression with multiple explanatory variables. In this sense a *multivariate* model would be a regression with several outcomes - see this [editorial](https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3518362/) for detail </span>. \n\n<!-- ======================================================= -->\n\n## Preparation {  }\n\n\n### Load packages {.unnumbered}\n\nThis code chunk shows the loading of packages required for the analyses. In this handbook we emphasize `p_load()` from **pacman**, which installs the package if necessary *and* loads it for use. You can also load installed packages with  `library()` from **base** R. See the page on [R basics](basics.qmd) for more information on R packages.  \n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(\n  rio,          # File import\n  here,         # File locator\n  tidyverse,    # data management + ggplot2 graphics, \n  stringr,      # manipulate text strings \n  purrr,        # loop over objects in a tidy way\n  gtsummary,    # summary statistics and tests \n  broom,        # tidy up results from regressions\n  lmtest,       # likelihood-ratio tests\n  parameters,   # alternative to tidy up results from regressions\n  see          # alternative to visualise forest plots\n  )\n```\n:::\n\n\n### Import data {.unnumbered}\n\nWe import the dataset of cases from a simulated Ebola epidemic. If you want to follow along, <a href='https://github.com/appliedepi/epirhandbook_eng/raw/master/data/case_linelists/linelist_cleaned.rds' class='download-button'>click to download the \"clean\" linelist</a> (as .rds file). Import your data with the `import()` function from the **rio** package (it accepts many file types like .xlsx, .rds, .csv - see the [Import and export](importing.qmd) page for details).  \n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: The `trust` argument of `import()` should be explicit for serialization formats\nas of rio 1.0.3.\nℹ Missing `trust` will be set to FALSE by default for RDS in 2.0.0.\nℹ The deprecated feature was likely used in the rio package.\n  Please report the issue at <https://github.com/gesistsa/rio/issues>.\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# import the linelist\nlinelist <- import(\"linelist_cleaned.rds\")\n```\n:::\n\n\nThe first 50 rows of the linelist are displayed below.\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-3b537f82b94220a9a6a1\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-3b537f82b94220a9a6a1\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"5fe599\",\"8689b7\",\"11f8ea\",\"b8812a\",\"893f25\",\"be99c8\",\"07e3e8\",\"369449\",\"f393b4\",\"1389ca\",\"2978ac\",\"57a565\",\"fc15ef\",\"2eaa9a\",\"bbfa93\",\"c97dd9\",\"f50e8a\",\"3a7673\",\"7f5a01\",\"ddddee\",\"99e8fa\",\"567136\",\"9371a9\",\"bc2adf\",\"403057\",\"8bd1e8\",\"f327be\",\"42e1a9\",\"90e5fe\",\"959170\",\"8ebf6e\",\"e56412\",\"6d788e\",\"a47529\",\"67be4e\",\"da8ecb\",\"148f18\",\"2cb9a5\",\"f5c142\",\"70a9fe\",\"3ad520\",\"062638\",\"c76676\",\"baacc1\",\"497372\",\"23e499\",\"38cc4a\",\"3789ee\",\"c71dcd\",\"6b70f0\"],[4,4,2,3,3,3,4,4,4,4,4,4,6,5,6,9,10,8,7,6,7,6,8,6,10,8,6,12,5,8,7,9,11,5,8,5,6,11,7,9,7,8,9,12,13,9,8,10,8,7],[\"2014-05-08\",null,null,\"2014-05-04\",\"2014-05-18\",\"2014-05-03\",\"2014-05-22\",\"2014-05-28\",null,null,\"2014-05-30\",\"2014-05-28\",\"2014-06-14\",\"2014-06-07\",\"2014-06-09\",null,null,null,\"2014-06-23\",\"2014-06-18\",\"2014-06-24\",null,null,\"2014-07-03\",null,\"2014-07-10\",\"2014-06-14\",null,\"2014-06-18\",\"2014-06-29\",\"2014-07-02\",\"2014-07-12\",\"2014-07-12\",\"2014-06-13\",\"2014-07-15\",\"2014-06-20\",null,null,\"2014-07-20\",null,\"2014-07-12\",\"2014-07-19\",\"2014-07-18\",\"2014-07-18\",\"2014-07-27\",null,\"2014-07-19\",\"2014-07-26\",\"2014-07-24\",null],[\"2014-05-13\",\"2014-05-13\",\"2014-05-16\",\"2014-05-18\",\"2014-05-21\",\"2014-05-22\",\"2014-05-27\",\"2014-06-02\",\"2014-06-05\",\"2014-06-05\",\"2014-06-06\",\"2014-06-13\",\"2014-06-16\",\"2014-06-17\",\"2014-06-18\",\"2014-06-19\",\"2014-06-22\",\"2014-06-23\",\"2014-06-25\",\"2014-06-26\",\"2014-06-28\",\"2014-07-02\",\"2014-07-08\",\"2014-07-09\",\"2014-07-09\",\"2014-07-10\",\"2014-07-12\",\"2014-07-12\",\"2014-07-13\",\"2014-07-13\",\"2014-07-14\",\"2014-07-15\",\"2014-07-16\",\"2014-07-17\",\"2014-07-17\",\"2014-07-18\",\"2014-07-19\",\"2014-07-22\",\"2014-07-22\",\"2014-07-24\",\"2014-07-24\",\"2014-07-25\",\"2014-07-25\",\"2014-07-27\",\"2014-07-29\",\"2014-07-30\",null,\"2014-08-01\",\"2014-08-02\",\"2014-08-03\"],[\"2014-05-15\",\"2014-05-14\",\"2014-05-18\",\"2014-05-20\",\"2014-05-22\",\"2014-05-23\",\"2014-05-29\",\"2014-06-03\",\"2014-06-06\",\"2014-06-07\",\"2014-06-08\",\"2014-06-15\",\"2014-06-17\",\"2014-06-17\",\"2014-06-20\",\"2014-06-19\",\"2014-06-23\",\"2014-06-24\",\"2014-06-27\",\"2014-06-28\",\"2014-06-29\",\"2014-07-03\",\"2014-07-09\",\"2014-07-09\",\"2014-07-11\",\"2014-07-11\",\"2014-07-13\",\"2014-07-14\",\"2014-07-14\",\"2014-07-13\",\"2014-07-14\",\"2014-07-17\",\"2014-07-17\",\"2014-07-18\",\"2014-07-19\",\"2014-07-20\",\"2014-07-20\",\"2014-07-22\",\"2014-07-24\",\"2014-07-26\",\"2014-07-24\",\"2014-07-27\",\"2014-07-25\",\"2014-07-27\",\"2014-07-31\",\"2014-08-01\",\"2014-08-03\",\"2014-08-02\",\"2014-08-02\",\"2014-08-04\"],[null,\"2014-05-18\",\"2014-05-30\",null,\"2014-05-29\",\"2014-05-24\",\"2014-06-01\",\"2014-06-07\",\"2014-06-18\",\"2014-06-09\",\"2014-06-15\",null,\"2014-07-09\",null,\"2014-06-30\",\"2014-07-11\",\"2014-07-01\",\"2014-06-25\",\"2014-07-06\",\"2014-07-02\",\"2014-07-09\",\"2014-07-07\",\"2014-07-20\",null,\"2014-07-22\",\"2014-07-16\",\"2014-07-14\",\"2014-07-20\",\"2014-07-16\",\"2014-07-19\",\"2014-07-27\",\"2014-07-19\",null,\"2014-07-26\",\"2014-08-14\",\"2014-08-01\",\"2014-07-23\",\"2014-08-28\",\"2014-07-28\",\"2014-07-19\",null,\"2014-08-03\",null,null,null,\"2014-08-06\",\"2014-08-21\",\"2014-09-13\",\"2014-08-04\",null],[null,\"Recover\",\"Recover\",null,\"Recover\",\"Recover\",\"Recover\",\"Death\",\"Recover\",\"Death\",\"Death\",\"Death\",\"Recover\",\"Recover\",null,\"Recover\",null,null,\"Death\",\"Death\",\"Recover\",null,null,null,\"Death\",null,\"Death\",\"Death\",null,\"Death\",\"Recover\",\"Death\",\"Recover\",\"Death\",\"Recover\",null,\"Death\",\"Recover\",\"Recover\",\"Death\",null,null,\"Death\",\"Death\",\"Death\",\"Death\",\"Recover\",null,\"Death\",\"Death\"],[\"m\",\"f\",\"m\",\"f\",\"m\",\"f\",\"f\",\"f\",\"m\",\"f\",\"m\",\"m\",\"m\",\"f\",\"f\",\"m\",\"f\",\"f\",\"f\",\"f\",\"m\",\"m\",\"f\",\"m\",\"f\",\"m\",\"m\",\"f\",\"m\",\"f\",\"f\",\"f\",\"m\",\"m\",\"f\",\"m\",\"f\",\"f\",\"f\",\"m\",\"f\",\"m\",\"f\",\"m\",\"m\",\"f\",\"m\",\"f\",\"m\",\"m\"],[2,3,56,18,3,16,16,0,61,27,12,42,19,7,7,13,35,17,11,11,19,54,14,28,6,3,31,6,67,14,10,21,20,45,1,12,3,15,20,36,7,13,14,3,10,1,0,20,26,14],[\"years\",\"years\",\"years\",\"years\",\"years\",\"years\",\"years\",\"years\",\"years\",\"years\",\"years\",\"years\",\"years\",\"years\",\"years\",\"years\",\"years\",\"years\",\"years\",\"years\",\"years\",\"years\",\"years\",\"years\",\"years\",\"years\",\"years\",\"years\",\"years\",\"years\",\"years\",\"years\",\"years\",\"years\",\"years\",\"years\",\"years\",\"years\",\"years\",\"years\",\"years\",\"years\",\"years\",\"years\",\"years\",\"years\",\"years\",\"years\",\"years\",\"years\"],[2,3,56,18,3,16,16,0,61,27,12,42,19,7,7,13,35,17,11,11,19,54,14,28,6,3,31,6,67,14,10,21,20,45,1,12,3,15,20,36,7,13,14,3,10,1,0,20,26,14],[\"0-4\",\"0-4\",\"50-69\",\"15-19\",\"0-4\",\"15-19\",\"15-19\",\"0-4\",\"50-69\",\"20-29\",\"10-14\",\"30-49\",\"15-19\",\"5-9\",\"5-9\",\"10-14\",\"30-49\",\"15-19\",\"10-14\",\"10-14\",\"15-19\",\"50-69\",\"10-14\",\"20-29\",\"5-9\",\"0-4\",\"30-49\",\"5-9\",\"50-69\",\"10-14\",\"10-14\",\"20-29\",\"20-29\",\"30-49\",\"0-4\",\"10-14\",\"0-4\",\"15-19\",\"20-29\",\"30-49\",\"5-9\",\"10-14\",\"10-14\",\"0-4\",\"10-14\",\"0-4\",\"0-4\",\"20-29\",\"20-29\",\"10-14\"],[\"0-4\",\"0-4\",\"55-59\",\"15-19\",\"0-4\",\"15-19\",\"15-19\",\"0-4\",\"60-64\",\"25-29\",\"10-14\",\"40-44\",\"15-19\",\"5-9\",\"5-9\",\"10-14\",\"35-39\",\"15-19\",\"10-14\",\"10-14\",\"15-19\",\"50-54\",\"10-14\",\"25-29\",\"5-9\",\"0-4\",\"30-34\",\"5-9\",\"65-69\",\"10-14\",\"10-14\",\"20-24\",\"20-24\",\"45-49\",\"0-4\",\"10-14\",\"0-4\",\"15-19\",\"20-24\",\"35-39\",\"5-9\",\"10-14\",\"10-14\",\"0-4\",\"10-14\",\"0-4\",\"0-4\",\"20-24\",\"25-29\",\"10-14\"],[\"Other\",\"Missing\",\"St. Mark's Maternity Hospital (SMMH)\",\"Port Hospital\",\"Military Hospital\",\"Port Hospital\",\"Missing\",\"Missing\",\"Missing\",\"Missing\",\"Port Hospital\",\"Military Hospital\",\"Missing\",\"Missing\",\"Other\",\"Port Hospital\",\"Port Hospital\",\"Port Hospital\",\"Missing\",\"Other\",\"Port Hospital\",\"Port Hospital\",\"St. Mark's Maternity Hospital (SMMH)\",\"Missing\",\"Other\",\"Missing\",\"St. Mark's Maternity Hospital (SMMH)\",\"Military Hospital\",\"Port Hospital\",\"Central Hospital\",\"Military Hospital\",\"Central Hospital\",\"Missing\",\"Military Hospital\",\"Other\",\"Missing\",\"Missing\",\"Port Hospital\",\"Port Hospital\",\"Port Hospital\",\"Missing\",\"Central Hospital\",\"Military Hospital\",\"Other\",\"Other\",\"Other\",\"Missing\",\"St. Mark's Maternity Hospital (SMMH)\",\"St. Mark's Maternity Hospital (SMMH)\",\"Missing\"],[-13.2157351064963,-13.2152339775486,-13.212910703914,-13.2363711169728,-13.2228638912441,-13.222625321098,-13.2331547837254,-13.2320975453153,-13.2225511595637,-13.2572163655863,-13.2206286746001,-13.253989309478,-13.2385127873491,-13.209391925612,-13.2157278814899,-13.2243437095992,-13.2336087079551,-13.21422143145,-13.2339681355349,-13.2535640411465,-13.2250089377786,-13.2160657166043,-13.2680671272333,-13.2266742923612,-13.2160179088168,-13.2482584611565,-13.2156319199566,-13.2142410663192,-13.2614879104088,-13.2452992638476,-13.2630592726116,-13.2343341712241,-13.2199077448676,-13.2227293309912,-13.2343062806506,-13.218781651651,-13.2483677722899,-13.2097478342339,-13.2680867723786,-13.2587535457526,-13.262635786914,-13.2697246824573,-13.2209026809759,-13.2330734719715,-13.2680923666905,-13.2547212675054,-13.2573683214693,-13.2137356012883,-13.2175973322257,-13.2486407324245],[8.46897295100924,8.45171855856465,8.46481700596819,8.4754761613651,8.46082377490923,8.461830626007281,8.462729314626459,8.461443675342711,8.46191259217774,8.472923276435059,8.48401630165138,8.458371253408441,8.477617055125091,8.47570184950483,8.477799468789719,8.47145134147474,8.478048406853629,8.48528034195779,8.469575303958671,8.45957352078114,8.474048895115439,8.488029171298839,8.473437335922,8.484082637344621,8.46242233645879,8.470268221265719,8.463984474805329,8.464134789434199,8.456230946296071,8.48334624336805,8.47493999153642,8.47832062438022,8.469393389176499,8.48480589906514,8.47121232619015,8.48438437371817,8.484661585743391,8.477141599844281,8.462381270106089,8.455685978131131,8.4632880274758,8.47940722413856,8.46353857052336,8.461789681588639,8.47508713872833,8.458258081280711,8.4532568143863,8.4732571907655,8.479115866419329,8.48480340615605],[\"f547d6\",null,null,\"f90f5f\",\"11f8ea\",\"aec8ec\",\"893f25\",\"133ee7\",null,null,\"996f3a\",\"133ee7\",\"37a6f6\",\"9f6884\",\"4802b1\",null,null,null,\"a75c7f\",\"8e104d\",\"ab634e\",null,null,\"b799eb\",null,\"5d9e4d\",\"a15e13\",null,\"ea3740\",\"beb26e\",\"567136\",\"894024\",\"36e2e7\",\"a2086d\",\"7baf73\",\"eb2277\",null,null,\"d6584f\",null,\"312ecf\",\"52ea64\",\"cfd79c\",\"d145b7\",\"174288\",null,\"53608c\",\"3b096b\",\"f5c142\",null],[\"other\",null,null,\"other\",\"other\",\"other\",\"other\",\"other\",null,null,\"other\",\"other\",\"other\",\"other\",\"other\",null,null,null,\"other\",\"other\",\"other\",null,null,\"other\",null,\"other\",\"other\",null,\"other\",\"funeral\",\"other\",\"funeral\",\"other\",\"other\",\"other\",\"funeral\",null,null,\"other\",null,\"other\",\"other\",\"other\",\"other\",\"other\",null,\"funeral\",\"other\",\"other\",null],[27,25,91,41,36,56,47,0,86,69,67,84,68,44,34,66,78,47,53,47,71,86,53,69,38,46,68,37,100,56,50,57,65,72,29,69,37,48,54,71,47,61,47,35,53,16,13,59,69,67],[48,59,238,135,71,116,87,11,226,174,112,186,174,90,91,152,214,137,117,131,150,241,131,161,80,69,188,66,233,142,110,182,164,214,26,157,39,154,133,168,100,125,123,67,134,31,36,125,183,169],[22,22,21,23,23,21,21,22,22,22,22,22,22,21,23,22,23,21,22,23,21,23,21,24,23,22,24,23,20,24,24,20,24,21,22,21,23,22,23,23,23,22,23,22,22,22,23,22,22,22],[\"no\",null,null,\"no\",\"no\",\"no\",null,\"no\",\"no\",\"no\",\"no\",\"no\",\"no\",\"no\",\"no\",\"no\",\"no\",\"no\",null,\"no\",\"no\",\"no\",\"no\",\"no\",null,\"no\",\"no\",\"no\",null,null,\"no\",\"no\",null,\"no\",\"no\",null,null,\"no\",\"no\",null,\"no\",\"no\",null,\"no\",\"no\",\"no\",\"no\",\"no\",\"no\",null],[\"no\",null,null,\"no\",\"no\",\"no\",null,\"no\",\"no\",\"no\",\"no\",\"no\",\"no\",\"no\",\"no\",\"no\",\"yes\",\"no\",null,\"no\",\"no\",\"no\",\"yes\",\"no\",null,\"no\",\"no\",\"yes\",null,null,\"no\",\"no\",null,\"no\",\"no\",null,null,\"no\",\"no\",null,\"no\",\"no\",null,\"no\",\"yes\",\"no\",\"no\",\"no\",\"no\",null],[\"yes\",null,null,\"no\",\"yes\",\"yes\",null,\"yes\",\"yes\",\"yes\",\"yes\",\"yes\",\"yes\",\"yes\",\"yes\",\"yes\",\"yes\",\"yes\",null,\"yes\",\"yes\",\"yes\",\"yes\",\"yes\",null,\"yes\",\"yes\",\"yes\",null,null,\"yes\",\"yes\",null,\"yes\",\"yes\",null,null,\"yes\",\"yes\",null,\"yes\",\"yes\",null,\"yes\",\"yes\",\"yes\",\"yes\",\"yes\",\"no\",null],[\"no\",null,null,\"no\",\"no\",\"no\",null,\"no\",\"no\",\"no\",\"no\",\"no\",\"no\",\"no\",\"no\",\"yes\",\"no\",\"no\",null,\"no\",\"no\",\"no\",\"no\",\"no\",null,\"no\",\"no\",\"no\",null,null,\"no\",\"no\",null,\"no\",\"no\",null,null,\"yes\",\"yes\",null,\"no\",\"no\",null,\"no\",\"no\",\"no\",\"no\",\"no\",\"no\",null],[\"yes\",null,null,\"no\",\"yes\",\"yes\",null,\"yes\",\"yes\",\"no\",\"yes\",\"no\",\"no\",\"no\",\"yes\",\"no\",\"no\",\"no\",null,\"no\",\"yes\",\"no\",\"no\",\"no\",null,\"no\",\"no\",\"no\",null,null,\"no\",\"yes\",null,\"yes\",\"yes\",null,null,\"yes\",\"yes\",null,\"yes\",\"yes\",null,\"yes\",\"yes\",\"no\",\"yes\",\"yes\",\"yes\",null],[36.8,36.9,36.9,36.8,36.9,37.6,37.3,37,36.4,35.9,36.5,36.9,36.5,37.1,36.5,37.3,37,38,38,36,37,36.7,36.9,36.5,37,36.5,37.6,36.6,36.6,36.2,36.4,37.1,37.5,37.5,37.4,36.9,36.4,37.3,37,37.8,36.5,37.5,36.7,37,37.3,36.6,36.5,36.6,37.6,36.8],[null,\"09:36\",\"16:48\",\"11:22\",\"12:60\",\"14:13\",\"14:33\",\"09:25\",\"11:16\",\"10:55\",\"16:03\",\"11:14\",\"12:42\",\"11:06\",\"09:10\",\"08:45\",null,\"15:41\",\"13:34\",\"18:58\",\"12:43\",\"16:33\",\"14:29\",\"07:18\",\"08:11\",\"16:32\",\"16:17\",\"07:32\",\"17:45\",null,\"13:24\",\"14:43\",\"02:33\",\"11:36\",\"17:28\",\"16:27\",null,\"20:49\",null,\"11:38\",\"14:25\",\"13:42\",\"21:22\",\"13:33\",\"19:06\",\"17:14\",\"20:09\",null,\"10:23\",\"09:09\"],[117.1875,71.81844297615629,16.06524962926347,22.49657064471879,71.41440190438405,41.61712247324614,62.09538908706566,0,16.83765369253662,22.79032897344431,53.41198979591836,24.28026361429067,22.46003435064077,54.32098765432099,41.05784325564545,28.56648199445983,17.03205520132763,25.04129149128882,38.7172182043977,27.3876813705495,31.55555555555556,14.80690759456621,30.88398111998135,26.61934338952972,59.37499999999999,96.61835748792272,19.23947487550928,84.94031221303948,18.41993774061044,27.77226740726046,41.32231404958677,17.20806665861611,24.16716240333135,15.72189710891781,428.9940828402366,27.99302202929125,243.2610124917817,20.23950075898128,30.52744643563797,25.15589569160998,47,39.04,31.06616432017979,77.96836711962574,29.51659612385831,166.4932362122789,100.3086419753086,37.76,20.60378034578518,23.45856237526698],[2,1,2,2,1,1,2,1,1,2,2,2,1,0,2,0,1,1,2,2,1,1,1,0,2,1,1,2,1,0,0,2,1,1,2,2,1,0,2,2,0,2,0,0,2,2,null,1,0,1]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th>case_id<\\/th>\\n      <th>generation<\\/th>\\n      <th>date_infection<\\/th>\\n      <th>date_onset<\\/th>\\n      <th>date_hospitalisation<\\/th>\\n      <th>date_outcome<\\/th>\\n      <th>outcome<\\/th>\\n      <th>gender<\\/th>\\n      <th>age<\\/th>\\n      <th>age_unit<\\/th>\\n      <th>age_years<\\/th>\\n      <th>age_cat<\\/th>\\n      <th>age_cat5<\\/th>\\n      <th>hospital<\\/th>\\n      <th>lon<\\/th>\\n      <th>lat<\\/th>\\n      <th>infector<\\/th>\\n      <th>source<\\/th>\\n      <th>wt_kg<\\/th>\\n      <th>ht_cm<\\/th>\\n      <th>ct_blood<\\/th>\\n      <th>fever<\\/th>\\n      <th>chills<\\/th>\\n      <th>cough<\\/th>\\n      <th>aches<\\/th>\\n      <th>vomit<\\/th>\\n      <th>temp<\\/th>\\n      <th>time_admission<\\/th>\\n      <th>bmi<\\/th>\\n      <th>days_onset_hosp<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":5,\"scrollX\":true,\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[1,8,10,14,15,18,19,20,26,28,29]},{\"name\":\"case_id\",\"targets\":0},{\"name\":\"generation\",\"targets\":1},{\"name\":\"date_infection\",\"targets\":2},{\"name\":\"date_onset\",\"targets\":3},{\"name\":\"date_hospitalisation\",\"targets\":4},{\"name\":\"date_outcome\",\"targets\":5},{\"name\":\"outcome\",\"targets\":6},{\"name\":\"gender\",\"targets\":7},{\"name\":\"age\",\"targets\":8},{\"name\":\"age_unit\",\"targets\":9},{\"name\":\"age_years\",\"targets\":10},{\"name\":\"age_cat\",\"targets\":11},{\"name\":\"age_cat5\",\"targets\":12},{\"name\":\"hospital\",\"targets\":13},{\"name\":\"lon\",\"targets\":14},{\"name\":\"lat\",\"targets\":15},{\"name\":\"infector\",\"targets\":16},{\"name\":\"source\",\"targets\":17},{\"name\":\"wt_kg\",\"targets\":18},{\"name\":\"ht_cm\",\"targets\":19},{\"name\":\"ct_blood\",\"targets\":20},{\"name\":\"fever\",\"targets\":21},{\"name\":\"chills\",\"targets\":22},{\"name\":\"cough\",\"targets\":23},{\"name\":\"aches\",\"targets\":24},{\"name\":\"vomit\",\"targets\":25},{\"name\":\"temp\",\"targets\":26},{\"name\":\"time_admission\",\"targets\":27},{\"name\":\"bmi\",\"targets\":28},{\"name\":\"days_onset_hosp\",\"targets\":29}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false,\"lengthMenu\":[5,10,25,50,100]}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n### Clean data {.unnumbered}\n\n#### Store explanatory variables {.unnumbered}  \n\nWe store the names of the explanatory columns as a character vector. This will be referenced later.  \n\n\n::: {.cell}\n\n```{.r .cell-code}\n## define variables of interest \nexplanatory_vars <- c(\"gender\", \"fever\", \"chills\", \"cough\", \"aches\", \"vomit\")\n```\n:::\n\n\n\n#### Convert to 1's and 0's  {.unnumbered}   \n\nBelow we convert the explanatory columns from \"yes\"/\"no\", \"m\"/\"f\", and \"dead\"/\"alive\" to **1 / 0**, to cooperate with the expectations of logistic regression models. To do this efficiently, used `across()` from **dplyr** to transform multiple columns at one time. The function we apply to each column is `case_when()` (also **dplyr**) which applies logic to convert specified values to 1's and 0's. See sections on `across()` and `case_when()` in the [Cleaning data and core functions page](cleaning.qmd#clean_across).  \n\nNote: the \".\" below represents the column that is being processed by `across()` at that moment.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## convert dichotomous variables to 0/1 \nlinelist <- linelist %>%  \n  mutate(across(                                      \n    .cols = all_of(c(explanatory_vars, \"outcome\")),  ## for each column listed and \"outcome\"\n    .fns = ~case_when(                              \n      . %in% c(\"m\", \"yes\", \"Death\")   ~ 1,           ## recode male, yes and death to 1\n      . %in% c(\"f\", \"no\",  \"Recover\") ~ 0,           ## female, no and recover to 0\n      TRUE                            ~ NA_real_)    ## otherwise set to missing\n    )\n  )\n```\n:::\n\n\n#### Drop rows with missing values {.unnumbered}  \n\nTo drop rows with missing values, can use the **tidyr** function `drop_na()`. However, we only want to do this for rows that are missing values in the columns of interest.  \n\nThe first thing we must to is make sure our `explanatory_vars` vector includes the column `age` (`age` would have produced an error in the previous `case_when()` operation, which was only for dichotomous variables). Then we pipe the `linelist` to `drop_na()` to remove any rows with missing values in the `outcome` column or any of the `explanatory_vars` columns.  \n\nBefore running the code, the number of rows in the `linelist` is ` nrow(linelist)`.  \n\n\n::: {.cell}\n\n```{.r .cell-code}\n## add in age_category to the explanatory vars \nexplanatory_vars <- c(explanatory_vars, \"age_cat\")\n\n## drop rows with missing information for variables of interest \nlinelist <- linelist %>% \n  drop_na(any_of(c(\"outcome\", explanatory_vars)))\n```\n:::\n\n\nThe number of rows remaining in `linelist` is ` nrow(linelist)`.  \n\n\n<!-- ======================================================= -->\n\n## Univariate {  }\n\nJust like in the page on [Descriptive tables](tables_descriptive.qmd), your use case will determine which R package you use. We present two options for doing univariate analysis:  \n\n* Use functions available in **base** R to quickly print results to the console. Use the **broom** package to tidy up the outputs.  \n* Use the **gtsummary** package to model and get publication-ready outputs.  \n\n\n\n<!-- ======================================================= -->\n\n### **base** R {.unnumbered}\n\n#### Linear regression {.unnumbered}  \n\nThe **base** R function `lm()` perform linear regression, assessing the relationship between numeric response and explanatory variables that are assumed to have a linear relationship.  \n\nProvide the equation as a formula, with the response and explanatory column names separated by a tilde `~`. Also, specify the dataset to `data = `. Define the model results as an R object, to use later.    \n\n\n::: {.cell}\n\n```{.r .cell-code}\nlm_results <- lm(ht_cm ~ age, data = linelist)\n```\n:::\n\n\nYou can then run `summary()` on the model results to see the coefficients (Estimates), P-value, residuals, and other measures.  \n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(lm_results)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = ht_cm ~ age, data = linelist)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-128.579  -15.854    1.177   15.887  175.483 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  69.9051     0.5979   116.9   <2e-16 ***\nage           3.4354     0.0293   117.2   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 23.75 on 4165 degrees of freedom\nMultiple R-squared:  0.7675,\tAdjusted R-squared:  0.7674 \nF-statistic: 1.375e+04 on 1 and 4165 DF,  p-value: < 2.2e-16\n```\n\n\n:::\n:::\n\n\nAlternatively you can use the `tidy()` function from the **broom** package to pull \nthe results in to a table. What the results tell us is that for each year increase in age the height increases\nby 3.5 cm and this is statistically significant. \n\n\n::: {.cell}\n\n```{.r .cell-code}\ntidy(lm_results)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 5\n  term        estimate std.error statistic p.value\n  <chr>          <dbl>     <dbl>     <dbl>   <dbl>\n1 (Intercept)    69.9     0.598       117.       0\n2 age             3.44    0.0293      117.       0\n```\n\n\n:::\n:::\n\n\nYou can then also use this regression to add it to a **ggplot**, to do this we \nfirst pull the points for the observed data and the fitted line in to one data frame \nusing the `augment()` function from **broom**. \n\n\n::: {.cell}\n\n```{.r .cell-code}\n## pull the regression points and observed data in to one dataset\npoints <- augment(lm_results)\n\n## plot the data using age as the x-axis \nggplot(points, aes(x = age)) + \n  ## add points for height \n  geom_point(aes(y = ht_cm)) + \n  ## add your regression line \n  geom_line(aes(y = .fitted), colour = \"red\")\n```\n\n::: {.cell-output-display}\n![](regression_files/figure-html/lin_reg_res_plot-1.png){width=672}\n:::\n:::\n\n\nIt is also possible to add a simple linear regression straight straight in **ggplot** \nusing the `geom_smooth()` function. \n\n\n::: {.cell}\n\n```{.r .cell-code}\n## add your data to a plot \n ggplot(linelist, aes(x = age, y = ht_cm)) + \n  ## show points\n  geom_point() + \n  ## add a linear regression \n  geom_smooth(method = \"lm\", se = FALSE)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](regression_files/figure-html/geom_smooth-1.png){width=672}\n:::\n:::\n\n\nSee the Resource section at the end of this chapter for more detailed tutorials.  \n\n\n#### Logistic regression {.unnumbered}  \n\nThe function `glm()` from the **stats** package (part of **base** R) is used to fit [Generalized Linear Models (GLM)](https://online.stat.psu.edu/stat504/lesson/6/6.1).  \n\n`glm()` can be used for univariate and multivariable logistic regression (e.g. to get Odds Ratios). Here are the core parts:  \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# arguments for glm()\nglm(formula, family, data, weights, subset, ...)\n```\n:::\n\n\n* `formula = ` The model is provided to `glm()` as an equation, with the outcome on the left and explanatory variables on the right of a tilde `~`.  \n* `family = ` This determines the type of model to run. For logistic regression, use `family = \"binomial\"`, for poisson use `family = \"poisson\"`. Other examples are in the table below.  \n* `data = ` Specify your data frame.  \n\n\nIf necessary, you can also specify the link function via the syntax `family = familytype(link = \"linkfunction\"))`. You can read more in the documentation about other families and optional arguments such as `weights = ` and `subset = ` (`?glm`).  \n\n\n\nFamily                 | Default link function \n-----------------------|-------------------------------------------  \n`\"binomial\"` | `(link = \"logit\")`  \n`\"gaussian\"` | `(link = \"identity\")`  \n`\"Gamma\"` | `(link = \"inverse\")`  \n`\"inverse.gaussian\"` | `(link = \"1/mu^2\")`  \n`\"poisson\"` | `(link = \"log\")`  \n`\"quasi\"` | `(link = \"identity\", variance = \"constant\")`  \n`\"quasibinomial\"` | `(link = \"logit\")`  \n`\"quasipoisson\"` | `(link = \"log\")`  \n\n\nWhen running `glm()` it is most common to save the results as a named R object. Then you can print the results to your console using `summary()` as shown below, or perform other operations on the results (e.g. exponentiate).  \n\nIf you need to run a negative binomial regression you can use the **MASS** package; the `glm.nb()` uses the same syntax as `glm()`. \nFor a walk-through of different regressions, see the [UCLA stats page](https://stats.idre.ucla.edu/other/dae/). \n\n#### Univariate `glm()` {.unnumbered}\n\nIn this example we are assessing the association between different age categories and the outcome of death (coded as 1 in the Preparation section). Below is a univariate model of `outcome` by `age_cat`. We save the model output as `model` and then print it with `summary()` to the console. Note the estimates provided are the *log odds* and that the baseline level is the first factor level of `age_cat` (\"0-4\").  \n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel <- glm(outcome ~ age_cat, family = \"binomial\", data = linelist)\nsummary(model)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nglm(formula = outcome ~ age_cat, family = \"binomial\", data = linelist)\n\nCoefficients:\n              Estimate Std. Error z value Pr(>|z|)   \n(Intercept)   0.233738   0.072805   3.210  0.00133 **\nage_cat5-9   -0.062898   0.101733  -0.618  0.53640   \nage_cat10-14  0.138204   0.107186   1.289  0.19726   \nage_cat15-19 -0.005565   0.113343  -0.049  0.96084   \nage_cat20-29  0.027511   0.102133   0.269  0.78765   \nage_cat30-49  0.063764   0.113771   0.560  0.57517   \nage_cat50-69 -0.387889   0.259240  -1.496  0.13459   \nage_cat70+   -0.639203   0.915770  -0.698  0.48518   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 5712.4  on 4166  degrees of freedom\nResidual deviance: 5705.1  on 4159  degrees of freedom\nAIC: 5721.1\n\nNumber of Fisher Scoring iterations: 4\n```\n\n\n:::\n:::\n\n\nTo alter the baseline level of a given variable, ensure the column is class Factor and move the desired level to the first position with `fct_relevel()` (see page on [Factors](factors.qmd)). For example, below we take column `age_cat` and set \"20-29\" as the baseline before piping the modified data frame into `glm()`.  \n\n\n::: {.cell}\n\n```{.r .cell-code}\nlinelist %>% \n  mutate(age_cat = fct_relevel(age_cat, \"20-29\", after = 0)) %>% \n  glm(formula = outcome ~ age_cat, family = \"binomial\") %>% \n  summary()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nglm(formula = outcome ~ age_cat, family = \"binomial\", data = .)\n\nCoefficients:\n             Estimate Std. Error z value Pr(>|z|)    \n(Intercept)   0.26125    0.07163   3.647 0.000265 ***\nage_cat0-4   -0.02751    0.10213  -0.269 0.787652    \nage_cat5-9   -0.09041    0.10090  -0.896 0.370220    \nage_cat10-14  0.11069    0.10639   1.040 0.298133    \nage_cat15-19 -0.03308    0.11259  -0.294 0.768934    \nage_cat30-49  0.03625    0.11302   0.321 0.748390    \nage_cat50-69 -0.41540    0.25891  -1.604 0.108625    \nage_cat70+   -0.66671    0.91568  -0.728 0.466546    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 5712.4  on 4166  degrees of freedom\nResidual deviance: 5705.1  on 4159  degrees of freedom\nAIC: 5721.1\n\nNumber of Fisher Scoring iterations: 4\n```\n\n\n:::\n:::\n\n\n#### Printing results {.unnumbered}\n\nFor most uses, several modifications must be made to the above outputs. The function `tidy()` from the package **broom** is convenient for making the model results presentable.  \n\nHere we demonstrate how to combine model outputs with a table of counts.  \n\n1) Get the *exponentiated* log odds ratio estimates and confidence intervals by passing the model to `tidy()` and setting `exponentiate = TRUE` and `conf.int = TRUE`.  \n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel <- glm(outcome ~ age_cat, family = \"binomial\", data = linelist) %>% \n  tidy(exponentiate = TRUE, conf.int = TRUE) %>%        # exponentiate and produce CIs\n  mutate(across(where(is.numeric), round, digits = 2))  # round all numeric columns\n```\n:::\n\n\nBelow is the outputted tibble `model`:  \n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-01672b2ecf51a3af6196\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-01672b2ecf51a3af6196\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"(Intercept)\",\"age_cat5-9\",\"age_cat10-14\",\"age_cat15-19\",\"age_cat20-29\",\"age_cat30-49\",\"age_cat50-69\",\"age_cat70+\"],[1.26,0.9399999999999999,1.15,0.99,1.03,1.07,0.68,0.53],[0.07000000000000001,0.1,0.11,0.11,0.1,0.11,0.26,0.92],[3.21,-0.62,1.29,-0.05,0.27,0.5600000000000001,-1.5,-0.7],[0,0.54,0.2,0.96,0.79,0.58,0.13,0.49],[1.1,0.77,0.93,0.8,0.84,0.85,0.41,0.07000000000000001],[1.46,1.15,1.42,1.24,1.26,1.33,1.13,3.2]],\"container\":\"<table class=\\\"white-space: nowrap\\\">\\n  <thead>\\n    <tr>\\n      <th>term<\\/th>\\n      <th>estimate<\\/th>\\n      <th>std.error<\\/th>\\n      <th>statistic<\\/th>\\n      <th>p.value<\\/th>\\n      <th>conf.low<\\/th>\\n      <th>conf.high<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":8,\"scrollX\":true,\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[1,2,3,4,5,6]},{\"name\":\"term\",\"targets\":0},{\"name\":\"estimate\",\"targets\":1},{\"name\":\"std.error\",\"targets\":2},{\"name\":\"statistic\",\"targets\":3},{\"name\":\"p.value\",\"targets\":4},{\"name\":\"conf.low\",\"targets\":5},{\"name\":\"conf.high\",\"targets\":6}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false,\"lengthMenu\":[8,10,25,50,100]}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n2) Combine these model results with a table of counts. Below, we create the a counts cross-table with the `tabyl()` function from **janitor**, as covered in the [Descriptive tables](tables_descriptive.qmd) page.  \n\n\n::: {.cell}\n\n```{.r .cell-code}\ncounts_table <- linelist %>% \n  janitor::tabyl(age_cat, outcome)\n```\n:::\n\n\n\n<!-- * Group rows by outcome, and get counts by age category   -->\n<!-- * Pivot wider so the column are `age_cat`, `0`, and `1`   -->\n<!-- * Remove row for `NA` `age_cat`, if applicable, to align with the model results   -->\n\n<!-- ```{r} -->\n<!-- counts_table <- linelist %>%  -->\n<!--   filter(!is.na(outcome) & !is.na(age_cat)) %>%    # ensure outcome and age_cat are present  -->\n<!--   group_by(outcome) %>%                            # get counts of variable of interest grouped by outcome -->\n<!--   count(age_cat) %>%   ## gets number or rows by unique outcome-age category combinations   -->\n<!--   pivot_wider(names_from = outcome, values_from = n)    ## spread data to wide format (as in cross-tabulation) -->\n\n<!-- ``` -->\n\n\nHere is what this `counts_table` data frame looks like:  \n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-2eb9af693a56fcc08bd0\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-2eb9af693a56fcc08bd0\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"0-4\",\"5-9\",\"10-14\",\"15-19\",\"20-29\",\"30-49\",\"50-69\",\"70+\"],[338,365,273,238,345,228,35,3],[427,433,396,299,448,307,30,2]],\"container\":\"<table class=\\\"white-space: nowrap\\\">\\n  <thead>\\n    <tr>\\n      <th>age_cat<\\/th>\\n      <th>0<\\/th>\\n      <th>1<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":8,\"scrollX\":true,\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[1,2]},{\"name\":\"age_cat\",\"targets\":0},{\"name\":\"0\",\"targets\":1},{\"name\":\"1\",\"targets\":2}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false,\"lengthMenu\":[8,10,25,50,100]}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\nNow we can bind the `counts_table` and the `model` results together horizontally with `bind_cols()` (**dplyr**). Remember that with `bind_cols()` the rows in the two data frames must be aligned perfectly. In this code, because we are binding within a pipe chain, we use `.` to represent the piped object `counts_table` as we bind it to `model`. To finish the process, we use `select()` to pick the desired columns and their order, and finally apply the **base** R `round()` function across all numeric columns to specify 2 decimal places.  \n\n\n::: {.cell}\n\n```{.r .cell-code}\ncombined <- counts_table %>%           # begin with table of counts\n  bind_cols(., model) %>%              # combine with the outputs of the regression \n  select(term, 2:3, estimate,          # select and re-order cols\n         conf.low, conf.high, p.value) %>% \n  mutate(across(where(is.numeric), round, digits = 2)) ## round to 2 decimal places\n```\n:::\n\n\nHere is what the combined data frame looks like, printed nicely as an image with a function from **flextable**. The [Tables for presentation](tables_presentation.qmd) explains how to customize such tables with **flextable**, or or you can use numerous other packages such as **knitr** or **GT**.  \n\n\n::: {.cell}\n\n```{.r .cell-code}\ncombined <- combined %>% \n  flextable::qflextable()\n```\n:::\n\n\n\n#### Looping multiple univariate models {.unnumbered}  \n\nBelow we present a method using `glm()` and `tidy()` for a more simple approach, see the section on **gtsummary**.  \n\nTo run the models on several exposure variables to produce univariate odds ratios (i.e. not controlling for each other), you can use the approach below. It uses `str_c()` from **stringr** to create univariate formulas (see [Characters and strings](characters_strings.qmd)), runs the `glm()` regression on each formula, passes each `glm()` output to `tidy()` and finally collapses all the model outputs together with `bind_rows()` from **tidyr**. This approach uses `map()` from the package **purrr** to iterate - see the page on [Iteration, loops, and lists](iteration.qmd) for more information on this tool.  \n\n1) Create a vector of column names of the explanatory variables. We already have this as `explanatory_vars` from the Preparation section of this page.  \n\n2) Use `str_c()` to create multiple string formulas, with `outcome` on the left, and a column name from `explanatory_vars` on the right. The period `.` substitutes for the column name in `explanatory_vars`.  \n\n\n::: {.cell}\n\n```{.r .cell-code}\nexplanatory_vars %>% str_c(\"outcome ~ \", .)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"outcome ~ gender\"  \"outcome ~ fever\"   \"outcome ~ chills\" \n[4] \"outcome ~ cough\"   \"outcome ~ aches\"   \"outcome ~ vomit\"  \n[7] \"outcome ~ age_cat\"\n```\n\n\n:::\n:::\n\n\n3) Pass these string formulas to `map()` and set `~glm()` as the function to apply to each input. Within `glm()`, set the regression formula as `as.formula(.x)` where `.x` will be replaced by the string formula defined in the step above. `map()` will loop over each of the string formulas, running regressions for each one.  \n\n4) The outputs of this first `map()` are passed to a second `map()` command, which applies `tidy()` to the regression outputs.  \n\n5) Finally the output of the second `map()` (a list of tidied data frames) is condensed with `bind_rows()`, resulting in one data frame with all the univariate results.  \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodels <- explanatory_vars %>%       # begin with variables of interest\n  str_c(\"outcome ~ \", .) %>%         # combine each variable into formula (\"outcome ~ variable of interest\")\n  \n  # iterate through each univariate formula\n  map(                               \n    .f = ~glm(                       # pass the formulas one-by-one to glm()\n      formula = as.formula(.x),      # within glm(), the string formula is .x\n      family = \"binomial\",           # specify type of glm (logistic)\n      data = linelist)) %>%          # dataset\n  \n  # tidy up each of the glm regression outputs from above\n  map(\n    .f = ~tidy(\n      .x, \n      exponentiate = TRUE,           # exponentiate \n      conf.int = TRUE)) %>%          # return confidence intervals\n  \n  # collapse the list of regression outputs in to one data frame\n  bind_rows() %>% \n  \n  # round all numeric columns\n  mutate(across(where(is.numeric), round, digits = 2))\n```\n:::\n\n\nThis time, the end object `models` is longer because it now represents the combined results of several univariate regressions. Click through to see all the rows of `model`.  \n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-b7e0d514a1d6f10871bd\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-b7e0d514a1d6f10871bd\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"(Intercept)\",\"gender\",\"(Intercept)\",\"fever\",\"(Intercept)\",\"chills\",\"(Intercept)\",\"cough\",\"(Intercept)\",\"aches\",\"(Intercept)\",\"vomit\",\"(Intercept)\",\"age_cat5-9\",\"age_cat10-14\",\"age_cat15-19\",\"age_cat20-29\",\"age_cat30-49\",\"age_cat50-69\",\"age_cat70+\"],[1.28,1,1.28,1,1.28,1.03,1.14,1.15,1.29,0.93,1.23,1.09,1.26,0.9399999999999999,1.15,0.99,1.03,1.07,0.68,0.53],[0.04,0.06,0.07000000000000001,0.08,0.03,0.08,0.08,0.09,0.03,0.1,0.04,0.06,0.07000000000000001,0.1,0.11,0.11,0.1,0.11,0.26,0.92],[5.67,-0.04,3.44,0.01,6.98,0.41,1.53,1.58,7.78,-0.66,4.67,1.39,3.21,-0.62,1.29,-0.05,0.27,0.5600000000000001,-1.5,-0.7],[0,0.97,0,0.99,0,0.68,0.13,0.11,0,0.51,0,0.17,0,0.54,0.2,0.96,0.79,0.58,0.13,0.49],[1.18,0.88,1.11,0.85,1.19,0.89,0.97,0.97,1.21,0.76,1.13,0.96,1.1,0.77,0.93,0.8,0.84,0.85,0.41,0.07000000000000001],[1.4,1.13,1.48,1.17,1.37,1.21,1.34,1.37,1.38,1.14,1.34,1.23,1.46,1.15,1.42,1.24,1.26,1.33,1.13,3.2]],\"container\":\"<table class=\\\"white-space: nowrap\\\">\\n  <thead>\\n    <tr>\\n      <th>term<\\/th>\\n      <th>estimate<\\/th>\\n      <th>std.error<\\/th>\\n      <th>statistic<\\/th>\\n      <th>p.value<\\/th>\\n      <th>conf.low<\\/th>\\n      <th>conf.high<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":5,\"scrollX\":true,\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[1,2,3,4,5,6]},{\"name\":\"term\",\"targets\":0},{\"name\":\"estimate\",\"targets\":1},{\"name\":\"std.error\",\"targets\":2},{\"name\":\"statistic\",\"targets\":3},{\"name\":\"p.value\",\"targets\":4},{\"name\":\"conf.low\",\"targets\":5},{\"name\":\"conf.high\",\"targets\":6}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false,\"lengthMenu\":[5,10,25,50,100]}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\nAs before, we can create a counts table from the `linelist` for each explanatory variable, bind it to `models`, and make a nice table. We begin with the variables, and iterate through them with `map()`. We iterate through a user-defined function which involves creating a counts table with **dplyr** functions. Then the results are combined and bound with the `models` model results.  \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## for each explanatory variable\nuniv_tab_base <- explanatory_vars %>% \n  map(.f = \n    ~{linelist %>%                ## begin with linelist\n        group_by(outcome) %>%     ## group data set by outcome\n        count(.data[[.x]]) %>%    ## produce counts for variable of interest\n        pivot_wider(              ## spread to wide format (as in cross-tabulation)\n          names_from = outcome,\n          values_from = n) %>% \n        drop_na(.data[[.x]]) %>%         ## drop rows with missings\n        rename(\"variable\" = .x) %>%      ## change variable of interest column to \"variable\"\n        mutate(variable = as.character(variable))} ## convert to character, else non-dichotomous (categorical) variables come out as factor and cant be merged\n      ) %>% \n  \n  ## collapse the list of count outputs in to one data frame\n  bind_rows() %>% \n  \n  ## merge with the outputs of the regression \n  bind_cols(., models) %>% \n  \n  ## only keep columns interested in \n  select(term, 2:3, estimate, conf.low, conf.high, p.value) %>% \n  \n  ## round decimal places\n  mutate(across(where(is.numeric), round, digits = 2))\n```\n:::\n\n\nBelow is what the data frame looks like. See the page on [Tables for presentation](tables_descriptive.qmd) for ideas on how to further convert this table to pretty HTML output (e.g. with **flextable**).  \n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-f3c982d6a49fa5df5eba\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-f3c982d6a49fa5df5eba\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"(Intercept)\",\"gender\",\"(Intercept)\",\"fever\",\"(Intercept)\",\"chills\",\"(Intercept)\",\"cough\",\"(Intercept)\",\"aches\",\"(Intercept)\",\"vomit\",\"(Intercept)\",\"age_cat5-9\",\"age_cat10-14\",\"age_cat15-19\",\"age_cat20-29\",\"age_cat30-49\",\"age_cat50-69\",\"age_cat70+\"],[909,916,340,1485,1472,353,272,1553,1636,189,931,894,338,365,273,238,345,228,35,3],[1168,1174,436,1906,1877,465,309,2033,2114,228,1144,1198,427,433,396,299,448,307,30,2],[1.28,1,1.28,1,1.28,1.03,1.14,1.15,1.29,0.93,1.23,1.09,1.26,0.9399999999999999,1.15,0.99,1.03,1.07,0.68,0.53],[1.18,0.88,1.11,0.85,1.19,0.89,0.97,0.97,1.21,0.76,1.13,0.96,1.1,0.77,0.93,0.8,0.84,0.85,0.41,0.07000000000000001],[1.4,1.13,1.48,1.17,1.37,1.21,1.34,1.37,1.38,1.14,1.34,1.23,1.46,1.15,1.42,1.24,1.26,1.33,1.13,3.2],[0,0.97,0,0.99,0,0.68,0.13,0.11,0,0.51,0,0.17,0,0.54,0.2,0.96,0.79,0.58,0.13,0.49]],\"container\":\"<table class=\\\"white-space: nowrap\\\">\\n  <thead>\\n    <tr>\\n      <th>term<\\/th>\\n      <th>0<\\/th>\\n      <th>1<\\/th>\\n      <th>estimate<\\/th>\\n      <th>conf.low<\\/th>\\n      <th>conf.high<\\/th>\\n      <th>p.value<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":5,\"scrollX\":true,\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[1,2,3,4,5,6]},{\"name\":\"term\",\"targets\":0},{\"name\":\"0\",\"targets\":1},{\"name\":\"1\",\"targets\":2},{\"name\":\"estimate\",\"targets\":3},{\"name\":\"conf.low\",\"targets\":4},{\"name\":\"conf.high\",\"targets\":5},{\"name\":\"p.value\",\"targets\":6}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false,\"lengthMenu\":[5,10,25,50,100]}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\n\n\n<!-- ======================================================= -->\n\n### **gtsummary** package {#reg_gt_uni .unnumbered}\n\nBelow we present the use of `tbl_uvregression()` from the **gtsummary** package. Just like in the page on [Descriptive tables](https://epirhandbook.com/descriptive-tables.html), **gtsummary** functions do a good job of running statistics *and* producing professional-looking outputs. This function produces a table of univariate regression results.  \n\nWe select only the necessary columns from the `linelist` (explanatory variables and the outcome variable) and  pipe them into `tbl_uvregression()`. We are going to run univariate regression on each of the columns we defined as `explanatory_vars` in the data Preparation section (gender, fever, chills, cough, aches, vomit, and age_cat).  \n\nWithin the function itself, we provide the `method = ` as `glm` (no quotes), the `y = ` outcome column (`outcome`), specify to `method.args = ` that we want to run logistic regression via `family = binomial`, and we tell it to exponentiate the results.  \n\nThe output is HTML and contains the counts\n\n\n::: {.cell}\n\n```{.r .cell-code}\nuniv_tab <- linelist %>% \n  dplyr::select(explanatory_vars, outcome) %>% ## select variables of interest\n\n  tbl_uvregression(                         ## produce univariate table\n    method = glm,                           ## define regression want to run (generalised linear model)\n    y = outcome,                            ## define outcome variable\n    method.args = list(family = binomial),  ## define what type of glm want to run (logistic)\n    exponentiate = TRUE                     ## exponentiate to produce odds ratios (rather than log odds)\n  )\n\n## view univariate results table \nuniv_tab\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"swmobpauao\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#swmobpauao table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#swmobpauao thead, #swmobpauao tbody, #swmobpauao tfoot, #swmobpauao tr, #swmobpauao td, #swmobpauao th {\n  border-style: none;\n}\n\n#swmobpauao p {\n  margin: 0;\n  padding: 0;\n}\n\n#swmobpauao .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#swmobpauao .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#swmobpauao .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#swmobpauao .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#swmobpauao .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#swmobpauao .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#swmobpauao .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#swmobpauao .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#swmobpauao .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#swmobpauao .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#swmobpauao .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#swmobpauao .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#swmobpauao .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#swmobpauao .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#swmobpauao .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#swmobpauao .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#swmobpauao .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#swmobpauao .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#swmobpauao .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#swmobpauao .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#swmobpauao .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#swmobpauao .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#swmobpauao .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#swmobpauao .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#swmobpauao .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#swmobpauao .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#swmobpauao .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#swmobpauao .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#swmobpauao .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#swmobpauao .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#swmobpauao .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#swmobpauao .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#swmobpauao .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#swmobpauao .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#swmobpauao .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#swmobpauao .gt_left {\n  text-align: left;\n}\n\n#swmobpauao .gt_center {\n  text-align: center;\n}\n\n#swmobpauao .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#swmobpauao .gt_font_normal {\n  font-weight: normal;\n}\n\n#swmobpauao .gt_font_bold {\n  font-weight: bold;\n}\n\n#swmobpauao .gt_font_italic {\n  font-style: italic;\n}\n\n#swmobpauao .gt_super {\n  font-size: 65%;\n}\n\n#swmobpauao .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#swmobpauao .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#swmobpauao .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#swmobpauao .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#swmobpauao .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#swmobpauao .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#swmobpauao .gt_indent_5 {\n  text-indent: 25px;\n}\n\n#swmobpauao .katex-display {\n  display: inline-flex !important;\n  margin-bottom: 0.75em !important;\n}\n\n#swmobpauao div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {\n  height: 0px !important;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;div data-qmd-base64=&quot;KipDaGFyYWN0ZXJpc3RpYyoq&quot;&gt;&lt;div class='gt_from_md'&gt;&lt;p&gt;&lt;strong&gt;Characteristic&lt;/strong&gt;&lt;/p&gt;&#10;&lt;/div&gt;&lt;/div&gt;\"><div data-qmd-base64=\"KipDaGFyYWN0ZXJpc3RpYyoq\"><div class='gt_from_md'><p><strong>Characteristic</strong></p>\n</div></div></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;div data-qmd-base64=&quot;KipOKio=&quot;&gt;&lt;div class='gt_from_md'&gt;&lt;p&gt;&lt;strong&gt;N&lt;/strong&gt;&lt;/p&gt;&#10;&lt;/div&gt;&lt;/div&gt;\"><div data-qmd-base64=\"KipOKio=\"><div class='gt_from_md'><p><strong>N</strong></p>\n</div></div></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;div data-qmd-base64=&quot;KipPUioq&quot;&gt;&lt;div class='gt_from_md'&gt;&lt;p&gt;&lt;strong&gt;OR&lt;/strong&gt;&lt;/p&gt;&#10;&lt;/div&gt;&lt;/div&gt;&lt;span class=&quot;gt_footnote_marks&quot; style=&quot;white-space:nowrap;font-style:italic;font-weight:normal;line-height: 0;&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/span&gt;\"><div data-qmd-base64=\"KipPUioq\"><div class='gt_from_md'><p><strong>OR</strong></p>\n</div></div><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height: 0;\"><sup>1</sup></span></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;div data-qmd-base64=&quot;Kio5NSUgQ0kqKg==&quot;&gt;&lt;div class='gt_from_md'&gt;&lt;p&gt;&lt;strong&gt;95% CI&lt;/strong&gt;&lt;/p&gt;&#10;&lt;/div&gt;&lt;/div&gt;&lt;span class=&quot;gt_footnote_marks&quot; style=&quot;white-space:nowrap;font-style:italic;font-weight:normal;line-height: 0;&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/span&gt;\"><div data-qmd-base64=\"Kio5NSUgQ0kqKg==\"><div class='gt_from_md'><p><strong>95% CI</strong></p>\n</div></div><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height: 0;\"><sup>1</sup></span></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;div data-qmd-base64=&quot;KipwLXZhbHVlKio=&quot;&gt;&lt;div class='gt_from_md'&gt;&lt;p&gt;&lt;strong&gt;p-value&lt;/strong&gt;&lt;/p&gt;&#10;&lt;/div&gt;&lt;/div&gt;\"><div data-qmd-base64=\"KipwLXZhbHVlKio=\"><div class='gt_from_md'><p><strong>p-value</strong></p>\n</div></div></th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">gender</td>\n<td headers=\"stat_n\" class=\"gt_row gt_center\">4,167</td>\n<td headers=\"estimate\" class=\"gt_row gt_center\">1.00</td>\n<td headers=\"conf.low\" class=\"gt_row gt_center\">0.88, 1.13</td>\n<td headers=\"p.value\" class=\"gt_row gt_center\">>0.9</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">fever</td>\n<td headers=\"stat_n\" class=\"gt_row gt_center\">4,167</td>\n<td headers=\"estimate\" class=\"gt_row gt_center\">1.00</td>\n<td headers=\"conf.low\" class=\"gt_row gt_center\">0.85, 1.17</td>\n<td headers=\"p.value\" class=\"gt_row gt_center\">>0.9</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">chills</td>\n<td headers=\"stat_n\" class=\"gt_row gt_center\">4,167</td>\n<td headers=\"estimate\" class=\"gt_row gt_center\">1.03</td>\n<td headers=\"conf.low\" class=\"gt_row gt_center\">0.89, 1.21</td>\n<td headers=\"p.value\" class=\"gt_row gt_center\">0.7</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">cough</td>\n<td headers=\"stat_n\" class=\"gt_row gt_center\">4,167</td>\n<td headers=\"estimate\" class=\"gt_row gt_center\">1.15</td>\n<td headers=\"conf.low\" class=\"gt_row gt_center\">0.97, 1.37</td>\n<td headers=\"p.value\" class=\"gt_row gt_center\">0.11</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">aches</td>\n<td headers=\"stat_n\" class=\"gt_row gt_center\">4,167</td>\n<td headers=\"estimate\" class=\"gt_row gt_center\">0.93</td>\n<td headers=\"conf.low\" class=\"gt_row gt_center\">0.76, 1.14</td>\n<td headers=\"p.value\" class=\"gt_row gt_center\">0.5</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">vomit</td>\n<td headers=\"stat_n\" class=\"gt_row gt_center\">4,167</td>\n<td headers=\"estimate\" class=\"gt_row gt_center\">1.09</td>\n<td headers=\"conf.low\" class=\"gt_row gt_center\">0.96, 1.23</td>\n<td headers=\"p.value\" class=\"gt_row gt_center\">0.2</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">age_cat</td>\n<td headers=\"stat_n\" class=\"gt_row gt_center\">4,167</td>\n<td headers=\"estimate\" class=\"gt_row gt_center\"><br /></td>\n<td headers=\"conf.low\" class=\"gt_row gt_center\"><br /></td>\n<td headers=\"p.value\" class=\"gt_row gt_center\"><br /></td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    0-4</td>\n<td headers=\"stat_n\" class=\"gt_row gt_center\"><br /></td>\n<td headers=\"estimate\" class=\"gt_row gt_center\">—</td>\n<td headers=\"conf.low\" class=\"gt_row gt_center\">—</td>\n<td headers=\"p.value\" class=\"gt_row gt_center\"><br /></td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    5-9</td>\n<td headers=\"stat_n\" class=\"gt_row gt_center\"><br /></td>\n<td headers=\"estimate\" class=\"gt_row gt_center\">0.94</td>\n<td headers=\"conf.low\" class=\"gt_row gt_center\">0.77, 1.15</td>\n<td headers=\"p.value\" class=\"gt_row gt_center\">0.5</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    10-14</td>\n<td headers=\"stat_n\" class=\"gt_row gt_center\"><br /></td>\n<td headers=\"estimate\" class=\"gt_row gt_center\">1.15</td>\n<td headers=\"conf.low\" class=\"gt_row gt_center\">0.93, 1.42</td>\n<td headers=\"p.value\" class=\"gt_row gt_center\">0.2</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    15-19</td>\n<td headers=\"stat_n\" class=\"gt_row gt_center\"><br /></td>\n<td headers=\"estimate\" class=\"gt_row gt_center\">0.99</td>\n<td headers=\"conf.low\" class=\"gt_row gt_center\">0.80, 1.24</td>\n<td headers=\"p.value\" class=\"gt_row gt_center\">>0.9</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    20-29</td>\n<td headers=\"stat_n\" class=\"gt_row gt_center\"><br /></td>\n<td headers=\"estimate\" class=\"gt_row gt_center\">1.03</td>\n<td headers=\"conf.low\" class=\"gt_row gt_center\">0.84, 1.26</td>\n<td headers=\"p.value\" class=\"gt_row gt_center\">0.8</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    30-49</td>\n<td headers=\"stat_n\" class=\"gt_row gt_center\"><br /></td>\n<td headers=\"estimate\" class=\"gt_row gt_center\">1.07</td>\n<td headers=\"conf.low\" class=\"gt_row gt_center\">0.85, 1.33</td>\n<td headers=\"p.value\" class=\"gt_row gt_center\">0.6</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    50-69</td>\n<td headers=\"stat_n\" class=\"gt_row gt_center\"><br /></td>\n<td headers=\"estimate\" class=\"gt_row gt_center\">0.68</td>\n<td headers=\"conf.low\" class=\"gt_row gt_center\">0.41, 1.13</td>\n<td headers=\"p.value\" class=\"gt_row gt_center\">0.13</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    70+</td>\n<td headers=\"stat_n\" class=\"gt_row gt_center\"><br /></td>\n<td headers=\"estimate\" class=\"gt_row gt_center\">0.53</td>\n<td headers=\"conf.low\" class=\"gt_row gt_center\">0.07, 3.20</td>\n<td headers=\"p.value\" class=\"gt_row gt_center\">0.5</td></tr>\n  </tbody>\n  \n  <tfoot class=\"gt_footnotes\">\n    <tr>\n      <td class=\"gt_footnote\" colspan=\"5\"><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height: 0;\"><sup>1</sup></span> <div data-qmd-base64=\"T1IgPSBPZGRzIFJhdGlvLCBDSSA9IENvbmZpZGVuY2UgSW50ZXJ2YWw=\"><div class='gt_from_md'><p>OR = Odds Ratio, CI = Confidence Interval</p>\n</div></div></td>\n    </tr>\n  </tfoot>\n</table>\n</div>\n```\n\n:::\n:::\n\n\nThere are many modifications you can make to this table output, such as adjusting the text labels, bolding rows by their p-value, etc. See tutorials [here](http://www.danieldsjoberg.com/gtsummary/articles/tbl_regression.html) and elsewhere online.  \n\n\n\n<!-- ======================================================= -->\n\n## Stratified {  }\n\nStratified analysis is currently still being worked on for **gtsummary**, \nthis page will be updated in due course. \n\n\n\n\n## Multivariable  \n\nFor multivariable analysis, we again present two approaches:  \n\n* `glm()` and `tidy()`  \n* **gtsummary** package  \n\nThe workflow is similar for each and only the last step of pulling together a final table is different.\n\n\n### Conduct multivariable {.unnumbered}  \n\n\nHere we use `glm()` but add more variables to the right side of the equation, separated by plus symbols (`+`). \n\n\nTo run the model with all of our explanatory variables we would run:  \n\n\n::: {.cell}\n\n```{.r .cell-code}\nmv_reg <- glm(outcome ~ gender + fever + chills + cough + aches + vomit + age_cat, family = \"binomial\", data = linelist)\n\nsummary(mv_reg)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nglm(formula = outcome ~ gender + fever + chills + cough + aches + \n    vomit + age_cat, family = \"binomial\", data = linelist)\n\nCoefficients:\n              Estimate Std. Error z value Pr(>|z|)\n(Intercept)   0.069054   0.131726   0.524    0.600\ngender        0.002448   0.065133   0.038    0.970\nfever         0.004309   0.080522   0.054    0.957\nchills        0.034112   0.078924   0.432    0.666\ncough         0.138584   0.089909   1.541    0.123\naches        -0.070705   0.104078  -0.679    0.497\nvomit         0.086098   0.062618   1.375    0.169\nage_cat5-9   -0.063562   0.101851  -0.624    0.533\nage_cat10-14  0.136372   0.107275   1.271    0.204\nage_cat15-19 -0.011074   0.113640  -0.097    0.922\nage_cat20-29  0.026552   0.102780   0.258    0.796\nage_cat30-49  0.059569   0.116402   0.512    0.609\nage_cat50-69 -0.388964   0.262384  -1.482    0.138\nage_cat70+   -0.647443   0.917375  -0.706    0.480\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 5712.4  on 4166  degrees of freedom\nResidual deviance: 5700.2  on 4153  degrees of freedom\nAIC: 5728.2\n\nNumber of Fisher Scoring iterations: 4\n```\n\n\n:::\n:::\n\n\nIf you want to include two variables and an interaction between them you can separate them with an asterisk `*` instead of a `+`. Separate them with a colon `:` if you are only specifying the interaction. For example:  \n\n\n::: {.cell}\n\n```{.r .cell-code}\nglm(outcome ~ gender + age_cat * fever, family = \"binomial\", data = linelist)\n```\n:::\n\n\n\n*Optionally*, you can use this code to leverage the pre-defined vector of column names and re-create the above command using `str_c()`. This might be useful if your explanatory variable names are changing, or you don't want to type them all out again.  \n\n\n::: {.cell}\n\n```{.r .cell-code}\n## run a regression with all variables of interest \nmv_reg <- explanatory_vars %>%  ## begin with vector of explanatory column names\n  str_c(collapse = \"+\") %>%     ## combine all names of the variables of interest separated by a plus\n  str_c(\"outcome ~ \", .) %>%    ## combine the names of variables of interest with outcome in formula style\n  glm(family = \"binomial\",      ## define type of glm as logistic,\n      data = linelist)          ## define your dataset\n```\n:::\n\n\n\n#### Building the model {.unnumbered}  \n\nYou can build your model step-by-step, saving various models that include certain explanatory variables. You can compare these models with likelihood-ratio tests using `lrtest()` from the package **lmtest**, as below:  \n\n<span style=\"color: black;\">**_NOTE:_** Using **base** `anova(model1, model2, test = \"Chisq)` produces the same results </span> \n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel1 <- glm(outcome ~ age_cat, family = \"binomial\", data = linelist)\nmodel2 <- glm(outcome ~ age_cat + gender, family = \"binomial\", data = linelist)\n\nlmtest::lrtest(model1, model2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nLikelihood ratio test\n\nModel 1: outcome ~ age_cat\nModel 2: outcome ~ age_cat + gender\n  #Df  LogLik Df Chisq Pr(>Chisq)\n1   8 -2852.6                    \n2   9 -2852.6  1 2e-04     0.9883\n```\n\n\n:::\n:::\n\n\nAnother option is to take the model object and apply the `step()` function from the **stats** package. Specify which variable selection direction you want use when building the model.      \n\n\n::: {.cell}\n\n```{.r .cell-code}\n## choose a model using forward selection based on AIC\n## you can also do \"backward\" or \"both\" by adjusting the direction\nfinal_mv_reg <- mv_reg %>%\n  step(direction = \"forward\", trace = FALSE)\n```\n:::\n\n\n\nYou can also turn off scientific notation in your R session, for clarity:  \n\n\n::: {.cell}\n\n```{.r .cell-code}\noptions(scipen=999)\n```\n:::\n\n\nAs described in the section on univariate analysis, pass the model output to `tidy()` to exponentiate the log odds and CIs. Finally we round all numeric columns to two decimal places. Scroll through to see all the rows.  \n\n\n::: {.cell}\n\n```{.r .cell-code}\nmv_tab_base <- final_mv_reg %>% \n  broom::tidy(exponentiate = TRUE, conf.int = TRUE) %>%  ## get a tidy dataframe of estimates \n  mutate(across(where(is.numeric), round, digits = 2))          ## round \n```\n:::\n\n\nHere is what the resulting data frame looks like: \n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-fc1d632a2161da2c0e56\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-fc1d632a2161da2c0e56\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"(Intercept)\",\"gender\",\"fever\",\"chills\",\"cough\",\"aches\",\"vomit\",\"age_cat5-9\",\"age_cat10-14\",\"age_cat15-19\",\"age_cat20-29\",\"age_cat30-49\",\"age_cat50-69\",\"age_cat70+\"],[1.07,1,1,1.03,1.15,0.93,1.09,0.9399999999999999,1.15,0.99,1.03,1.06,0.68,0.52],[0.13,0.07000000000000001,0.08,0.08,0.09,0.1,0.06,0.1,0.11,0.11,0.1,0.12,0.26,0.92],[0.52,0.04,0.05,0.43,1.54,-0.68,1.37,-0.62,1.27,-0.1,0.26,0.51,-1.48,-0.71],[0.6,0.97,0.96,0.67,0.12,0.5,0.17,0.53,0.2,0.92,0.8,0.61,0.14,0.48],[0.83,0.88,0.86,0.89,0.96,0.76,0.96,0.77,0.93,0.79,0.84,0.85,0.4,0.07000000000000001],[1.39,1.14,1.18,1.21,1.37,1.14,1.23,1.15,1.41,1.24,1.26,1.33,1.13,3.19]],\"container\":\"<table class=\\\"white-space: nowrap\\\">\\n  <thead>\\n    <tr>\\n      <th>term<\\/th>\\n      <th>estimate<\\/th>\\n      <th>std.error<\\/th>\\n      <th>statistic<\\/th>\\n      <th>p.value<\\/th>\\n      <th>conf.low<\\/th>\\n      <th>conf.high<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":10,\"scrollX\":true,\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[1,2,3,4,5,6]},{\"name\":\"term\",\"targets\":0},{\"name\":\"estimate\",\"targets\":1},{\"name\":\"std.error\",\"targets\":2},{\"name\":\"statistic\",\"targets\":3},{\"name\":\"p.value\",\"targets\":4},{\"name\":\"conf.low\",\"targets\":5},{\"name\":\"conf.high\",\"targets\":6}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\n\n\n<!-- ======================================================= -->\n\n### Combine univariate and multivariable {.unnumbered}\n\n#### Combine with **gtsummary**  {.unnumbered}  \n\nThe **gtsummary** package provides the `tbl_regression()` function, which will \ntake the outputs from a regression (`glm()` in this case) and produce an nice \nsummary table. \n\n\n::: {.cell}\n\n```{.r .cell-code}\n## show results table of final regression \nmv_tab <- tbl_regression(final_mv_reg, exponentiate = TRUE)\n```\n:::\n\n\nLet's see the table:  \n\n\n::: {.cell}\n\n```{.r .cell-code}\nmv_tab\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"niyryohdno\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#niyryohdno table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#niyryohdno thead, #niyryohdno tbody, #niyryohdno tfoot, #niyryohdno tr, #niyryohdno td, #niyryohdno th {\n  border-style: none;\n}\n\n#niyryohdno p {\n  margin: 0;\n  padding: 0;\n}\n\n#niyryohdno .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#niyryohdno .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#niyryohdno .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#niyryohdno .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#niyryohdno .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#niyryohdno .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#niyryohdno .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#niyryohdno .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#niyryohdno .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#niyryohdno .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#niyryohdno .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#niyryohdno .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#niyryohdno .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#niyryohdno .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#niyryohdno .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#niyryohdno .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#niyryohdno .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#niyryohdno .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#niyryohdno .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#niyryohdno .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#niyryohdno .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#niyryohdno .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#niyryohdno .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#niyryohdno .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#niyryohdno .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#niyryohdno .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#niyryohdno .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#niyryohdno .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#niyryohdno .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#niyryohdno .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#niyryohdno .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#niyryohdno .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#niyryohdno .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#niyryohdno .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#niyryohdno .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#niyryohdno .gt_left {\n  text-align: left;\n}\n\n#niyryohdno .gt_center {\n  text-align: center;\n}\n\n#niyryohdno .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#niyryohdno .gt_font_normal {\n  font-weight: normal;\n}\n\n#niyryohdno .gt_font_bold {\n  font-weight: bold;\n}\n\n#niyryohdno .gt_font_italic {\n  font-style: italic;\n}\n\n#niyryohdno .gt_super {\n  font-size: 65%;\n}\n\n#niyryohdno .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#niyryohdno .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#niyryohdno .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#niyryohdno .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#niyryohdno .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#niyryohdno .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#niyryohdno .gt_indent_5 {\n  text-indent: 25px;\n}\n\n#niyryohdno .katex-display {\n  display: inline-flex !important;\n  margin-bottom: 0.75em !important;\n}\n\n#niyryohdno div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {\n  height: 0px !important;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;div data-qmd-base64=&quot;KipDaGFyYWN0ZXJpc3RpYyoq&quot;&gt;&lt;div class='gt_from_md'&gt;&lt;p&gt;&lt;strong&gt;Characteristic&lt;/strong&gt;&lt;/p&gt;&#10;&lt;/div&gt;&lt;/div&gt;\"><div data-qmd-base64=\"KipDaGFyYWN0ZXJpc3RpYyoq\"><div class='gt_from_md'><p><strong>Characteristic</strong></p>\n</div></div></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;div data-qmd-base64=&quot;KipPUioq&quot;&gt;&lt;div class='gt_from_md'&gt;&lt;p&gt;&lt;strong&gt;OR&lt;/strong&gt;&lt;/p&gt;&#10;&lt;/div&gt;&lt;/div&gt;&lt;span class=&quot;gt_footnote_marks&quot; style=&quot;white-space:nowrap;font-style:italic;font-weight:normal;line-height: 0;&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/span&gt;\"><div data-qmd-base64=\"KipPUioq\"><div class='gt_from_md'><p><strong>OR</strong></p>\n</div></div><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height: 0;\"><sup>1</sup></span></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;div data-qmd-base64=&quot;Kio5NSUgQ0kqKg==&quot;&gt;&lt;div class='gt_from_md'&gt;&lt;p&gt;&lt;strong&gt;95% CI&lt;/strong&gt;&lt;/p&gt;&#10;&lt;/div&gt;&lt;/div&gt;&lt;span class=&quot;gt_footnote_marks&quot; style=&quot;white-space:nowrap;font-style:italic;font-weight:normal;line-height: 0;&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/span&gt;\"><div data-qmd-base64=\"Kio5NSUgQ0kqKg==\"><div class='gt_from_md'><p><strong>95% CI</strong></p>\n</div></div><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height: 0;\"><sup>1</sup></span></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;div data-qmd-base64=&quot;KipwLXZhbHVlKio=&quot;&gt;&lt;div class='gt_from_md'&gt;&lt;p&gt;&lt;strong&gt;p-value&lt;/strong&gt;&lt;/p&gt;&#10;&lt;/div&gt;&lt;/div&gt;\"><div data-qmd-base64=\"KipwLXZhbHVlKio=\"><div class='gt_from_md'><p><strong>p-value</strong></p>\n</div></div></th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">gender</td>\n<td headers=\"estimate\" class=\"gt_row gt_center\">1.00</td>\n<td headers=\"conf.low\" class=\"gt_row gt_center\">0.88, 1.14</td>\n<td headers=\"p.value\" class=\"gt_row gt_center\">>0.9</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">fever</td>\n<td headers=\"estimate\" class=\"gt_row gt_center\">1.00</td>\n<td headers=\"conf.low\" class=\"gt_row gt_center\">0.86, 1.18</td>\n<td headers=\"p.value\" class=\"gt_row gt_center\">>0.9</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">chills</td>\n<td headers=\"estimate\" class=\"gt_row gt_center\">1.03</td>\n<td headers=\"conf.low\" class=\"gt_row gt_center\">0.89, 1.21</td>\n<td headers=\"p.value\" class=\"gt_row gt_center\">0.7</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">cough</td>\n<td headers=\"estimate\" class=\"gt_row gt_center\">1.15</td>\n<td headers=\"conf.low\" class=\"gt_row gt_center\">0.96, 1.37</td>\n<td headers=\"p.value\" class=\"gt_row gt_center\">0.12</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">aches</td>\n<td headers=\"estimate\" class=\"gt_row gt_center\">0.93</td>\n<td headers=\"conf.low\" class=\"gt_row gt_center\">0.76, 1.14</td>\n<td headers=\"p.value\" class=\"gt_row gt_center\">0.5</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">vomit</td>\n<td headers=\"estimate\" class=\"gt_row gt_center\">1.09</td>\n<td headers=\"conf.low\" class=\"gt_row gt_center\">0.96, 1.23</td>\n<td headers=\"p.value\" class=\"gt_row gt_center\">0.2</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">age_cat</td>\n<td headers=\"estimate\" class=\"gt_row gt_center\"><br /></td>\n<td headers=\"conf.low\" class=\"gt_row gt_center\"><br /></td>\n<td headers=\"p.value\" class=\"gt_row gt_center\"><br /></td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    0-4</td>\n<td headers=\"estimate\" class=\"gt_row gt_center\">—</td>\n<td headers=\"conf.low\" class=\"gt_row gt_center\">—</td>\n<td headers=\"p.value\" class=\"gt_row gt_center\"><br /></td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    5-9</td>\n<td headers=\"estimate\" class=\"gt_row gt_center\">0.94</td>\n<td headers=\"conf.low\" class=\"gt_row gt_center\">0.77, 1.15</td>\n<td headers=\"p.value\" class=\"gt_row gt_center\">0.5</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    10-14</td>\n<td headers=\"estimate\" class=\"gt_row gt_center\">1.15</td>\n<td headers=\"conf.low\" class=\"gt_row gt_center\">0.93, 1.41</td>\n<td headers=\"p.value\" class=\"gt_row gt_center\">0.2</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    15-19</td>\n<td headers=\"estimate\" class=\"gt_row gt_center\">0.99</td>\n<td headers=\"conf.low\" class=\"gt_row gt_center\">0.79, 1.24</td>\n<td headers=\"p.value\" class=\"gt_row gt_center\">>0.9</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    20-29</td>\n<td headers=\"estimate\" class=\"gt_row gt_center\">1.03</td>\n<td headers=\"conf.low\" class=\"gt_row gt_center\">0.84, 1.26</td>\n<td headers=\"p.value\" class=\"gt_row gt_center\">0.8</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    30-49</td>\n<td headers=\"estimate\" class=\"gt_row gt_center\">1.06</td>\n<td headers=\"conf.low\" class=\"gt_row gt_center\">0.85, 1.33</td>\n<td headers=\"p.value\" class=\"gt_row gt_center\">0.6</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    50-69</td>\n<td headers=\"estimate\" class=\"gt_row gt_center\">0.68</td>\n<td headers=\"conf.low\" class=\"gt_row gt_center\">0.40, 1.13</td>\n<td headers=\"p.value\" class=\"gt_row gt_center\">0.14</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    70+</td>\n<td headers=\"estimate\" class=\"gt_row gt_center\">0.52</td>\n<td headers=\"conf.low\" class=\"gt_row gt_center\">0.07, 3.19</td>\n<td headers=\"p.value\" class=\"gt_row gt_center\">0.5</td></tr>\n  </tbody>\n  \n  <tfoot class=\"gt_footnotes\">\n    <tr>\n      <td class=\"gt_footnote\" colspan=\"4\"><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height: 0;\"><sup>1</sup></span> <div data-qmd-base64=\"T1IgPSBPZGRzIFJhdGlvLCBDSSA9IENvbmZpZGVuY2UgSW50ZXJ2YWw=\"><div class='gt_from_md'><p>OR = Odds Ratio, CI = Confidence Interval</p>\n</div></div></td>\n    </tr>\n  </tfoot>\n</table>\n</div>\n```\n\n:::\n:::\n\n\nYou can also combine several different output tables produced by **gtsummary** with \nthe `tbl_merge()` function. We now combine the multivariable results with the **gtsummary** *univariate* results that we created [above](#reg_gt_uni):  \n\n\n::: {.cell}\n\n```{.r .cell-code}\n## combine with univariate results \ntbl_merge(\n  tbls = list(univ_tab, mv_tab),                          # combine\n  tab_spanner = c(\"**Univariate**\", \"**Multivariable**\")) # set header names\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"xmiennmzlt\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#xmiennmzlt table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#xmiennmzlt thead, #xmiennmzlt tbody, #xmiennmzlt tfoot, #xmiennmzlt tr, #xmiennmzlt td, #xmiennmzlt th {\n  border-style: none;\n}\n\n#xmiennmzlt p {\n  margin: 0;\n  padding: 0;\n}\n\n#xmiennmzlt .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#xmiennmzlt .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#xmiennmzlt .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#xmiennmzlt .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#xmiennmzlt .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#xmiennmzlt .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#xmiennmzlt .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#xmiennmzlt .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#xmiennmzlt .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#xmiennmzlt .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#xmiennmzlt .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#xmiennmzlt .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#xmiennmzlt .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#xmiennmzlt .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#xmiennmzlt .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#xmiennmzlt .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#xmiennmzlt .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#xmiennmzlt .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#xmiennmzlt .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#xmiennmzlt .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#xmiennmzlt .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#xmiennmzlt .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#xmiennmzlt .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#xmiennmzlt .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#xmiennmzlt .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#xmiennmzlt .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#xmiennmzlt .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#xmiennmzlt .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#xmiennmzlt .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#xmiennmzlt .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#xmiennmzlt .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#xmiennmzlt .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#xmiennmzlt .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#xmiennmzlt .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#xmiennmzlt .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#xmiennmzlt .gt_left {\n  text-align: left;\n}\n\n#xmiennmzlt .gt_center {\n  text-align: center;\n}\n\n#xmiennmzlt .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#xmiennmzlt .gt_font_normal {\n  font-weight: normal;\n}\n\n#xmiennmzlt .gt_font_bold {\n  font-weight: bold;\n}\n\n#xmiennmzlt .gt_font_italic {\n  font-style: italic;\n}\n\n#xmiennmzlt .gt_super {\n  font-size: 65%;\n}\n\n#xmiennmzlt .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#xmiennmzlt .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#xmiennmzlt .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#xmiennmzlt .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#xmiennmzlt .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#xmiennmzlt .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#xmiennmzlt .gt_indent_5 {\n  text-indent: 25px;\n}\n\n#xmiennmzlt .katex-display {\n  display: inline-flex !important;\n  margin-bottom: 0.75em !important;\n}\n\n#xmiennmzlt div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {\n  height: 0px !important;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_col_headings gt_spanner_row\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"2\" colspan=\"1\" scope=\"col\" id=\"&lt;div data-qmd-base64=&quot;KipDaGFyYWN0ZXJpc3RpYyoq&quot;&gt;&lt;div class='gt_from_md'&gt;&lt;p&gt;&lt;strong&gt;Characteristic&lt;/strong&gt;&lt;/p&gt;&#10;&lt;/div&gt;&lt;/div&gt;\"><div data-qmd-base64=\"KipDaGFyYWN0ZXJpc3RpYyoq\"><div class='gt_from_md'><p><strong>Characteristic</strong></p>\n</div></div></th>\n      <th class=\"gt_center gt_columns_top_border gt_column_spanner_outer\" rowspan=\"1\" colspan=\"4\" scope=\"colgroup\" id=\"&lt;div data-qmd-base64=&quot;KipVbml2YXJpYXRlKio=&quot;&gt;&lt;div class='gt_from_md'&gt;&lt;p&gt;&lt;strong&gt;Univariate&lt;/strong&gt;&lt;/p&gt;&#10;&lt;/div&gt;&lt;/div&gt;\">\n        <span class=\"gt_column_spanner\"><div data-qmd-base64=\"KipVbml2YXJpYXRlKio=\"><div class='gt_from_md'><p><strong>Univariate</strong></p>\n</div></div></span>\n      </th>\n      <th class=\"gt_center gt_columns_top_border gt_column_spanner_outer\" rowspan=\"1\" colspan=\"3\" scope=\"colgroup\" id=\"&lt;div data-qmd-base64=&quot;KipNdWx0aXZhcmlhYmxlKio=&quot;&gt;&lt;div class='gt_from_md'&gt;&lt;p&gt;&lt;strong&gt;Multivariable&lt;/strong&gt;&lt;/p&gt;&#10;&lt;/div&gt;&lt;/div&gt;\">\n        <span class=\"gt_column_spanner\"><div data-qmd-base64=\"KipNdWx0aXZhcmlhYmxlKio=\"><div class='gt_from_md'><p><strong>Multivariable</strong></p>\n</div></div></span>\n      </th>\n    </tr>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;div data-qmd-base64=&quot;KipOKio=&quot;&gt;&lt;div class='gt_from_md'&gt;&lt;p&gt;&lt;strong&gt;N&lt;/strong&gt;&lt;/p&gt;&#10;&lt;/div&gt;&lt;/div&gt;\"><div data-qmd-base64=\"KipOKio=\"><div class='gt_from_md'><p><strong>N</strong></p>\n</div></div></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;div data-qmd-base64=&quot;KipPUioq&quot;&gt;&lt;div class='gt_from_md'&gt;&lt;p&gt;&lt;strong&gt;OR&lt;/strong&gt;&lt;/p&gt;&#10;&lt;/div&gt;&lt;/div&gt;&lt;span class=&quot;gt_footnote_marks&quot; style=&quot;white-space:nowrap;font-style:italic;font-weight:normal;line-height: 0;&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/span&gt;\"><div data-qmd-base64=\"KipPUioq\"><div class='gt_from_md'><p><strong>OR</strong></p>\n</div></div><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height: 0;\"><sup>1</sup></span></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;div data-qmd-base64=&quot;Kio5NSUgQ0kqKg==&quot;&gt;&lt;div class='gt_from_md'&gt;&lt;p&gt;&lt;strong&gt;95% CI&lt;/strong&gt;&lt;/p&gt;&#10;&lt;/div&gt;&lt;/div&gt;&lt;span class=&quot;gt_footnote_marks&quot; style=&quot;white-space:nowrap;font-style:italic;font-weight:normal;line-height: 0;&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/span&gt;\"><div data-qmd-base64=\"Kio5NSUgQ0kqKg==\"><div class='gt_from_md'><p><strong>95% CI</strong></p>\n</div></div><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height: 0;\"><sup>1</sup></span></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;div data-qmd-base64=&quot;KipwLXZhbHVlKio=&quot;&gt;&lt;div class='gt_from_md'&gt;&lt;p&gt;&lt;strong&gt;p-value&lt;/strong&gt;&lt;/p&gt;&#10;&lt;/div&gt;&lt;/div&gt;\"><div data-qmd-base64=\"KipwLXZhbHVlKio=\"><div class='gt_from_md'><p><strong>p-value</strong></p>\n</div></div></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;div data-qmd-base64=&quot;KipPUioq&quot;&gt;&lt;div class='gt_from_md'&gt;&lt;p&gt;&lt;strong&gt;OR&lt;/strong&gt;&lt;/p&gt;&#10;&lt;/div&gt;&lt;/div&gt;&lt;span class=&quot;gt_footnote_marks&quot; style=&quot;white-space:nowrap;font-style:italic;font-weight:normal;line-height: 0;&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/span&gt;\"><div data-qmd-base64=\"KipPUioq\"><div class='gt_from_md'><p><strong>OR</strong></p>\n</div></div><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height: 0;\"><sup>1</sup></span></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;div data-qmd-base64=&quot;Kio5NSUgQ0kqKg==&quot;&gt;&lt;div class='gt_from_md'&gt;&lt;p&gt;&lt;strong&gt;95% CI&lt;/strong&gt;&lt;/p&gt;&#10;&lt;/div&gt;&lt;/div&gt;&lt;span class=&quot;gt_footnote_marks&quot; style=&quot;white-space:nowrap;font-style:italic;font-weight:normal;line-height: 0;&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/span&gt;\"><div data-qmd-base64=\"Kio5NSUgQ0kqKg==\"><div class='gt_from_md'><p><strong>95% CI</strong></p>\n</div></div><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height: 0;\"><sup>1</sup></span></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;div data-qmd-base64=&quot;KipwLXZhbHVlKio=&quot;&gt;&lt;div class='gt_from_md'&gt;&lt;p&gt;&lt;strong&gt;p-value&lt;/strong&gt;&lt;/p&gt;&#10;&lt;/div&gt;&lt;/div&gt;\"><div data-qmd-base64=\"KipwLXZhbHVlKio=\"><div class='gt_from_md'><p><strong>p-value</strong></p>\n</div></div></th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">gender</td>\n<td headers=\"stat_n_1\" class=\"gt_row gt_center\">4,167</td>\n<td headers=\"estimate_1\" class=\"gt_row gt_center\">1.00</td>\n<td headers=\"conf.low_1\" class=\"gt_row gt_center\">0.88, 1.13</td>\n<td headers=\"p.value_1\" class=\"gt_row gt_center\">>0.9</td>\n<td headers=\"estimate_2\" class=\"gt_row gt_center\">1.00</td>\n<td headers=\"conf.low_2\" class=\"gt_row gt_center\">0.88, 1.14</td>\n<td headers=\"p.value_2\" class=\"gt_row gt_center\">>0.9</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">fever</td>\n<td headers=\"stat_n_1\" class=\"gt_row gt_center\">4,167</td>\n<td headers=\"estimate_1\" class=\"gt_row gt_center\">1.00</td>\n<td headers=\"conf.low_1\" class=\"gt_row gt_center\">0.85, 1.17</td>\n<td headers=\"p.value_1\" class=\"gt_row gt_center\">>0.9</td>\n<td headers=\"estimate_2\" class=\"gt_row gt_center\">1.00</td>\n<td headers=\"conf.low_2\" class=\"gt_row gt_center\">0.86, 1.18</td>\n<td headers=\"p.value_2\" class=\"gt_row gt_center\">>0.9</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">chills</td>\n<td headers=\"stat_n_1\" class=\"gt_row gt_center\">4,167</td>\n<td headers=\"estimate_1\" class=\"gt_row gt_center\">1.03</td>\n<td headers=\"conf.low_1\" class=\"gt_row gt_center\">0.89, 1.21</td>\n<td headers=\"p.value_1\" class=\"gt_row gt_center\">0.7</td>\n<td headers=\"estimate_2\" class=\"gt_row gt_center\">1.03</td>\n<td headers=\"conf.low_2\" class=\"gt_row gt_center\">0.89, 1.21</td>\n<td headers=\"p.value_2\" class=\"gt_row gt_center\">0.7</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">cough</td>\n<td headers=\"stat_n_1\" class=\"gt_row gt_center\">4,167</td>\n<td headers=\"estimate_1\" class=\"gt_row gt_center\">1.15</td>\n<td headers=\"conf.low_1\" class=\"gt_row gt_center\">0.97, 1.37</td>\n<td headers=\"p.value_1\" class=\"gt_row gt_center\">0.11</td>\n<td headers=\"estimate_2\" class=\"gt_row gt_center\">1.15</td>\n<td headers=\"conf.low_2\" class=\"gt_row gt_center\">0.96, 1.37</td>\n<td headers=\"p.value_2\" class=\"gt_row gt_center\">0.12</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">aches</td>\n<td headers=\"stat_n_1\" class=\"gt_row gt_center\">4,167</td>\n<td headers=\"estimate_1\" class=\"gt_row gt_center\">0.93</td>\n<td headers=\"conf.low_1\" class=\"gt_row gt_center\">0.76, 1.14</td>\n<td headers=\"p.value_1\" class=\"gt_row gt_center\">0.5</td>\n<td headers=\"estimate_2\" class=\"gt_row gt_center\">0.93</td>\n<td headers=\"conf.low_2\" class=\"gt_row gt_center\">0.76, 1.14</td>\n<td headers=\"p.value_2\" class=\"gt_row gt_center\">0.5</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">vomit</td>\n<td headers=\"stat_n_1\" class=\"gt_row gt_center\">4,167</td>\n<td headers=\"estimate_1\" class=\"gt_row gt_center\">1.09</td>\n<td headers=\"conf.low_1\" class=\"gt_row gt_center\">0.96, 1.23</td>\n<td headers=\"p.value_1\" class=\"gt_row gt_center\">0.2</td>\n<td headers=\"estimate_2\" class=\"gt_row gt_center\">1.09</td>\n<td headers=\"conf.low_2\" class=\"gt_row gt_center\">0.96, 1.23</td>\n<td headers=\"p.value_2\" class=\"gt_row gt_center\">0.2</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">age_cat</td>\n<td headers=\"stat_n_1\" class=\"gt_row gt_center\">4,167</td>\n<td headers=\"estimate_1\" class=\"gt_row gt_center\"><br /></td>\n<td headers=\"conf.low_1\" class=\"gt_row gt_center\"><br /></td>\n<td headers=\"p.value_1\" class=\"gt_row gt_center\"><br /></td>\n<td headers=\"estimate_2\" class=\"gt_row gt_center\"><br /></td>\n<td headers=\"conf.low_2\" class=\"gt_row gt_center\"><br /></td>\n<td headers=\"p.value_2\" class=\"gt_row gt_center\"><br /></td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    0-4</td>\n<td headers=\"stat_n_1\" class=\"gt_row gt_center\"><br /></td>\n<td headers=\"estimate_1\" class=\"gt_row gt_center\">—</td>\n<td headers=\"conf.low_1\" class=\"gt_row gt_center\">—</td>\n<td headers=\"p.value_1\" class=\"gt_row gt_center\"><br /></td>\n<td headers=\"estimate_2\" class=\"gt_row gt_center\">—</td>\n<td headers=\"conf.low_2\" class=\"gt_row gt_center\">—</td>\n<td headers=\"p.value_2\" class=\"gt_row gt_center\"><br /></td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    5-9</td>\n<td headers=\"stat_n_1\" class=\"gt_row gt_center\"><br /></td>\n<td headers=\"estimate_1\" class=\"gt_row gt_center\">0.94</td>\n<td headers=\"conf.low_1\" class=\"gt_row gt_center\">0.77, 1.15</td>\n<td headers=\"p.value_1\" class=\"gt_row gt_center\">0.5</td>\n<td headers=\"estimate_2\" class=\"gt_row gt_center\">0.94</td>\n<td headers=\"conf.low_2\" class=\"gt_row gt_center\">0.77, 1.15</td>\n<td headers=\"p.value_2\" class=\"gt_row gt_center\">0.5</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    10-14</td>\n<td headers=\"stat_n_1\" class=\"gt_row gt_center\"><br /></td>\n<td headers=\"estimate_1\" class=\"gt_row gt_center\">1.15</td>\n<td headers=\"conf.low_1\" class=\"gt_row gt_center\">0.93, 1.42</td>\n<td headers=\"p.value_1\" class=\"gt_row gt_center\">0.2</td>\n<td headers=\"estimate_2\" class=\"gt_row gt_center\">1.15</td>\n<td headers=\"conf.low_2\" class=\"gt_row gt_center\">0.93, 1.41</td>\n<td headers=\"p.value_2\" class=\"gt_row gt_center\">0.2</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    15-19</td>\n<td headers=\"stat_n_1\" class=\"gt_row gt_center\"><br /></td>\n<td headers=\"estimate_1\" class=\"gt_row gt_center\">0.99</td>\n<td headers=\"conf.low_1\" class=\"gt_row gt_center\">0.80, 1.24</td>\n<td headers=\"p.value_1\" class=\"gt_row gt_center\">>0.9</td>\n<td headers=\"estimate_2\" class=\"gt_row gt_center\">0.99</td>\n<td headers=\"conf.low_2\" class=\"gt_row gt_center\">0.79, 1.24</td>\n<td headers=\"p.value_2\" class=\"gt_row gt_center\">>0.9</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    20-29</td>\n<td headers=\"stat_n_1\" class=\"gt_row gt_center\"><br /></td>\n<td headers=\"estimate_1\" class=\"gt_row gt_center\">1.03</td>\n<td headers=\"conf.low_1\" class=\"gt_row gt_center\">0.84, 1.26</td>\n<td headers=\"p.value_1\" class=\"gt_row gt_center\">0.8</td>\n<td headers=\"estimate_2\" class=\"gt_row gt_center\">1.03</td>\n<td headers=\"conf.low_2\" class=\"gt_row gt_center\">0.84, 1.26</td>\n<td headers=\"p.value_2\" class=\"gt_row gt_center\">0.8</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    30-49</td>\n<td headers=\"stat_n_1\" class=\"gt_row gt_center\"><br /></td>\n<td headers=\"estimate_1\" class=\"gt_row gt_center\">1.07</td>\n<td headers=\"conf.low_1\" class=\"gt_row gt_center\">0.85, 1.33</td>\n<td headers=\"p.value_1\" class=\"gt_row gt_center\">0.6</td>\n<td headers=\"estimate_2\" class=\"gt_row gt_center\">1.06</td>\n<td headers=\"conf.low_2\" class=\"gt_row gt_center\">0.85, 1.33</td>\n<td headers=\"p.value_2\" class=\"gt_row gt_center\">0.6</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    50-69</td>\n<td headers=\"stat_n_1\" class=\"gt_row gt_center\"><br /></td>\n<td headers=\"estimate_1\" class=\"gt_row gt_center\">0.68</td>\n<td headers=\"conf.low_1\" class=\"gt_row gt_center\">0.41, 1.13</td>\n<td headers=\"p.value_1\" class=\"gt_row gt_center\">0.13</td>\n<td headers=\"estimate_2\" class=\"gt_row gt_center\">0.68</td>\n<td headers=\"conf.low_2\" class=\"gt_row gt_center\">0.40, 1.13</td>\n<td headers=\"p.value_2\" class=\"gt_row gt_center\">0.14</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    70+</td>\n<td headers=\"stat_n_1\" class=\"gt_row gt_center\"><br /></td>\n<td headers=\"estimate_1\" class=\"gt_row gt_center\">0.53</td>\n<td headers=\"conf.low_1\" class=\"gt_row gt_center\">0.07, 3.20</td>\n<td headers=\"p.value_1\" class=\"gt_row gt_center\">0.5</td>\n<td headers=\"estimate_2\" class=\"gt_row gt_center\">0.52</td>\n<td headers=\"conf.low_2\" class=\"gt_row gt_center\">0.07, 3.19</td>\n<td headers=\"p.value_2\" class=\"gt_row gt_center\">0.5</td></tr>\n  </tbody>\n  \n  <tfoot class=\"gt_footnotes\">\n    <tr>\n      <td class=\"gt_footnote\" colspan=\"8\"><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;line-height: 0;\"><sup>1</sup></span> <div data-qmd-base64=\"T1IgPSBPZGRzIFJhdGlvLCBDSSA9IENvbmZpZGVuY2UgSW50ZXJ2YWw=\"><div class='gt_from_md'><p>OR = Odds Ratio, CI = Confidence Interval</p>\n</div></div></td>\n    </tr>\n  </tfoot>\n</table>\n</div>\n```\n\n:::\n:::\n\n\n\n\n#### Combine with **dplyr** {.unnumbered}  \n\nAn alternative way of combining the `glm()`/`tidy()` univariate and multivariable outputs is with the **dplyr** join functions.  \n\n* Join the univariate results from earlier (`univ_tab_base`, which contains counts) with the tidied multivariable results `mv_tab_base`  \n* Use `select()` to keep only the columns we want, specify their order, and re-name them  \n* Use `round()` with two decimal places on all the column that are class Double  \n\n\n::: {.cell}\n\n```{.r .cell-code}\n## combine univariate and multivariable tables \nleft_join(univ_tab_base, mv_tab_base, by = \"term\") %>% \n  ## choose columns and rename them\n  select( # new name =  old name\n    \"characteristic\" = term, \n    \"recovered\"      = \"0\", \n    \"dead\"           = \"1\", \n    \"univ_or\"        = estimate.x, \n    \"univ_ci_low\"    = conf.low.x, \n    \"univ_ci_high\"   = conf.high.x,\n    \"univ_pval\"      = p.value.x, \n    \"mv_or\"          = estimate.y, \n    \"mvv_ci_low\"     = conf.low.y, \n    \"mv_ci_high\"     = conf.high.y,\n    \"mv_pval\"        = p.value.y \n  ) %>% \n  mutate(across(where(is.double), round, 2))   \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 20 × 11\n   characteristic recovered  dead univ_or univ_ci_low univ_ci_high univ_pval\n   <chr>              <dbl> <dbl>   <dbl>       <dbl>        <dbl>     <dbl>\n 1 (Intercept)          909  1168    1.28        1.18         1.4       0   \n 2 gender               916  1174    1           0.88         1.13      0.97\n 3 (Intercept)          340   436    1.28        1.11         1.48      0   \n 4 fever               1485  1906    1           0.85         1.17      0.99\n 5 (Intercept)         1472  1877    1.28        1.19         1.37      0   \n 6 chills               353   465    1.03        0.89         1.21      0.68\n 7 (Intercept)          272   309    1.14        0.97         1.34      0.13\n 8 cough               1553  2033    1.15        0.97         1.37      0.11\n 9 (Intercept)         1636  2114    1.29        1.21         1.38      0   \n10 aches                189   228    0.93        0.76         1.14      0.51\n11 (Intercept)          931  1144    1.23        1.13         1.34      0   \n12 vomit                894  1198    1.09        0.96         1.23      0.17\n13 (Intercept)          338   427    1.26        1.1          1.46      0   \n14 age_cat5-9           365   433    0.94        0.77         1.15      0.54\n15 age_cat10-14         273   396    1.15        0.93         1.42      0.2 \n16 age_cat15-19         238   299    0.99        0.8          1.24      0.96\n17 age_cat20-29         345   448    1.03        0.84         1.26      0.79\n18 age_cat30-49         228   307    1.07        0.85         1.33      0.58\n19 age_cat50-69          35    30    0.68        0.41         1.13      0.13\n20 age_cat70+             3     2    0.53        0.07         3.2       0.49\n# ℹ 4 more variables: mv_or <dbl>, mvv_ci_low <dbl>, mv_ci_high <dbl>,\n#   mv_pval <dbl>\n```\n\n\n:::\n:::\n\n\n\n\n\n<!-- ======================================================= -->\n\n## Forest plot {  }\n\nThis section shows how to produce a plot with the outputs of your regression.\nThere are two options, you can build a plot yourself using **ggplot2** or use a \nmeta-package called **easystats** (a package that includes many packages).  \n\nSee the page on [ggplot basics](ggplot_basics.qmd) if you are unfamiliar with the **ggplot2** plotting package.  \n\n\n<!-- ======================================================= -->\n\n### **ggplot2** package {.unnumbered}\n\nYou can build a forest plot with `ggplot()` by plotting elements of the multivariable regression results. Add the layers of the plots using these \"geoms\":  \n\n* estimates with `geom_point()`  \n* confidence intervals with `geom_errorbar()`  \n* a vertical line at OR = 1 with `geom_vline()`  \n\nBefore plotting, you may want to use `fct_relevel()` from the **forcats** package to set the order of the variables/levels on the y-axis. `ggplot()` may display them in alpha-numeric order which would not work well for these age category values (\"30\" would appear before \"5\"). See the page on [Factors](factors.qmd) for more details.  \n\n\n::: {.cell}\n\n```{.r .cell-code}\n## remove the intercept term from your multivariable results\nmv_tab_base %>% \n  \n  #set order of levels to appear along y-axis\n  mutate(term = fct_relevel(\n    term,\n    \"vomit\", \"gender\", \"fever\", \"cough\", \"chills\", \"aches\",\n    \"age_cat5-9\", \"age_cat10-14\", \"age_cat15-19\", \"age_cat20-29\",\n    \"age_cat30-49\", \"age_cat50-69\", \"age_cat70+\")) %>%\n  \n  # remove \"intercept\" row from plot\n  filter(term != \"(Intercept)\") %>% \n  \n  ## plot with variable on the y axis and estimate (OR) on the x axis\n  ggplot(aes(x = estimate, y = term)) +\n  \n  ## show the estimate as a point\n  geom_point() + \n  \n  ## add in an error bar for the confidence intervals\n  geom_errorbar(aes(xmin = conf.low, xmax = conf.high)) + \n  \n  ## show where OR = 1 is for reference as a dashed line\n  geom_vline(xintercept = 1, linetype = \"dashed\")\n```\n\n::: {.cell-output-display}\n![](regression_files/figure-html/ggplot_forest-1.png){width=672}\n:::\n:::\n\n\n\n<!-- ======================================================= -->\n\n### **easystats** packages {.unnumbered}\n\nAn alternative, if you do not want to the fine level of control that **ggplot2** provides, is to use a combination of **easystats** packages.  \n\nThe function `model_parameters()` from the **parameters** package does the equivalent\nof the **broom** package function `tidy()`. The **see** package then accepts those outputs\nand creates a default forest plot as a `ggplot()` object. \n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(easystats)\n\n## remove the intercept term from your multivariable results\nfinal_mv_reg %>% \n  model_parameters(exponentiate = TRUE) %>% \n  plot()\n```\n\n::: {.cell-output-display}\n![](regression_files/figure-html/easystats_forest-1.png){width=672}\n:::\n:::\n\n\n\n<!-- ======================================================= -->\n\n## Resources {  }\n\nThe content of this page was informed by these resources and vignettes online:  \n\n[Linear regression in R](https://www.datacamp.com/community/tutorials/linear-regression-R)  \n\n[gtsummary](http://www.danieldsjoberg.com/gtsummary/articles/tbl_regression.html)  \n\n[UCLA stats page](https://stats.idre.ucla.edu/other/dae/)  \n\n[sthda stepwise regression](http://www.sthda.com/english/articles/36-classification-methods-essentials/150-stepwise-logistic-regression-essentials-in-r/)   \n\n",
    "supporting": [
      "regression_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../site_libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<link href=\"../site_libs/datatables-css-0.0.0/datatables-crosstalk.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/datatables-binding-0.33/datatables.js\"></script>\n<script src=\"../site_libs/jquery-3.6.0/jquery-3.6.0.min.js\"></script>\n<link href=\"../site_libs/dt-core-1.13.6/css/jquery.dataTables.min.css\" rel=\"stylesheet\" />\n<link href=\"../site_libs/dt-core-1.13.6/css/jquery.dataTables.extra.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/dt-core-1.13.6/js/jquery.dataTables.min.js\"></script>\n<link href=\"../site_libs/crosstalk-1.2.1/css/crosstalk.min.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/crosstalk-1.2.1/js/crosstalk.min.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}