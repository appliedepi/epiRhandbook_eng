{
  "hash": "144caa9825227f5b3c614fa3edaf0172",
  "result": {
    "markdown": "\n# Demographic pyramids and Likert-scales {}  \n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](../images/pop_pyramid_baseline.png){width=50%}\n:::\n\n::: {.cell-output-display}\n![](../images/likert.png){width=50%}\n:::\n:::\n\n\n\nDemographic pyramids are useful to show distributions of age and gender. Similar code can be used to visualize the results of Likert-style survey questions (e.g. \"Strongly agree\", \"Agree\", \"Neutral\", \"Disagree\", \"Strongly disagree\"). In this page we cover the following:  \n\n* Fast & easy pyramids using the **apyramid** package  \n* More customizeable pyramids using `ggplot()`  \n* Displaying \"baseline\" demographics in the background of the pyramid  \n* Using pyramid-style plots to show other types of data (e.g responses to **Likert-style** survey questions)  \n\n\n\n\n\n<!-- ======================================================= -->\n## Preparation {}\n\n\n\n### Load packages {.unnumbered}\n\nThis code chunk shows the loading of packages required for the analyses. In this handbook we emphasize `p_load()` from **pacman**, which installs the package if necessary *and* loads it for use. You can also load installed packages with  `library()` from **base** R. See the page on [R basics] for more information on R packages.  \n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(rio,       # to import data\n               here,      # to locate files\n               tidyverse, # to clean, handle, and plot the data (includes ggplot2 package)\n               apyramid,  # a package dedicated to creating age pyramids\n               janitor,   # tables and cleaning data\n               stringr)   # working with strings for titles, captions, etc.\n```\n:::\n\n\n\n\n\n### Import data {.unnumbered}  \n\nTo begin, we import the cleaned linelist of cases from a simulated Ebola epidemic. If you want to follow along, <a href='https://github.com/appliedepi/epirhandbook_eng/raw/master/data/case_linelists/linelist_cleaned.rds' class='download-button'>click to download the \"clean\" linelist</a> (as .rds file). Import data with the `import()` function from the **rio** package (it handles many file types like .xlsx, .csv, .rds - see the [Import and export] page for details).  \n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# import case linelist \nlinelist <- import(\"linelist_cleaned.rds\")\n```\n:::\n\n\nThe first 50 rows of the linelist are displayed below.\n\n\n::: {.cell}\n::: {.cell-output-display}\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-45a4398b5e8443de0ad1\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-45a4398b5e8443de0ad1\">{\"x\":{\"filter\":\"top\",\"vertical\":false,\"filterHTML\":\"<tr>\\n  <td data-type=\\\"character\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"number\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n    <div style=\\\"display: none;position: absolute;width: 200px;opacity: 1\\\">\\n      <div data-min=\\\"2\\\" data-max=\\\"13\\\"><\\/div>\\n      <span style=\\\"float: left;\\\"><\\/span>\\n      <span style=\\\"float: right;\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"date\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n    <div style=\\\"display: none;position: absolute;width: 200px;opacity: 1\\\">\\n      <div data-min=\\\"1399075200000\\\" data-max=\\\"1406419200000\\\"><\\/div>\\n      <span style=\\\"float: left;\\\"><\\/span>\\n      <span style=\\\"float: right;\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"date\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n    <div style=\\\"display: none;position: absolute;width: 200px;opacity: 1\\\">\\n      <div data-min=\\\"1399939200000\\\" data-max=\\\"1.407024e+12\\\"><\\/div>\\n      <span style=\\\"float: left;\\\"><\\/span>\\n      <span style=\\\"float: right;\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"date\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n    <div style=\\\"display: none;position: absolute;width: 200px;opacity: 1\\\">\\n      <div data-min=\\\"1400025600000\\\" data-max=\\\"1407110400000\\\"><\\/div>\\n      <span style=\\\"float: left;\\\"><\\/span>\\n      <span style=\\\"float: right;\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"date\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n    <div style=\\\"display: none;position: absolute;width: 200px;opacity: 1\\\">\\n      <div data-min=\\\"1400371200000\\\" data-max=\\\"1410566400000\\\"><\\/div>\\n      <span style=\\\"float: left;\\\"><\\/span>\\n      <span style=\\\"float: right;\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"character\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"character\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"number\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n    <div style=\\\"display: none;position: absolute;width: 200px;opacity: 1\\\">\\n      <div data-min=\\\"0\\\" data-max=\\\"67\\\"><\\/div>\\n      <span style=\\\"float: left;\\\"><\\/span>\\n      <span style=\\\"float: right;\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"character\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\" disabled=\\\"\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"number\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n    <div style=\\\"display: none;position: absolute;width: 200px;opacity: 1\\\">\\n      <div data-min=\\\"0\\\" data-max=\\\"67\\\"><\\/div>\\n      <span style=\\\"float: left;\\\"><\\/span>\\n      <span style=\\\"float: right;\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"factor\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n    <div style=\\\"width: 100%; display: none;\\\">\\n      <select multiple=\\\"multiple\\\" style=\\\"width: 100%;\\\" data-options=\\\"[&quot;0-4&quot;,&quot;5-9&quot;,&quot;10-14&quot;,&quot;15-19&quot;,&quot;20-29&quot;,&quot;30-49&quot;,&quot;50-69&quot;,&quot;70+&quot;]\\\"><\\/select>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"factor\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n    <div style=\\\"width: 100%; display: none;\\\">\\n      <select multiple=\\\"multiple\\\" style=\\\"width: 100%;\\\" data-options=\\\"[&quot;0-4&quot;,&quot;5-9&quot;,&quot;10-14&quot;,&quot;15-19&quot;,&quot;20-24&quot;,&quot;25-29&quot;,&quot;30-34&quot;,&quot;35-39&quot;,&quot;40-44&quot;,&quot;45-49&quot;,&quot;50-54&quot;,&quot;55-59&quot;,&quot;60-64&quot;,&quot;65-69&quot;,&quot;70-74&quot;,&quot;75-79&quot;,&quot;80-84&quot;,&quot;85+&quot;]\\\"><\\/select>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"character\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"number\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n    <div style=\\\"display: none;position: absolute;width: 200px;opacity: 1\\\">\\n      <div data-min=\\\"-13.2697246824573\\\" data-max=\\\"-13.209391925612\\\" data-scale=\\\"13\\\"><\\/div>\\n      <span style=\\\"float: left;\\\"><\\/span>\\n      <span style=\\\"float: right;\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"number\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n    <div style=\\\"display: none;position: absolute;width: 200px;opacity: 1\\\">\\n      <div data-min=\\\"8.45171855856465\\\" data-max=\\\"8.48802917129884\\\" data-scale=\\\"14\\\"><\\/div>\\n      <span style=\\\"float: left;\\\"><\\/span>\\n      <span style=\\\"float: right;\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"character\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"character\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"number\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n    <div style=\\\"display: none;position: absolute;width: 200px;opacity: 1\\\">\\n      <div data-min=\\\"0\\\" data-max=\\\"100\\\"><\\/div>\\n      <span style=\\\"float: left;\\\"><\\/span>\\n      <span style=\\\"float: right;\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"number\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n    <div style=\\\"display: none;position: absolute;width: 200px;opacity: 1\\\">\\n      <div data-min=\\\"11\\\" data-max=\\\"241\\\"><\\/div>\\n      <span style=\\\"float: left;\\\"><\\/span>\\n      <span style=\\\"float: right;\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"number\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n    <div style=\\\"display: none;position: absolute;width: 200px;opacity: 1\\\">\\n      <div data-min=\\\"20\\\" data-max=\\\"24\\\"><\\/div>\\n      <span style=\\\"float: left;\\\"><\\/span>\\n      <span style=\\\"float: right;\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"character\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"character\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"character\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"character\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"character\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"number\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n    <div style=\\\"display: none;position: absolute;width: 200px;opacity: 1\\\">\\n      <div data-min=\\\"35.9\\\" data-max=\\\"38\\\" data-scale=\\\"1\\\"><\\/div>\\n      <span style=\\\"float: left;\\\"><\\/span>\\n      <span style=\\\"float: right;\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"character\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"number\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n    <div style=\\\"display: none;position: absolute;width: 200px;opacity: 1\\\">\\n      <div data-min=\\\"0\\\" data-max=\\\"428.994082840237\\\" data-scale=\\\"14\\\"><\\/div>\\n      <span style=\\\"float: left;\\\"><\\/span>\\n      <span style=\\\"float: right;\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"number\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n    <div style=\\\"display: none;position: absolute;width: 200px;opacity: 1\\\">\\n      <div data-min=\\\"0\\\" data-max=\\\"2\\\"><\\/div>\\n      <span style=\\\"float: left;\\\"><\\/span>\\n      <span style=\\\"float: right;\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n<\\/tr>\",\"data\":[[\"5fe599\",\"8689b7\",\"11f8ea\",\"b8812a\",\"893f25\",\"be99c8\",\"07e3e8\",\"369449\",\"f393b4\",\"1389ca\",\"2978ac\",\"57a565\",\"fc15ef\",\"2eaa9a\",\"bbfa93\",\"c97dd9\",\"f50e8a\",\"3a7673\",\"7f5a01\",\"ddddee\",\"99e8fa\",\"567136\",\"9371a9\",\"bc2adf\",\"403057\",\"8bd1e8\",\"f327be\",\"42e1a9\",\"90e5fe\",\"959170\",\"8ebf6e\",\"e56412\",\"6d788e\",\"a47529\",\"67be4e\",\"da8ecb\",\"148f18\",\"2cb9a5\",\"f5c142\",\"70a9fe\",\"3ad520\",\"062638\",\"c76676\",\"baacc1\",\"497372\",\"23e499\",\"38cc4a\",\"3789ee\",\"c71dcd\",\"6b70f0\"],[4,4,2,3,3,3,4,4,4,4,4,4,6,5,6,9,10,8,7,6,7,6,8,6,10,8,6,12,5,8,7,9,11,5,8,5,6,11,7,9,7,8,9,12,13,9,8,10,8,7],[\"2014-05-08\",null,null,\"2014-05-04\",\"2014-05-18\",\"2014-05-03\",\"2014-05-22\",\"2014-05-28\",null,null,\"2014-05-30\",\"2014-05-28\",\"2014-06-14\",\"2014-06-07\",\"2014-06-09\",null,null,null,\"2014-06-23\",\"2014-06-18\",\"2014-06-24\",null,null,\"2014-07-03\",null,\"2014-07-10\",\"2014-06-14\",null,\"2014-06-18\",\"2014-06-29\",\"2014-07-02\",\"2014-07-12\",\"2014-07-12\",\"2014-06-13\",\"2014-07-15\",\"2014-06-20\",null,null,\"2014-07-20\",null,\"2014-07-12\",\"2014-07-19\",\"2014-07-18\",\"2014-07-18\",\"2014-07-27\",null,\"2014-07-19\",\"2014-07-26\",\"2014-07-24\",null],[\"2014-05-13\",\"2014-05-13\",\"2014-05-16\",\"2014-05-18\",\"2014-05-21\",\"2014-05-22\",\"2014-05-27\",\"2014-06-02\",\"2014-06-05\",\"2014-06-05\",\"2014-06-06\",\"2014-06-13\",\"2014-06-16\",\"2014-06-17\",\"2014-06-18\",\"2014-06-19\",\"2014-06-22\",\"2014-06-23\",\"2014-06-25\",\"2014-06-26\",\"2014-06-28\",\"2014-07-02\",\"2014-07-08\",\"2014-07-09\",\"2014-07-09\",\"2014-07-10\",\"2014-07-12\",\"2014-07-12\",\"2014-07-13\",\"2014-07-13\",\"2014-07-14\",\"2014-07-15\",\"2014-07-16\",\"2014-07-17\",\"2014-07-17\",\"2014-07-18\",\"2014-07-19\",\"2014-07-22\",\"2014-07-22\",\"2014-07-24\",\"2014-07-24\",\"2014-07-25\",\"2014-07-25\",\"2014-07-27\",\"2014-07-29\",\"2014-07-30\",null,\"2014-08-01\",\"2014-08-02\",\"2014-08-03\"],[\"2014-05-15\",\"2014-05-14\",\"2014-05-18\",\"2014-05-20\",\"2014-05-22\",\"2014-05-23\",\"2014-05-29\",\"2014-06-03\",\"2014-06-06\",\"2014-06-07\",\"2014-06-08\",\"2014-06-15\",\"2014-06-17\",\"2014-06-17\",\"2014-06-20\",\"2014-06-19\",\"2014-06-23\",\"2014-06-24\",\"2014-06-27\",\"2014-06-28\",\"2014-06-29\",\"2014-07-03\",\"2014-07-09\",\"2014-07-09\",\"2014-07-11\",\"2014-07-11\",\"2014-07-13\",\"2014-07-14\",\"2014-07-14\",\"2014-07-13\",\"2014-07-14\",\"2014-07-17\",\"2014-07-17\",\"2014-07-18\",\"2014-07-19\",\"2014-07-20\",\"2014-07-20\",\"2014-07-22\",\"2014-07-24\",\"2014-07-26\",\"2014-07-24\",\"2014-07-27\",\"2014-07-25\",\"2014-07-27\",\"2014-07-31\",\"2014-08-01\",\"2014-08-03\",\"2014-08-02\",\"2014-08-02\",\"2014-08-04\"],[null,\"2014-05-18\",\"2014-05-30\",null,\"2014-05-29\",\"2014-05-24\",\"2014-06-01\",\"2014-06-07\",\"2014-06-18\",\"2014-06-09\",\"2014-06-15\",null,\"2014-07-09\",null,\"2014-06-30\",\"2014-07-11\",\"2014-07-01\",\"2014-06-25\",\"2014-07-06\",\"2014-07-02\",\"2014-07-09\",\"2014-07-07\",\"2014-07-20\",null,\"2014-07-22\",\"2014-07-16\",\"2014-07-14\",\"2014-07-20\",\"2014-07-16\",\"2014-07-19\",\"2014-07-27\",\"2014-07-19\",null,\"2014-07-26\",\"2014-08-14\",\"2014-08-01\",\"2014-07-23\",\"2014-08-28\",\"2014-07-28\",\"2014-07-19\",null,\"2014-08-03\",null,null,null,\"2014-08-06\",\"2014-08-21\",\"2014-09-13\",\"2014-08-04\",null],[null,\"Recover\",\"Recover\",null,\"Recover\",\"Recover\",\"Recover\",\"Death\",\"Recover\",\"Death\",\"Death\",\"Death\",\"Recover\",\"Recover\",null,\"Recover\",null,null,\"Death\",\"Death\",\"Recover\",null,null,null,\"Death\",null,\"Death\",\"Death\",null,\"Death\",\"Recover\",\"Death\",\"Recover\",\"Death\",\"Recover\",null,\"Death\",\"Recover\",\"Recover\",\"Death\",null,null,\"Death\",\"Death\",\"Death\",\"Death\",\"Recover\",null,\"Death\",\"Death\"],[\"m\",\"f\",\"m\",\"f\",\"m\",\"f\",\"f\",\"f\",\"m\",\"f\",\"m\",\"m\",\"m\",\"f\",\"f\",\"m\",\"f\",\"f\",\"f\",\"f\",\"m\",\"m\",\"f\",\"m\",\"f\",\"m\",\"m\",\"f\",\"m\",\"f\",\"f\",\"f\",\"m\",\"m\",\"f\",\"m\",\"f\",\"f\",\"f\",\"m\",\"f\",\"m\",\"f\",\"m\",\"m\",\"f\",\"m\",\"f\",\"m\",\"m\"],[2,3,56,18,3,16,16,0,61,27,12,42,19,7,7,13,35,17,11,11,19,54,14,28,6,3,31,6,67,14,10,21,20,45,1,12,3,15,20,36,7,13,14,3,10,1,0,20,26,14],[\"years\",\"years\",\"years\",\"years\",\"years\",\"years\",\"years\",\"years\",\"years\",\"years\",\"years\",\"years\",\"years\",\"years\",\"years\",\"years\",\"years\",\"years\",\"years\",\"years\",\"years\",\"years\",\"years\",\"years\",\"years\",\"years\",\"years\",\"years\",\"years\",\"years\",\"years\",\"years\",\"years\",\"years\",\"years\",\"years\",\"years\",\"years\",\"years\",\"years\",\"years\",\"years\",\"years\",\"years\",\"years\",\"years\",\"years\",\"years\",\"years\",\"years\"],[2,3,56,18,3,16,16,0,61,27,12,42,19,7,7,13,35,17,11,11,19,54,14,28,6,3,31,6,67,14,10,21,20,45,1,12,3,15,20,36,7,13,14,3,10,1,0,20,26,14],[\"0-4\",\"0-4\",\"50-69\",\"15-19\",\"0-4\",\"15-19\",\"15-19\",\"0-4\",\"50-69\",\"20-29\",\"10-14\",\"30-49\",\"15-19\",\"5-9\",\"5-9\",\"10-14\",\"30-49\",\"15-19\",\"10-14\",\"10-14\",\"15-19\",\"50-69\",\"10-14\",\"20-29\",\"5-9\",\"0-4\",\"30-49\",\"5-9\",\"50-69\",\"10-14\",\"10-14\",\"20-29\",\"20-29\",\"30-49\",\"0-4\",\"10-14\",\"0-4\",\"15-19\",\"20-29\",\"30-49\",\"5-9\",\"10-14\",\"10-14\",\"0-4\",\"10-14\",\"0-4\",\"0-4\",\"20-29\",\"20-29\",\"10-14\"],[\"0-4\",\"0-4\",\"55-59\",\"15-19\",\"0-4\",\"15-19\",\"15-19\",\"0-4\",\"60-64\",\"25-29\",\"10-14\",\"40-44\",\"15-19\",\"5-9\",\"5-9\",\"10-14\",\"35-39\",\"15-19\",\"10-14\",\"10-14\",\"15-19\",\"50-54\",\"10-14\",\"25-29\",\"5-9\",\"0-4\",\"30-34\",\"5-9\",\"65-69\",\"10-14\",\"10-14\",\"20-24\",\"20-24\",\"45-49\",\"0-4\",\"10-14\",\"0-4\",\"15-19\",\"20-24\",\"35-39\",\"5-9\",\"10-14\",\"10-14\",\"0-4\",\"10-14\",\"0-4\",\"0-4\",\"20-24\",\"25-29\",\"10-14\"],[\"Other\",\"Missing\",\"St. Mark's Maternity Hospital (SMMH)\",\"Port Hospital\",\"Military Hospital\",\"Port Hospital\",\"Missing\",\"Missing\",\"Missing\",\"Missing\",\"Port Hospital\",\"Military Hospital\",\"Missing\",\"Missing\",\"Other\",\"Port Hospital\",\"Port Hospital\",\"Port Hospital\",\"Missing\",\"Other\",\"Port Hospital\",\"Port Hospital\",\"St. Mark's Maternity Hospital (SMMH)\",\"Missing\",\"Other\",\"Missing\",\"St. Mark's Maternity Hospital (SMMH)\",\"Military Hospital\",\"Port Hospital\",\"Central Hospital\",\"Military Hospital\",\"Central Hospital\",\"Missing\",\"Military Hospital\",\"Other\",\"Missing\",\"Missing\",\"Port Hospital\",\"Port Hospital\",\"Port Hospital\",\"Missing\",\"Central Hospital\",\"Military Hospital\",\"Other\",\"Other\",\"Other\",\"Missing\",\"St. Mark's Maternity Hospital (SMMH)\",\"St. Mark's Maternity Hospital (SMMH)\",\"Missing\"],[-13.2157351064963,-13.2152339775486,-13.212910703914,-13.2363711169728,-13.2228638912441,-13.222625321098,-13.2331547837254,-13.2320975453153,-13.2225511595637,-13.2572163655863,-13.2206286746001,-13.253989309478,-13.2385127873491,-13.209391925612,-13.2157278814899,-13.2243437095992,-13.2336087079551,-13.21422143145,-13.2339681355349,-13.2535640411465,-13.2250089377786,-13.2160657166043,-13.2680671272333,-13.2266742923612,-13.2160179088168,-13.2482584611565,-13.2156319199566,-13.2142410663192,-13.2614879104088,-13.2452992638476,-13.2630592726116,-13.2343341712241,-13.2199077448676,-13.2227293309912,-13.2343062806506,-13.218781651651,-13.2483677722899,-13.2097478342339,-13.2680867723786,-13.2587535457526,-13.262635786914,-13.2697246824573,-13.2209026809759,-13.2330734719715,-13.2680923666905,-13.2547212675054,-13.2573683214693,-13.2137356012883,-13.2175973322257,-13.2486407324245],[8.46897295100924,8.45171855856465,8.46481700596819,8.4754761613651,8.46082377490923,8.461830626007281,8.462729314626459,8.461443675342711,8.46191259217774,8.472923276435059,8.48401630165138,8.458371253408441,8.477617055125091,8.47570184950483,8.477799468789719,8.47145134147474,8.478048406853629,8.48528034195779,8.469575303958671,8.45957352078114,8.474048895115439,8.488029171298839,8.473437335922,8.484082637344621,8.46242233645879,8.470268221265719,8.463984474805329,8.464134789434199,8.456230946296071,8.48334624336805,8.47493999153642,8.47832062438022,8.469393389176499,8.48480589906514,8.47121232619015,8.48438437371817,8.484661585743391,8.477141599844281,8.462381270106089,8.455685978131131,8.4632880274758,8.47940722413856,8.46353857052336,8.461789681588639,8.47508713872833,8.458258081280711,8.4532568143863,8.4732571907655,8.479115866419329,8.48480340615605],[\"f547d6\",null,null,\"f90f5f\",\"11f8ea\",\"aec8ec\",\"893f25\",\"133ee7\",null,null,\"996f3a\",\"133ee7\",\"37a6f6\",\"9f6884\",\"4802b1\",null,null,null,\"a75c7f\",\"8e104d\",\"ab634e\",null,null,\"b799eb\",null,\"5d9e4d\",\"a15e13\",null,\"ea3740\",\"beb26e\",\"567136\",\"894024\",\"36e2e7\",\"a2086d\",\"7baf73\",\"eb2277\",null,null,\"d6584f\",null,\"312ecf\",\"52ea64\",\"cfd79c\",\"d145b7\",\"174288\",null,\"53608c\",\"3b096b\",\"f5c142\",null],[\"other\",null,null,\"other\",\"other\",\"other\",\"other\",\"other\",null,null,\"other\",\"other\",\"other\",\"other\",\"other\",null,null,null,\"other\",\"other\",\"other\",null,null,\"other\",null,\"other\",\"other\",null,\"other\",\"funeral\",\"other\",\"funeral\",\"other\",\"other\",\"other\",\"funeral\",null,null,\"other\",null,\"other\",\"other\",\"other\",\"other\",\"other\",null,\"funeral\",\"other\",\"other\",null],[27,25,91,41,36,56,47,0,86,69,67,84,68,44,34,66,78,47,53,47,71,86,53,69,38,46,68,37,100,56,50,57,65,72,29,69,37,48,54,71,47,61,47,35,53,16,13,59,69,67],[48,59,238,135,71,116,87,11,226,174,112,186,174,90,91,152,214,137,117,131,150,241,131,161,80,69,188,66,233,142,110,182,164,214,26,157,39,154,133,168,100,125,123,67,134,31,36,125,183,169],[22,22,21,23,23,21,21,22,22,22,22,22,22,21,23,22,23,21,22,23,21,23,21,24,23,22,24,23,20,24,24,20,24,21,22,21,23,22,23,23,23,22,23,22,22,22,23,22,22,22],[\"no\",null,null,\"no\",\"no\",\"no\",null,\"no\",\"no\",\"no\",\"no\",\"no\",\"no\",\"no\",\"no\",\"no\",\"no\",\"no\",null,\"no\",\"no\",\"no\",\"no\",\"no\",null,\"no\",\"no\",\"no\",null,null,\"no\",\"no\",null,\"no\",\"no\",null,null,\"no\",\"no\",null,\"no\",\"no\",null,\"no\",\"no\",\"no\",\"no\",\"no\",\"no\",null],[\"no\",null,null,\"no\",\"no\",\"no\",null,\"no\",\"no\",\"no\",\"no\",\"no\",\"no\",\"no\",\"no\",\"no\",\"yes\",\"no\",null,\"no\",\"no\",\"no\",\"yes\",\"no\",null,\"no\",\"no\",\"yes\",null,null,\"no\",\"no\",null,\"no\",\"no\",null,null,\"no\",\"no\",null,\"no\",\"no\",null,\"no\",\"yes\",\"no\",\"no\",\"no\",\"no\",null],[\"yes\",null,null,\"no\",\"yes\",\"yes\",null,\"yes\",\"yes\",\"yes\",\"yes\",\"yes\",\"yes\",\"yes\",\"yes\",\"yes\",\"yes\",\"yes\",null,\"yes\",\"yes\",\"yes\",\"yes\",\"yes\",null,\"yes\",\"yes\",\"yes\",null,null,\"yes\",\"yes\",null,\"yes\",\"yes\",null,null,\"yes\",\"yes\",null,\"yes\",\"yes\",null,\"yes\",\"yes\",\"yes\",\"yes\",\"yes\",\"no\",null],[\"no\",null,null,\"no\",\"no\",\"no\",null,\"no\",\"no\",\"no\",\"no\",\"no\",\"no\",\"no\",\"no\",\"yes\",\"no\",\"no\",null,\"no\",\"no\",\"no\",\"no\",\"no\",null,\"no\",\"no\",\"no\",null,null,\"no\",\"no\",null,\"no\",\"no\",null,null,\"yes\",\"yes\",null,\"no\",\"no\",null,\"no\",\"no\",\"no\",\"no\",\"no\",\"no\",null],[\"yes\",null,null,\"no\",\"yes\",\"yes\",null,\"yes\",\"yes\",\"no\",\"yes\",\"no\",\"no\",\"no\",\"yes\",\"no\",\"no\",\"no\",null,\"no\",\"yes\",\"no\",\"no\",\"no\",null,\"no\",\"no\",\"no\",null,null,\"no\",\"yes\",null,\"yes\",\"yes\",null,null,\"yes\",\"yes\",null,\"yes\",\"yes\",null,\"yes\",\"yes\",\"no\",\"yes\",\"yes\",\"yes\",null],[36.8,36.9,36.9,36.8,36.9,37.6,37.3,37,36.4,35.9,36.5,36.9,36.5,37.1,36.5,37.3,37,38,38,36,37,36.7,36.9,36.5,37,36.5,37.6,36.6,36.6,36.2,36.4,37.1,37.5,37.5,37.4,36.9,36.4,37.3,37,37.8,36.5,37.5,36.7,37,37.3,36.6,36.5,36.6,37.6,36.8],[null,\"09:36\",\"16:48\",\"11:22\",\"12:60\",\"14:13\",\"14:33\",\"09:25\",\"11:16\",\"10:55\",\"16:03\",\"11:14\",\"12:42\",\"11:06\",\"09:10\",\"08:45\",null,\"15:41\",\"13:34\",\"18:58\",\"12:43\",\"16:33\",\"14:29\",\"07:18\",\"08:11\",\"16:32\",\"16:17\",\"07:32\",\"17:45\",null,\"13:24\",\"14:43\",\"02:33\",\"11:36\",\"17:28\",\"16:27\",null,\"20:49\",null,\"11:38\",\"14:25\",\"13:42\",\"21:22\",\"13:33\",\"19:06\",\"17:14\",\"20:09\",null,\"10:23\",\"09:09\"],[117.1875,71.81844297615629,16.06524962926347,22.49657064471879,71.41440190438405,41.61712247324614,62.09538908706566,0,16.83765369253662,22.79032897344431,53.41198979591836,24.28026361429067,22.46003435064077,54.32098765432099,41.05784325564545,28.56648199445983,17.03205520132763,25.04129149128882,38.7172182043977,27.3876813705495,31.55555555555556,14.80690759456621,30.88398111998135,26.61934338952972,59.37499999999999,96.61835748792272,19.23947487550928,84.94031221303948,18.41993774061044,27.77226740726046,41.32231404958677,17.20806665861611,24.16716240333135,15.72189710891781,428.9940828402366,27.99302202929125,243.2610124917817,20.23950075898128,30.52744643563797,25.15589569160998,47,39.04,31.06616432017979,77.96836711962574,29.51659612385831,166.4932362122789,100.3086419753086,37.76,20.60378034578518,23.45856237526698],[2,1,2,2,1,1,2,1,1,2,2,2,1,0,2,0,1,1,2,2,1,1,1,0,2,1,1,2,1,0,0,2,1,1,2,2,1,0,2,2,0,2,0,0,2,2,null,1,0,1]],\"container\":\"<table class=\\\"white-space: nowrap\\\">\\n  <thead>\\n    <tr>\\n      <th>case_id<\\/th>\\n      <th>generation<\\/th>\\n      <th>date_infection<\\/th>\\n      <th>date_onset<\\/th>\\n      <th>date_hospitalisation<\\/th>\\n      <th>date_outcome<\\/th>\\n      <th>outcome<\\/th>\\n      <th>gender<\\/th>\\n      <th>age<\\/th>\\n      <th>age_unit<\\/th>\\n      <th>age_years<\\/th>\\n      <th>age_cat<\\/th>\\n      <th>age_cat5<\\/th>\\n      <th>hospital<\\/th>\\n      <th>lon<\\/th>\\n      <th>lat<\\/th>\\n      <th>infector<\\/th>\\n      <th>source<\\/th>\\n      <th>wt_kg<\\/th>\\n      <th>ht_cm<\\/th>\\n      <th>ct_blood<\\/th>\\n      <th>fever<\\/th>\\n      <th>chills<\\/th>\\n      <th>cough<\\/th>\\n      <th>aches<\\/th>\\n      <th>vomit<\\/th>\\n      <th>temp<\\/th>\\n      <th>time_admission<\\/th>\\n      <th>bmi<\\/th>\\n      <th>days_onset_hosp<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":5,\"scrollX\":true,\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[1,8,10,14,15,18,19,20,26,28,29]},{\"name\":\"case_id\",\"targets\":0},{\"name\":\"generation\",\"targets\":1},{\"name\":\"date_infection\",\"targets\":2},{\"name\":\"date_onset\",\"targets\":3},{\"name\":\"date_hospitalisation\",\"targets\":4},{\"name\":\"date_outcome\",\"targets\":5},{\"name\":\"outcome\",\"targets\":6},{\"name\":\"gender\",\"targets\":7},{\"name\":\"age\",\"targets\":8},{\"name\":\"age_unit\",\"targets\":9},{\"name\":\"age_years\",\"targets\":10},{\"name\":\"age_cat\",\"targets\":11},{\"name\":\"age_cat5\",\"targets\":12},{\"name\":\"hospital\",\"targets\":13},{\"name\":\"lon\",\"targets\":14},{\"name\":\"lat\",\"targets\":15},{\"name\":\"infector\",\"targets\":16},{\"name\":\"source\",\"targets\":17},{\"name\":\"wt_kg\",\"targets\":18},{\"name\":\"ht_cm\",\"targets\":19},{\"name\":\"ct_blood\",\"targets\":20},{\"name\":\"fever\",\"targets\":21},{\"name\":\"chills\",\"targets\":22},{\"name\":\"cough\",\"targets\":23},{\"name\":\"aches\",\"targets\":24},{\"name\":\"vomit\",\"targets\":25},{\"name\":\"temp\",\"targets\":26},{\"name\":\"time_admission\",\"targets\":27},{\"name\":\"bmi\",\"targets\":28},{\"name\":\"days_onset_hosp\",\"targets\":29}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false,\"orderCellsTop\":true,\"lengthMenu\":[5,10,25,50,100]}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n\n### Cleaning {.unnumbered}  \n\nTo make a traditional age/gender demographic pyramid, the data must first be cleaned in the following ways:  \n\n* The gender column must be cleaned.  \n* Depending on your method, age should be stored as either a numeric or in an *age category* column.  \n\nIf using age categories, the column values should be corrected ordered, either by default alpha-numeric or intentionally set by converting to class factor.  \n\nBelow we use `tabyl()` from **janitor** to inspect the columns `gender` and `age_cat5`.  \n\n\n::: {.cell}\n\n```{.r .cell-code}\nlinelist %>% \n  tabyl(age_cat5, gender)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n age_cat5   f   m NA_\n      0-4 640 416  39\n      5-9 641 412  42\n    10-14 518 383  40\n    15-19 359 364  20\n    20-24 305 316  17\n    25-29 163 259  13\n    30-34 104 213   9\n    35-39  42 157   3\n    40-44  25 107   1\n    45-49   8  80   5\n    50-54   2  37   1\n    55-59   0  30   0\n    60-64   0  12   0\n    65-69   0  12   1\n    70-74   0   4   0\n    75-79   0   0   1\n    80-84   0   1   0\n      85+   0   0   0\n     <NA>   0   0  86\n```\n:::\n:::\n\n\n\nWe also run a quick histogram on the `age` column to ensure it is clean and correctly classified:  \n\n\n::: {.cell}\n\n```{.r .cell-code}\nhist(linelist$age)\n```\n\n::: {.cell-output-display}\n![](age_pyramid_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n\n<!-- ======================================================= -->\n## **apyramid** package {}\n\nThe package **apyramid** is a product of the [R4Epis](https://r4epis.netlify.com/) project. You can read more about this package [here](https://cran.r-project.org/web/packages/apyramid/vignettes/intro.html). It allows you to quickly make an age pyramid. For more nuanced situations, see the section below [using `ggplot()`](#demo_pyr_gg). You can read more about the **apyramid** package in its Help page by entering `?age_pyramid` in your R console. \n\n### Linelist data {.unnumbered}  \n\n\nUsing the cleaned `linelist` dataset, we can create an age pyramid with one simple `age_pyramid()` command. In this command:  \n\n* The `data = ` argument is set as the `linelist` data frame  \n* The `age_group = ` argument (for y-axis) is set to the name of the categorical age column (in quotes)  \n* The `split_by = ` argument (for x-axis) is set to the gender column  \n\n\n::: {.cell}\n\n```{.r .cell-code}\napyramid::age_pyramid(data = linelist,\n                      age_group = \"age_cat5\",\n                      split_by = \"gender\")\n```\n\n::: {.cell-output-display}\n![](age_pyramid_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n\nThe pyramid can be displayed with percent of all cases on the x-axis, instead of counts, by including `proportional = TRUE`.  \n\n\n::: {.cell}\n\n```{.r .cell-code}\napyramid::age_pyramid(data = linelist,\n                      age_group = \"age_cat5\",\n                      split_by = \"gender\",\n                      proportional = TRUE)\n```\n\n::: {.cell-output-display}\n![](age_pyramid_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n\nWhen using **agepyramid** package, if the `split_by` column is binary (e.g. male/female, or yes/no), then the result will appear as a pyramid. However if there are more than two values in the `split_by` column (not including `NA`), the pyramid will appears as a faceted bar plot with grey bars in the \"background\" indicating the range of the un-faceted data for that age group. In this case, values of `split_by = ` will appear as labels at top of each facet panel. For example, below is what occurs if the `split_by = ` is assigned the column `hospital`.  \n\n\n::: {.cell}\n\n```{.r .cell-code}\napyramid::age_pyramid(data = linelist,\n                      age_group = \"age_cat5\",\n                      split_by = \"hospital\")  \n```\n\n::: {.cell-output-display}\n![](age_pyramid_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n#### Missing values {.unnumbered}  \n\nRows that have `NA` missing values in the `split_by = ` or `age_group = ` columns, if coded as `NA`, will not trigger the faceting shown above. By default these rows will not be shown. However you can specify that they appear, in an adjacent barplot and as a separate age group at the top, by specifying `na.rm = FALSE`.  \n\n\n::: {.cell}\n\n```{.r .cell-code}\napyramid::age_pyramid(data = linelist,\n                      age_group = \"age_cat5\",\n                      split_by = \"gender\",\n                      na.rm = FALSE)         # show patients missing age or gender\n```\n\n::: {.cell-output-display}\n![](age_pyramid_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n#### Proportions, colors, & aesthetics {.unnumbered}  \n\nBy default, the bars display counts (not %), a dashed mid-line for each group is shown, and the colors are green/purple. Each of these parameters can be adjusted, as shown below:  \n\nYou can also add additional `ggplot()` commands to the plot using the standard `ggplot()` \"+\" syntax, such as aesthetic themes and label adjustments: \n\n\n::: {.cell}\n\n```{.r .cell-code}\napyramid::age_pyramid(\n  data = linelist,\n  age_group = \"age_cat5\",\n  split_by = \"gender\",\n  proportional = TRUE,              # show percents, not counts\n  show_midpoint = FALSE,            # remove bar mid-point line\n  #pal = c(\"orange\", \"purple\")      # can specify alt. colors here (but not labels)\n  )+                 \n  \n  # additional ggplot commands\n  theme_minimal()+                               # simplfy background\n  scale_fill_manual(                             # specify colors AND labels\n    values = c(\"orange\", \"purple\"),              \n    labels = c(\"m\" = \"Male\", \"f\" = \"Female\"))+\n  labs(y = \"Percent of all cases\",              # note x and y labs are switched\n       x = \"Age categories\",                          \n       fill = \"Gender\", \n       caption = \"My data source and caption here\",\n       title = \"Title of my plot\",\n       subtitle = \"Subtitle with \\n a second line...\")+\n  theme(\n    legend.position = \"bottom\",                          # legend to bottom\n    axis.text = element_text(size = 10, face = \"bold\"),  # fonts/sizes\n    axis.title = element_text(size = 12, face = \"bold\"))\n```\n\n::: {.cell-output-display}\n![](age_pyramid_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\n\n\n### Aggregated data {.unnumbered}  \n\nThe examples above assume your data are in a linelist format, with one row per observation. If your data are already aggregated into counts by age category, you can still use the **apyramid** package, as shown below.  \n\nFor demonstration, we aggregate the linelist data into counts by age category and gender, into a \"wide\" format. This will simulate as if your data were in counts to begin with. Learn more about [Grouping data] and [Pivoting data] in their respective pages.  \n\n\n::: {.cell}\n\n```{.r .cell-code}\ndemo_agg <- linelist %>% \n  count(age_cat5, gender, name = \"cases\") %>% \n  pivot_wider(\n    id_cols = age_cat5,\n    names_from = gender,\n    values_from = cases) %>% \n  rename(`missing_gender` = `NA`)\n```\n:::\n\n\n...which makes the dataset looks like this: with columns for age category, and male counts, female counts, and missing counts.  \n\n\n::: {.cell}\n::: {.cell-output-display}\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-dafa8914237ae64eeccb\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-dafa8914237ae64eeccb\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"0-4\",\"5-9\",\"10-14\",\"15-19\",\"20-24\",\"25-29\",\"30-34\",\"35-39\",\"40-44\",\"45-49\",\"50-54\",\"55-59\",\"60-64\",\"65-69\",\"70-74\",\"75-79\",\"80-84\",null],[640,641,518,359,305,163,104,42,25,8,2,null,null,null,null,null,null,null],[416,412,383,364,316,259,213,157,107,80,37,30,12,12,4,null,1,null],[39,42,40,20,17,13,9,3,1,5,1,null,null,1,null,1,null,86]],\"container\":\"<table class=\\\"white-space: nowrap\\\">\\n  <thead>\\n    <tr>\\n      <th>age_cat5<\\/th>\\n      <th>f<\\/th>\\n      <th>m<\\/th>\\n      <th>missing_gender<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":5,\"scrollX\":true,\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[1,2,3]},{\"name\":\"age_cat5\",\"targets\":0},{\"name\":\"f\",\"targets\":1},{\"name\":\"m\",\"targets\":2},{\"name\":\"missing_gender\",\"targets\":3}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false,\"lengthMenu\":[5,10,25,50,100]}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n\nTo set-up these data for the age pyramid, we will pivot the data to be \"long\" with the `pivot_longer()` function from **dplyr**. This is because `ggplot()` generally prefers \"long\" data, and **apyramid** is using `ggplot()`.  \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# pivot the aggregated data into long format\ndemo_agg_long <- demo_agg %>% \n  pivot_longer(\n    col = c(f, m, missing_gender),            # cols to elongate\n    names_to = \"gender\",                # name for new col of categories\n    values_to = \"counts\") %>%           # name for new col of counts\n  mutate(\n    gender = na_if(gender, \"missing_gender\")) # convert \"missing_gender\" to NA\n```\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-f2ccc4f9fe609abb7f31\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-f2ccc4f9fe609abb7f31\">{\"x\":{\"filter\":\"top\",\"vertical\":false,\"filterHTML\":\"<tr>\\n  <td data-type=\\\"factor\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n    <div style=\\\"width: 100%; display: none;\\\">\\n      <select multiple=\\\"multiple\\\" style=\\\"width: 100%;\\\" data-options=\\\"[&quot;0-4&quot;,&quot;5-9&quot;,&quot;10-14&quot;,&quot;15-19&quot;,&quot;20-24&quot;,&quot;25-29&quot;,&quot;30-34&quot;,&quot;35-39&quot;,&quot;40-44&quot;,&quot;45-49&quot;,&quot;50-54&quot;,&quot;55-59&quot;,&quot;60-64&quot;,&quot;65-69&quot;,&quot;70-74&quot;,&quot;75-79&quot;,&quot;80-84&quot;,&quot;85+&quot;]\\\"><\\/select>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"character\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"integer\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n    <div style=\\\"display: none;position: absolute;width: 200px;opacity: 1\\\">\\n      <div data-min=\\\"1\\\" data-max=\\\"641\\\"><\\/div>\\n      <span style=\\\"float: left;\\\"><\\/span>\\n      <span style=\\\"float: right;\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n<\\/tr>\",\"data\":[[\"0-4\",\"0-4\",\"0-4\",\"5-9\",\"5-9\",\"5-9\",\"10-14\",\"10-14\",\"10-14\",\"15-19\",\"15-19\",\"15-19\",\"20-24\",\"20-24\",\"20-24\",\"25-29\",\"25-29\",\"25-29\",\"30-34\",\"30-34\",\"30-34\",\"35-39\",\"35-39\",\"35-39\",\"40-44\",\"40-44\",\"40-44\",\"45-49\",\"45-49\",\"45-49\",\"50-54\",\"50-54\",\"50-54\",\"55-59\",\"55-59\",\"55-59\",\"60-64\",\"60-64\",\"60-64\",\"65-69\",\"65-69\",\"65-69\",\"70-74\",\"70-74\",\"70-74\",\"75-79\",\"75-79\",\"75-79\",\"80-84\",\"80-84\",\"80-84\",null,null,null],[\"f\",\"m\",null,\"f\",\"m\",null,\"f\",\"m\",null,\"f\",\"m\",null,\"f\",\"m\",null,\"f\",\"m\",null,\"f\",\"m\",null,\"f\",\"m\",null,\"f\",\"m\",null,\"f\",\"m\",null,\"f\",\"m\",null,\"f\",\"m\",null,\"f\",\"m\",null,\"f\",\"m\",null,\"f\",\"m\",null,\"f\",\"m\",null,\"f\",\"m\",null,\"f\",\"m\",null],[640,416,39,641,412,42,518,383,40,359,364,20,305,316,17,163,259,13,104,213,9,42,157,3,25,107,1,8,80,5,2,37,1,null,30,null,null,12,null,null,12,1,null,4,null,null,null,1,null,1,null,null,null,86]],\"container\":\"<table class=\\\"white-space: nowrap\\\">\\n  <thead>\\n    <tr>\\n      <th>age_cat5<\\/th>\\n      <th>gender<\\/th>\\n      <th>counts<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":5,\"scrollX\":true,\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":2},{\"name\":\"age_cat5\",\"targets\":0},{\"name\":\"gender\",\"targets\":1},{\"name\":\"counts\",\"targets\":2}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false,\"orderCellsTop\":true,\"lengthMenu\":[5,10,25,50,100]}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n\nThen use the `split_by = ` and `count = ` arguments of `age_pyramid()` to specify the respective columns in the data:  \n\n\n::: {.cell}\n\n```{.r .cell-code}\napyramid::age_pyramid(data = demo_agg_long,\n                      age_group = \"age_cat5\",# column name for age category\n                      split_by = \"gender\",   # column name for gender\n                      count = \"counts\")      # column name for case counts\n```\n\n::: {.cell-output-display}\n![](age_pyramid_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n\nNote in the above, that the factor order of \"m\" and \"f\" is different (pyramid reversed). To adjust the order you must re-define gender in the aggregated data as a Factor and order the levels as desired. See the [Factors] page.  \n\n\n\n\n<!-- ======================================================= -->\n## `ggplot()` {#demo_pyr_gg}\n\n\nUsing `ggplot()` to build your age pyramid allows for more flexibility, but requires more effort and understanding of how `ggplot()` works. It is also easier to accidentally make mistakes.  \n\nTo use `ggplot()` to make demographic pyramids, you create two bar plots (one for each gender), convert the values in one plot to negative, and finally flip the x and y axes to display the bar plots vertically, their bases meeting in the plot middle.  \n\n\n### Preparation {.unnumbered}\n\nThis approach uses the *numeric* age column, not the *categorical* column of `age_cat5`. So we will check to ensure the class of this column is indeed numeric.  \n\n\n::: {.cell}\n\n```{.r .cell-code}\nclass(linelist$age)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"numeric\"\n```\n:::\n:::\n\n\nYou could use the same logic below to build a pyramid from categorical data using `geom_col()` instead of `geom_histogram()`.  \n\n<!-- ======================================================= -->\n### Constructing the plot {.unnumbered} \n\nFirst, understand that to make such a pyramid using `ggplot()` the approach is as follows:\n\n* Within the `ggplot()`, create **two** histograms using the numeric age column. Create one for each of the two grouping values (in this case genders male and female). To do this, the data for each histogram are specified within their respective `geom_histogram()` commands, with the respective filters applied to `linelist`.    \n\n* One graph will have positive count values, while the other will have its counts converted to negative values - this creates the \"pyramid\" with the `0` value in the middle of the plot. The negative values are created using a special **ggplot2** term `..count..` and multiplying by -1.  \n\n* The command `coord_flip()` switches the X and Y axes, resulting in the graphs turning vertical and creating the pyramid.\n\n* Lastly, the counts-axis value labels must be altered so they appear as \"positive\" counts on both sides of the pyramid (despite the underlying values on one side being negative). \n\nA **simple** version of this, using `geom_histogram()`, is below:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n  # begin ggplot\n  ggplot(mapping = aes(x = age, fill = gender)) +\n  \n  # female histogram\n  geom_histogram(data = linelist %>% filter(gender == \"f\"),\n                 breaks = seq(0,85,5),\n                 colour = \"white\") +\n  \n  # male histogram (values converted to negative)\n  geom_histogram(data = linelist %>% filter(gender == \"m\"),\n                 breaks = seq(0,85,5),\n                 mapping = aes(y = ..count..*(-1)),\n                 colour = \"white\") +\n  \n  # flip the X and Y axes\n  coord_flip() +\n  \n  # adjust counts-axis scale\n  scale_y_continuous(limits = c(-600, 900),\n                     breaks = seq(-600,900,100),\n                     labels = abs(seq(-600, 900, 100)))\n```\n\n::: {.cell-output-display}\n![](age_pyramid_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n\n<span style=\"color: red;\">**_DANGER:_** If the **limits** of your counts axis are set too low, and a counts bar exceeds them, the bar will disappear entirely or be artificially shortened! Watch for this if analyzing data which is routinely updated. Prevent it by having your count-axis limits auto-adjust to your data, as below.</span>  \n\nThere are many things you can change/add to this simple version, including:  \n\n* Auto adjust counts-axis scale to your data (avoid errors discussed in warning below)  \n* Manually specify colors and legend labels  \n\n**Convert counts to percents**  \n\nTo convert counts to percents (of total), do this in your data prior to plotting. Below, we get the age-gender counts, then `ungroup()`, and then `mutate()` to create new percent columns. If you want percents by gender, skip the ungroup step.  \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# create dataset with proportion of total\npyramid_data <- linelist %>%\n  count(age_cat5,\n        gender,\n        name = \"counts\") %>% \n  ungroup() %>%                 # ungroup so percents are not by group\n  mutate(percent = round(100*(counts / sum(counts, na.rm=T)), digits = 1), \n         percent = case_when(\n            gender == \"f\" ~ percent,\n            gender == \"m\" ~ -percent,     # convert male to negative\n            TRUE          ~ NA_real_))    # NA val must by numeric as well\n```\n:::\n\n\nImportantly, we save the max and min values so we know what the limits of the scale should be. These will be used in the `ggplot()` command below.    \n\n\n::: {.cell}\n\n```{.r .cell-code}\nmax_per <- max(pyramid_data$percent, na.rm=T)\nmin_per <- min(pyramid_data$percent, na.rm=T)\n\nmax_per\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 10.9\n```\n:::\n\n```{.r .cell-code}\nmin_per\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] -7.1\n```\n:::\n:::\n\n\nFinally we make the `ggplot()` on the percent data. We specify `scale_y_continuous()` to extend the pre-defined lengths in each direction (positive and \"negative\"). We use `floor()` and `ceiling()` to round decimals the appropriate direction (down or up) for the side of the axis.  \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# begin ggplot\n  ggplot()+  # default x-axis is age in years;\n\n  # case data graph\n  geom_col(data = pyramid_data,\n           mapping = aes(\n             x = age_cat5,\n             y = percent,\n             fill = gender),         \n           colour = \"white\")+       # white around each bar\n  \n  # flip the X and Y axes to make pyramid vertical\n  coord_flip()+\n  \n\n  # adjust the axes scales\n  # scale_x_continuous(breaks = seq(0,100,5), labels = seq(0,100,5)) +\n  scale_y_continuous(\n    limits = c(min_per, max_per),\n    breaks = seq(from = floor(min_per),                # sequence of values, by 2s\n                 to = ceiling(max_per),\n                 by = 2),\n    labels = paste0(abs(seq(from = floor(min_per),     # sequence of absolute values, by 2s, with \"%\"\n                            to = ceiling(max_per),\n                            by = 2)),\n                    \"%\"))+  \n\n  # designate colors and legend labels manually\n  scale_fill_manual(\n    values = c(\"f\" = \"orange\",\n               \"m\" = \"darkgreen\"),\n    labels = c(\"Female\", \"Male\")) +\n  \n  # label values (remember X and Y flipped now)\n  labs(\n    title = \"Age and gender of cases\",\n    x = \"Age group\",\n    y = \"Percent of total\",\n    fill = NULL,\n    caption = stringr::str_glue(\"Data are from linelist \\nn = {nrow(linelist)} (age or sex missing for {sum(is.na(linelist$gender) | is.na(linelist$age_years))} cases) \\nData as of: {format(Sys.Date(), '%d %b %Y')}\")) +\n  \n  # display themes\n  theme(\n    panel.grid.major = element_blank(),\n    panel.grid.minor = element_blank(),\n    panel.background = element_blank(),\n    axis.line = element_line(colour = \"black\"),\n    plot.title = element_text(hjust = 0.5), \n    plot.caption = element_text(hjust=0, size=11, face = \"italic\")\n    )\n```\n\n::: {.cell-output-display}\n![](age_pyramid_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n:::\n\n\n\n\n<!-- ======================================================= -->\n### Compare to baseline  {.unnumbered} \n\nWith the flexibility of `ggplot()`, you can have a second layer of bars in the background that represent the \"true\" or \"baseline\" population pyramid. This can provide a nice visualization to compare the observed with the baseline.  \n\nImport and view the population data (see [Download handbook and data] page):\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# import the population demographics data\npop <- rio::import(\"country_demographics.csv\")\n```\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-15eac974da08e29b6204\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-15eac974da08e29b6204\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"0-4\",\"5-9\",\"10-14\",\"15-19\",\"20-24\",\"25-29\",\"30-34\",\"35-39\",\"40-44\",\"45-49\",\"50-54\",\"55-59\",\"60-64\",\"65-69\",\"70-74\",\"75-79\",\"80-84\",\"85+\"],[7828087,6705882,5601230,4576430,3734111,3111651,2571215,2121247,1735468,1418749,1145345,900239,685141,500248,347093,202240,94325,40402],[7674675,6592449,5522555,4533885,3726537,3118040,2592416,2150490,1771213,1459439,1193903,956070,745682,563894,416543,258538,130479,64656]],\"container\":\"<table class=\\\"white-space: nowrap\\\">\\n  <thead>\\n    <tr>\\n      <th>age_cat5<\\/th>\\n      <th>m<\\/th>\\n      <th>f<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":10,\"scrollX\":true,\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[1,2]},{\"name\":\"age_cat5\",\"targets\":0},{\"name\":\"m\",\"targets\":1},{\"name\":\"f\",\"targets\":2}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n\n\nFirst some data management steps:  \n\nHere we record the order of age categories that we want to appear. Due to some quirks the way the `ggplot()` is implemented, in this specific scenario it is easiest to store these as a character vector and use them later in the plotting function.  \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# record correct age cat levels\nage_levels <- c(\"0-4\",\"5-9\", \"10-14\", \"15-19\", \"20-24\",\n                \"25-29\",\"30-34\", \"35-39\", \"40-44\", \"45-49\",\n                \"50-54\", \"55-59\", \"60-64\", \"65-69\", \"70-74\",\n                \"75-79\", \"80-84\", \"85+\")\n```\n:::\n\n\nCombine the population and case data through the **dplyr** function `bind_rows()`:  \n\n* First, ensure they have the *exact same* column names, age categories values, and gender values  \n* Make them have the same data structure: columns of age category, gender, counts, and percent of total  \n* Bind them together, one on-top of the other (`bind_rows()`)  \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# create/transform populaton data, with percent of total\n########################################################\npop_data <- pop %>% \n  pivot_longer(      # pivot gender columns longer\n    cols = c(m, f),\n    names_to = \"gender\",\n    values_to = \"counts\") %>% \n  \n  mutate(\n    percent  = round(100*(counts / sum(counts, na.rm=T)),1),  # % of total\n    percent  = case_when(                                                        \n     gender == \"f\" ~ percent,\n     gender == \"m\" ~ -percent,               # if male, convert % to negative\n     TRUE          ~ NA_real_))\n```\n:::\n\n\nReview the changed population dataset\n\n\n::: {.cell}\n::: {.cell-output-display}\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-ecb702637c16a5502feb\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-ecb702637c16a5502feb\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"0-4\",\"0-4\",\"5-9\",\"5-9\",\"10-14\",\"10-14\",\"15-19\",\"15-19\",\"20-24\",\"20-24\",\"25-29\",\"25-29\",\"30-34\",\"30-34\",\"35-39\",\"35-39\",\"40-44\",\"40-44\",\"45-49\",\"45-49\",\"50-54\",\"50-54\",\"55-59\",\"55-59\",\"60-64\",\"60-64\",\"65-69\",\"65-69\",\"70-74\",\"70-74\",\"75-79\",\"75-79\",\"80-84\",\"80-84\",\"85+\",\"85+\"],[\"m\",\"f\",\"m\",\"f\",\"m\",\"f\",\"m\",\"f\",\"m\",\"f\",\"m\",\"f\",\"m\",\"f\",\"m\",\"f\",\"m\",\"f\",\"m\",\"f\",\"m\",\"f\",\"m\",\"f\",\"m\",\"f\",\"m\",\"f\",\"m\",\"f\",\"m\",\"f\",\"m\",\"f\",\"m\",\"f\"],[7828087,7674675,6705882,6592449,5601230,5522555,4576430,4533885,3734111,3726537,3111651,3118040,2571215,2592416,2121247,2150490,1735468,1771213,1418749,1459439,1145345,1193903,900239,956070,685141,745682,500248,563894,347093,416543,202240,258538,94325,130479,40402,64656],[-9,8.800000000000001,-7.7,7.6,-6.5,6.4,-5.3,5.2,-4.3,4.3,-3.6,3.6,-3,3,-2.4,2.5,-2,2,-1.6,1.7,-1.3,1.4,-1,1.1,-0.8,0.9,-0.6,0.6,-0.4,0.5,-0.2,0.3,-0.1,0.2,-0,0.1]],\"container\":\"<table class=\\\"white-space: nowrap\\\">\\n  <thead>\\n    <tr>\\n      <th>age_cat5<\\/th>\\n      <th>gender<\\/th>\\n      <th>counts<\\/th>\\n      <th>percent<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":5,\"scrollX\":true,\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[2,3]},{\"name\":\"age_cat5\",\"targets\":0},{\"name\":\"gender\",\"targets\":1},{\"name\":\"counts\",\"targets\":2},{\"name\":\"percent\",\"targets\":3}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false,\"lengthMenu\":[5,10,25,50,100]}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n\nNow implement the same for the case linelist.  Slightly different because it begins with case-rows, not counts.  \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# create case data by age/gender, with percent of total\n#######################################################\ncase_data <- linelist %>%\n  count(age_cat5, gender, name = \"counts\") %>%  # counts by age-gender groups\n  ungroup() %>% \n  mutate(\n    percent = round(100*(counts / sum(counts, na.rm=T)),1),  # calculate % of total for age-gender groups\n    percent = case_when(                                     # convert % to negative if male\n      gender == \"f\" ~ percent,\n      gender == \"m\" ~ -percent,\n      TRUE          ~ NA_real_))\n```\n:::\n\n\nReview the changed case dataset  \n\n\n::: {.cell}\n::: {.cell-output-display}\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-e3441400a0ecadc97bed\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-e3441400a0ecadc97bed\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"0-4\",\"0-4\",\"0-4\",\"5-9\",\"5-9\",\"5-9\",\"10-14\",\"10-14\",\"10-14\",\"15-19\",\"15-19\",\"15-19\",\"20-24\",\"20-24\",\"20-24\",\"25-29\",\"25-29\",\"25-29\",\"30-34\",\"30-34\",\"30-34\",\"35-39\",\"35-39\",\"35-39\",\"40-44\",\"40-44\",\"40-44\",\"45-49\",\"45-49\",\"45-49\",\"50-54\",\"50-54\",\"50-54\",\"55-59\",\"60-64\",\"65-69\",\"65-69\",\"70-74\",\"75-79\",\"80-84\",null],[\"f\",\"m\",null,\"f\",\"m\",null,\"f\",\"m\",null,\"f\",\"m\",null,\"f\",\"m\",null,\"f\",\"m\",null,\"f\",\"m\",null,\"f\",\"m\",null,\"f\",\"m\",null,\"f\",\"m\",null,\"f\",\"m\",null,\"m\",\"m\",\"m\",null,\"m\",null,\"m\",null],[640,416,39,641,412,42,518,383,40,359,364,20,305,316,17,163,259,13,104,213,9,42,157,3,25,107,1,8,80,5,2,37,1,30,12,12,1,4,1,1,86],[10.9,-7.1,null,10.9,-7,null,8.800000000000001,-6.5,null,6.1,-6.2,null,5.2,-5.4,null,2.8,-4.4,null,1.8,-3.6,null,0.7,-2.7,null,0.4,-1.8,null,0.1,-1.4,null,0,-0.6,null,-0.5,-0.2,-0.2,null,-0.1,null,-0,null]],\"container\":\"<table class=\\\"white-space: nowrap\\\">\\n  <thead>\\n    <tr>\\n      <th>age_cat5<\\/th>\\n      <th>gender<\\/th>\\n      <th>counts<\\/th>\\n      <th>percent<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":5,\"scrollX\":true,\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[2,3]},{\"name\":\"age_cat5\",\"targets\":0},{\"name\":\"gender\",\"targets\":1},{\"name\":\"counts\",\"targets\":2},{\"name\":\"percent\",\"targets\":3}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false,\"lengthMenu\":[5,10,25,50,100]}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n\nNow the two data frames are combined, one on top of the other (they have the same column names). We can \"name\" each of the data frame, and use the `.id = ` argument to create a new column \"data_source\" that will indicate which data frame each row originated from. We can use this column to filter in the `ggplot()`.  \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# combine case and population data (same column names, age_cat values, and gender values)\npyramid_data <- bind_rows(\"cases\" = case_data, \"population\" = pop_data, .id = \"data_source\")\n```\n:::\n\n\nStore the maximum and minimum percent values, used in the plotting function to define the extent of the plot (and not cut short any bars!)  \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Define extent of percent axis, used for plot limits\nmax_per <- max(pyramid_data$percent, na.rm=T)\nmin_per <- min(pyramid_data$percent, na.rm=T)\n```\n:::\n\n\nNow the plot is made with `ggplot()`: \n\n* One bar graph of population data (wider, more transparent bars)\n* One bar graph of case data (small, more solid bars)  \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# begin ggplot\n##############\nggplot()+  # default x-axis is age in years;\n\n  # population data graph\n  geom_col(\n    data = pyramid_data %>% filter(data_source == \"population\"),\n    mapping = aes(\n      x = age_cat5,\n      y = percent,\n      fill = gender),\n    colour = \"black\",                               # black color around bars\n    alpha = 0.2,                                    # more transparent\n    width = 1)+                                     # full width\n  \n  # case data graph\n  geom_col(\n    data = pyramid_data %>% filter(data_source == \"cases\"), \n    mapping = aes(\n      x = age_cat5,                               # age categories as original X axis\n      y = percent,                                # % as original Y-axis\n      fill = gender),                             # fill of bars by gender\n    colour = \"black\",                               # black color around bars\n    alpha = 1,                                      # not transparent \n    width = 0.3)+                                   # half width\n  \n  # flip the X and Y axes to make pyramid vertical\n  coord_flip()+\n  \n  # manually ensure that age-axis is ordered correctly\n  scale_x_discrete(limits = age_levels)+     # defined in chunk above\n  \n  # set percent-axis \n  scale_y_continuous(\n    limits = c(min_per, max_per),                                          # min and max defined above\n    breaks = seq(floor(min_per), ceiling(max_per), by = 2),                # from min% to max% by 2 \n    labels = paste0(                                                       # for the labels, paste together... \n              abs(seq(floor(min_per), ceiling(max_per), by = 2)), \"%\"))+                                                  \n\n  # designate colors and legend labels manually\n  scale_fill_manual(\n    values = c(\"f\" = \"orange\",         # assign colors to values in the data\n               \"m\" = \"darkgreen\"),\n    labels = c(\"f\" = \"Female\",\n               \"m\"= \"Male\"),      # change labels that appear in legend, note order\n  ) +\n\n  # plot labels, titles, caption    \n  labs(\n    title = \"Case age and gender distribution,\\nas compared to baseline population\",\n    subtitle = \"\",\n    x = \"Age category\",\n    y = \"Percent of total\",\n    fill = NULL,\n    caption = stringr::str_glue(\"Cases shown on top of country demographic baseline\\nCase data are from linelist, n = {nrow(linelist)}\\nAge or gender missing for {sum(is.na(linelist$gender) | is.na(linelist$age_years))} cases\\nCase data as of: {format(max(linelist$date_onset, na.rm=T), '%d %b %Y')}\")) +\n  \n  # optional aesthetic themes\n  theme(\n    legend.position = \"bottom\",                             # move legend to bottom\n    panel.grid.major = element_blank(),\n    panel.grid.minor = element_blank(),\n    panel.background = element_blank(),\n    axis.line = element_line(colour = \"black\"),\n    plot.title = element_text(hjust = 0), \n    plot.caption = element_text(hjust=0, size=11, face = \"italic\"))\n```\n\n::: {.cell-output-display}\n![](age_pyramid_files/figure-html/unnamed-chunk-33-1.png){width=672}\n:::\n:::\n\n\n\n<!-- ======================================================= -->\n## Likert scale {}\n\nThe techniques used to make a population pyramid with `ggplot()` can also be used to make plots of Likert-scale survey data.  \n\n\n::: {.cell}\n\n:::\n\n\nImport the data (see [Download handbook and data] page if desired).  \n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# import the likert survey response data\nlikert_data <- rio::import(\"likert_data.csv\")\n```\n:::\n\n\nStart with data that looks like this, with a categorical classification of each respondent (`status`) and their answers to 8 questions on a 4-point Likert-type scale (\"Very poor\", \"Poor\", \"Good\", \"Very good\").  \n\n\n::: {.cell}\n::: {.cell-output-display}\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-9462fed25c33911a7484\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-9462fed25c33911a7484\">{\"x\":{\"filter\":\"top\",\"vertical\":false,\"filterHTML\":\"<tr>\\n  <td data-type=\\\"character\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"character\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"character\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"character\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"character\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"character\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"character\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"character\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"character\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n<\\/tr>\",\"data\":[[\"Senior\",\"Junior\",\"Intermediate\",\"Intermediate\",\"Senior\",\"Junior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Senior\",\"Junior\",\"Senior\",\"Junior\",\"Senior\",\"Junior\",\"Intermediate\",\"Intermediate\",\"Junior\",\"Senior\",\"Senior\",\"Junior\",\"Senior\",\"Senior\",\"Junior\",\"Intermediate\",\"Junior\",\"Senior\",\"Intermediate\",\"Senior\",\"Senior\",\"Junior\",\"Intermediate\",\"Senior\",\"Intermediate\",\"Junior\",\"Senior\",\"Junior\"],[\"Very Good\",\"Very Good\",\"Good\",\"Good\",\"Very Good\",\"Good\",\"Very Good\",\"Good\",\"Good\",\"Good\",\"Good\",\"Good\",\"Good\",\"Good\",\"Very Good\",\"Good\",\"Poor\",\"Very Good\",\"Very Good\",\"Not applicable\",\"Very Good\",\"Good\",\"Very Good\",\"Very Good\",\"Very Good\",\"Very Good\",\"Good\",\"Good\",\"Very Good\",\"Very Good\",\"Not applicable\",\"Good\",\"Very Good\",\"Good\",\"Good\",\"Good\",\"Not applicable\",\"Good\"],[\"Very Good\",\"Very Good\",\"Good\",\"Poor\",\"Very Poor\",\"Very Good\",\"Very Good\",\"Good\",\"Very Good\",\"Very Good\",\"Very Good\",\"Very Good\",\"Good\",\"Very Good\",\"Very Good\",\"Good\",\"Poor\",\"Good\",\"Very Good\",\"Very Good\",\"Very Good\",\"Good\",\"Very Good\",\"Very Good\",\"Very Good\",\"Good\",\"Good\",\"Poor\",\"Very Good\",\"Very Good\",\"Not applicable\",\"Good\",\"Very Good\",\"Very Good\",\"Good\",\"Very Good\",\"Good\",\"Good\"],[\"Good\",\"Very Good\",\"Good\",\"Poor\",\"Good\",\"Good\",\"Very Good\",\"Very Good\",\"Very Good\",\"Good\",\"Very Good\",\"Very Good\",\"Poor\",\"Good\",\"Good\",\"Good\",\"Good\",\"Very Good\",\"Very Good\",\"Very Good\",\"Very Good\",\"Good\",\"Very Good\",\"Good\",\"Very Good\",\"Good\",\"Poor\",\"Poor\",\"Very Good\",\"Very Good\",\"Not applicable\",\"Good\",\"Very Good\",\"Good\",\"Good\",\"Good\",\"Good\",\"Good\"],[\"Very Poor\",\"Very Good\",\"Very Good\",\"Very Poor\",\"Poor\",\"Very Poor\",\"\",\"Very Good\",\"Very Poor\",\"Very Poor\",\"Very Poor\",\"Good\",\"Very Poor\",\"Very Good\",\"Good\",\"\",\"Very Poor\",\"Very Poor\",\"Good\",\"Poor\",\"Very Poor\",\"Good\",\"Good\",\"Very Poor\",\"Very Poor\",\"Good\",\"Good\",\"Good\",\"Very Poor\",\"Very Poor\",\"Very Poor\",\"Good\",\"Good\",\"Good\",\"Good\",\"Very Poor\",\"Good\",\"Good\"],[\"Not applicable\",\"Very Good\",\"Not applicable\",\"Not applicable\",\"Poor\",\"Not applicable\",\"\",\"Poor\",\"Not applicable\",\"Poor\",\"Not applicable\",\"Good\",\"Not applicable\",\"Poor\",\"Good\",\"\",\"Not applicable\",\"Not applicable\",\"Very Good\",\"Poor\",\"Not applicable\",\"Good\",\"Poor\",\"Not applicable\",\"Not applicable\",\"Good\",\"Good\",\"Poor\",\"Not applicable\",\"Very Poor\",\"Not applicable\",\"Poor\",\"Good\",\"Good\",\"Poor\",\"Not applicable\",\"Poor\",\"Good\"],[\"Not applicable\",\"Very Good\",\"Not applicable\",\"Not applicable\",\"Very Poor\",\"Not applicable\",\"\",\"Not applicable\",\"Not applicable\",\"Not applicable\",\"Not applicable\",\"Good\",\"Not applicable\",\"Poor\",\"Good\",\"\",\"Not applicable\",\"Not applicable\",\"Good\",\"Good\",\"Not applicable\",\"Good\",\"Poor\",\"Good\",\"Not applicable\",\"Very Good\",\"Very Good\",\"Good\",\"Not applicable\",\"Not applicable\",\"Not applicable\",\"Good\",\"Good\",\"Good\",\"Good\",\"Not applicable\",\"Good\",\"Not applicable\"],[\"Very Good\",\"Very Good\",\"Good\",\"Good\",\"Good\",\"Good\",\"\",\"Very Good\",\"Not applicable\",\"Very Good\",\"Good\",\"Good\",\"Poor\",\"Good\",\"Good\",\"Poor\",\"Very Good\",\"Good\",\"Good\",\"Very Good\",\"Good\",\"Good\",\"Good\",\"Good\",\"Good\",\"Very Good\",\"Good\",\"Poor\",\"Very Good\",\"Very Good\",\"Not applicable\",\"Very Good\",\"Good\",\"Poor\",\"Good\",\"Poor\",\"Not applicable\",\"Good\"],[\"Very Good\",\"Very Good\",\"Good\",\"Good\",\"Good\",\"Good\",\"Very Good\",\"Very Good\",\"Good\",\"Very Good\",\"Good\",\"Very Good\",\"Good\",\"Very Good\",\"Good\",\"Poor\",\"Very Good\",\"Good\",\"Good\",\"Very Good\",\"Very Good\",\"Good\",\"Good\",\"Good\",\"Very Good\",\"Poor\",\"Good\",\"Poor\",\"Very Good\",\"Very Good\",\"Not applicable\",\"Good\",\"Good\",\"Good\",\"Good\",\"Poor\",\"Not applicable\",\"Good\"]],\"container\":\"<table class=\\\"white-space: nowrap\\\">\\n  <thead>\\n    <tr>\\n      <th>status<\\/th>\\n      <th>Q1<\\/th>\\n      <th>Q2<\\/th>\\n      <th>Q3<\\/th>\\n      <th>Q4<\\/th>\\n      <th>Q5<\\/th>\\n      <th>Q6<\\/th>\\n      <th>Q7<\\/th>\\n      <th>Q8<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":10,\"scrollX\":true,\"columnDefs\":[{\"name\":\"status\",\"targets\":0},{\"name\":\"Q1\",\"targets\":1},{\"name\":\"Q2\",\"targets\":2},{\"name\":\"Q3\",\"targets\":3},{\"name\":\"Q4\",\"targets\":4},{\"name\":\"Q5\",\"targets\":5},{\"name\":\"Q6\",\"targets\":6},{\"name\":\"Q7\",\"targets\":7},{\"name\":\"Q8\",\"targets\":8}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false,\"orderCellsTop\":true}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n\nFirst, some data management steps:  \n\n* Pivot the data longer  \n* Create new column `direction` depending on whether response was generally \"positive\" or \"negative\"  \n* Set the Factor level order for the `status` column and the `Response` column  \n* Store the max count value so limits of plot are appropriate  \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmelted <- likert_data %>% \n  pivot_longer(\n    cols = Q1:Q8,\n    names_to = \"Question\",\n    values_to = \"Response\") %>% \n  mutate(\n    \n    direction = case_when(\n      Response %in% c(\"Poor\",\"Very Poor\")  ~ \"Negative\",\n      Response %in% c(\"Good\", \"Very Good\") ~ \"Positive\",\n      TRUE                                 ~ \"Unknown\"),\n    \n    status = fct_relevel(status, \"Junior\", \"Intermediate\", \"Senior\"),\n    \n    # must reverse 'Very Poor' and 'Poor' for ordering to work\n    Response = fct_relevel(Response, \"Very Good\", \"Good\", \"Very Poor\", \"Poor\")) \n\n# get largest value for scale limits\nmelted_max <- melted %>% \n  count(status, Question) %>% # get counts\n  pull(n) %>%                 # column 'n'\n  max(na.rm=T)                # get max\n```\n:::\n\n\n\nNow make the plot. As in the age pyramids above, we are creating two bar plots and inverting the values of one of them to negative. \n\nWe use `geom_bar()` because our data are one row per observation, not aggregated counts. We use the special **ggplot2** term `..count..` in one of the bar plots to invert the values negative (*-1), and we set `position = \"stack\"` so the values stack on top of each other.  \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# make plot\nggplot()+\n     \n  # bar graph of the \"negative\" responses \n     geom_bar(\n       data = melted %>% filter(direction == \"Negative\"),\n       mapping = aes(\n         x = status,\n         y = ..count..*(-1),    # counts inverted to negative\n         fill = Response),\n       color = \"black\",\n       closed = \"left\",\n       position = \"stack\")+\n     \n     # bar graph of the \"positive responses\n     geom_bar(\n       data = melted %>% filter(direction == \"Positive\"),\n       mapping = aes(\n         x = status,\n         fill = Response),\n       colour = \"black\",\n       closed = \"left\",\n       position = \"stack\")+\n     \n     # flip the X and Y axes\n     coord_flip()+\n  \n     # Black vertical line at 0\n     geom_hline(yintercept = 0, color = \"black\", size=1)+\n     \n    # convert labels to all positive numbers\n    scale_y_continuous(\n      \n      # limits of the x-axis scale\n      limits = c(-ceiling(melted_max/10)*11,    # seq from neg to pos by 10, edges rounded outward to nearest 5\n                 ceiling(melted_max/10)*10),   \n      \n      # values of the x-axis scale\n      breaks = seq(from = -ceiling(melted_max/10)*10,\n                   to = ceiling(melted_max/10)*10,\n                   by = 10),\n      \n      # labels of the x-axis scale\n      labels = abs(unique(c(seq(-ceiling(melted_max/10)*10, 0, 10),\n                            seq(0, ceiling(melted_max/10)*10, 10))))) +\n     \n    # color scales manually assigned \n    scale_fill_manual(\n      values = c(\"Very Good\"  = \"green4\", # assigns colors\n                \"Good\"      = \"green3\",\n                \"Poor\"      = \"yellow\",\n                \"Very Poor\" = \"red3\"),\n      breaks = c(\"Very Good\", \"Good\", \"Poor\", \"Very Poor\"))+ # orders the legend\n     \n    \n     \n    # facet the entire plot so each question is a sub-plot\n    facet_wrap( ~ Question, ncol = 3)+\n     \n    # labels, titles, caption\n    labs(\n      title = str_glue(\"Likert-style responses\\nn = {nrow(likert_data)}\"),\n      x = \"Respondent status\",\n      y = \"Number of responses\",\n      fill = \"\")+\n\n     # display adjustments \n     theme_minimal()+\n     theme(axis.text = element_text(size = 12),\n           axis.title = element_text(size = 14, face = \"bold\"),\n           strip.text = element_text(size = 14, face = \"bold\"),  # facet sub-titles\n           plot.title = element_text(size = 20, face = \"bold\"),\n           panel.background = element_rect(fill = NA, color = \"black\")) # black box around each facet\n```\n\n::: {.cell-output-display}\n![](age_pyramid_files/figure-html/unnamed-chunk-39-1.png){width=672}\n:::\n:::\n\n\n\n<!-- ======================================================= -->\n## Resources {}\n\n[apyramid documentation](https://cran.r-project.org/web/packages/apyramid/vignettes/intro.html)\n\n\n\n",
    "supporting": [
      "age_pyramid_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\r\n<link href=\"../site_libs/datatables-css-0.0.0/datatables-crosstalk.css\" rel=\"stylesheet\" />\r\n<script src=\"../site_libs/datatables-binding-0.31/datatables.js\"></script>\r\n<script src=\"../site_libs/jquery-3.6.0/jquery-3.6.0.min.js\"></script>\r\n<link href=\"../site_libs/dt-core-1.13.6/css/jquery.dataTables.min.css\" rel=\"stylesheet\" />\r\n<link href=\"../site_libs/dt-core-1.13.6/css/jquery.dataTables.extra.css\" rel=\"stylesheet\" />\r\n<script src=\"../site_libs/dt-core-1.13.6/js/jquery.dataTables.min.js\"></script>\r\n<link href=\"../site_libs/nouislider-7.0.10/jquery.nouislider.min.css\" rel=\"stylesheet\" />\r\n<script src=\"../site_libs/nouislider-7.0.10/jquery.nouislider.min.js\"></script>\r\n<link href=\"../site_libs/selectize-0.12.0/selectize.bootstrap3.css\" rel=\"stylesheet\" />\r\n<script src=\"../site_libs/selectize-0.12.0/selectize.min.js\"></script>\r\n<link href=\"../site_libs/crosstalk-1.2.1/css/crosstalk.min.css\" rel=\"stylesheet\" />\r\n<script src=\"../site_libs/crosstalk-1.2.1/js/crosstalk.min.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}