{
  "hash": "27b049424d423416dd4640c62018240b",
  "result": {
    "markdown": "# Download handbook and data {#data-used} \n\n\n<!-- Note to self: If you want to create a download link to Github, right-click the \"View Raw\" button on Github, copy the address, and use that in the HTML below. -->\n\n\n\n\n## Download offline handbook  \n\nYou can download the offline version of this handbook as an HTML file so that you can view the file in your web browser even if you no longer have internet access. If you are considering offline use of the Epi R Handbook here are a few things to consider:  \n\n* When you open the file it may take a minute or two for the images and the Table of Contents to load  \n* The offline handbook has a slightly different layout - one very long page with Table of Contents on the left. To search for specific terms use Ctrl+f (Cmd-f)  \n* See the [Suggested packages] page to assist you with installing appropriate R packages before you lose internet connectivity  \n* Install our R package **epirhandbook** that contains all the example data (install process described below)  \n\n**There are two ways you can download the handbook:**  \n\n\n\n### Use download link {.unnumbered}  \n\nFor quick access, **right-click** [this link](https://github.com/appliedepi/epirhandbook_eng/raw/master/offline_long/Epi_R_Handbook_offline.html) **and select \"Save link as\"**.  \n\nIf on a Mac, use Cmd+click. If on a mobile, press and hold the link and select \"Save link\". The handbook will download to your device. If a screen with raw HTML code appears, ensure you have followed the above instructions or try Option 2.  \n\n\n\n\n### Use our R package {.unnumbered}  \n\nWe offer an R package called **epirhandbook**. It includes a function `download_book()` that downloads the handbook file from our Github repository to your computer.  \n\n\nThis package also contains a function `get_data()` that downloads all the example data to your computer.  \n\nRun the following code to install our R package **epirhandbook** from the [Github repository *appliedepi*](https://github.com/appliedepi/epirhandbook). This package is not on CRAN, so use the special function `p_install_gh()` to install it from Github.  \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# install the latest version of the Epi R Handbook package\npacman::p_install_gh(\"appliedepi/epirhandbook\")\n```\n:::\n\n\nNow, load the package for use in your current R session:  \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# load the package for use\npacman::p_load(epirhandbook)\n```\n:::\n\n\nNext, run the package's function `download_book()` (with empty parentheses) to download the handbook to your computer. Assuming you are in RStudio, a window will appear allowing you to select a save location.  \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# download the offline handbook to your computer\ndownload_book()\n```\n:::\n\n\n\n\n\n\n## Download data to follow along  \n\nTo \"follow along\" with the handbook pages, you can download the example data and outputs.  \n\n### Use our R package {.unnumbered}  \n\nThe easiest approach to download all the data is to install our R package **epirhandbook**. It contains a function `get_data()` that saves all the example data to a folder of your choice on your computer.  \n\nTo install our R package **epirhandbook**, run the following code. This package is not on CRAN, so use the function `p_install_gh()` to install it. The input is referencing our Github organisation (\"*appliedepi*\") and the **epirhandbook** package.  \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# install the latest version of the Epi R Handbook package\npacman::p_install_gh(\"appliedepi/epirhandbook\")\n```\n:::\n\n\n\nNow, load the package for use in your current R session:  \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# load the package for use\npacman::p_load(epirhandbook)\n```\n:::\n\n\nNext, use the package's function `get_data()` to download the example data to your computer. Run `get_data(\"all\")` to get *all* the example data, or provide a specific file name and extension within the quotes to retrieve only one file.  \n\nThe data have already been downloaded with the package, and simply need to be transferred out to a folder on your computer. A pop-up window will appear, allowing you to select a save folder location. We suggest you create a new \"data\" folder as there are about 30 files (including example data and example outputs).  \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# download all the example data into a folder on your computer\nget_data(\"all\")\n\n# download only the linelist example data into a folder on your computer\nget_data(file = \"linelist_cleaned.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# download a specific file into a folder on your computer\nget_data(\"linelist_cleaned.rds\")\n```\n:::\n\n\nOnce you have used `get_data()` to save a file to your computer, you will still need to import it into R. See the [Import and export] page for details.  \n\nIf you wish, you can review all the data used in this handbook in the **[\"data\" folder](https://github.com/appliedepi/epirhandbook_eng/tree/master/data)** of our Github repository.  \n\n\n\n### Download one-by-one {.unnumbered}  \n\nThis option involves downloading the data file-by-file from our Github repository via either a link or an R command specific to the file. Some file types allow a download button, while others can be downloaded via an R command.  \n\n\n#### Case linelist {.unnumbered}\n\nThis is a fictional Ebola outbreak, expanded by the handbook team from the `ebola_sim` practice dataset in the **outbreaks** package.  \n\n* <a href='https://github.com/appliedepi/epirhandbook_eng/raw/master/data/case_linelists/linelist_raw.xlsx' class='download-button'>Click to download the \"raw\" linelist (.xlsx)</span></a>. The \"raw\" case linelist is an Excel spreadsheet with messy data. Use this to follow-along with the [Cleaning data and core functions] page.  \n\n* <a href='https://github.com/appliedepi/epirhandbook_eng/raw/master/data/case_linelists/linelist_cleaned.rds' class='download-button'>Click to download the \"clean\" linelist (.rds)</a>. Use this file for all other pages of this handbook that use the linelist. A .rds file is an R-specific file type that preserves column classes. This ensures you will have only minimal cleaning to do after importing the data into R.  \n\n*Other related files:*  \n\n* <a href='https://github.com/appliedepi/epirhandbook_eng/raw/master/data/case_linelists/linelist_cleaned.xlsx' class='download-button'>Click to download the \"clean\" linelist as an Excel file</a>\n\n* Part of the cleaning page uses a \"cleaning dictionary\" (.csv file). You can load it directly into R by running the following commands:   \n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(rio) # install/load the rio package\n\n# import the file directly from Github\ncleaning_dict <- import(\"https://github.com/appliedepi/epirhandbook_eng/raw/master/data/case_linelists/cleaning_dict.csv\")\n```\n:::\n\n\n\n#### Malaria count data {#data_malaria .unnumbered}  \n\nThese data are fictional counts of malaria cases by age group, facility, and day. A .rds file is an R-specific file type that preserves column classes. This ensures you will have only minimal cleaning to do after importing the data into R.  \n\n<a href='https://github.com/appliedepi/epirhandbook_eng/raw/master/data/malaria_facility_count_data.rds' class='download-button'>\n\tClick to download\n\t<span>the malaria count data (.rds file)</span>\n</a>\n\n\n#### Likert-scale data {.unnumbered}  \n\nThese are fictional data from a Likert-style survey, used in the page on [Demographic pyramids and Likert-scales]. You can load these data directly into R by running the following commands:    \n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(rio) # install/load the rio package\n\n# import the file directly from Github\nlikert_data <- import(\"https://raw.githubusercontent.com/appliedepi/epirhandbook_eng/master/data/likert_data.csv\")\n```\n:::\n\n\n\n#### Flexdashboard {.unnumbered}  \n\nBelow are links to the file associated with the page on [Dashboards with R Markdown]:  \n\n* To download the R Markdown for the outbreak dashboard, right-click this [link](https://github.com/appliedepi/epirhandbook_eng/raw/master/data/flexdashboard/outbreak_dashboard.Rmd) (Cmd+click for Mac) and select \"Save link as\".  \n* To download the HTML dashboard, right-click this [link](https://github.com/appliedepi/epirhandbook_eng/raw/master/data/flexdashboard/outbreak_dashboard_test.html) (Cmd+click for Mac) and select \"Save link as\".  \n\n#### Contact Tracing {.unnumbered} \n\nThe [Contact Tracing] page demonstrated analysis of contact tracing data, using example data from [Go.Data](https://github.com/WorldHealthOrganization/godata/tree/master/analytics/r-reporting). The data used in the page can be downloaded as .rds files by clicking the following links:  \n\n<a href='https://github.com/WorldHealthOrganization/godata/blob/master/analytics/r-reporting/data/cases_clean.rds?raw=true' class='download-button'>\n\tClick to download\n\t<span>the case investigation data (.rds file)</span>\n</a>\n\n<a href='https://github.com/WorldHealthOrganization/godata/blob/master/analytics/r-reporting/data/contacts_clean.rds?raw=true' class='download-button'>\n\tClick to download\n\t<span>the contact registration data (.rds file)</span>\n</a>\n\n<a href='https://github.com/WorldHealthOrganization/godata/blob/master/analytics/r-reporting/data/followups_clean.rds?raw=true' class='download-button'>\n\tClick to download\n\t<span>the contact follow-up data (.rds file)</span>\n</a>\n\n\n\n<span style=\"color: black;\">**_NOTE:_** Structured contact tracing data from other software (e.g. KoBo, DHIS2 Tracker, CommCare) may look different. If you would like to contribute alternative sample data or content for this page, please [contact us](#contact_us).</span> \n\n<span style=\"color: darkgreen;\">**_TIP:_** If you are deploying Go.Data and want to connect to your instance's API, see the Import and export page [(API section)](#import_api) and the [Go.Data Community of Practice](https://community-godata.who.int/).</span>\n\n\n#### GIS {.unnumbered}  \n\nShapefiles have many sub-component files, each with a different file extention. One file will have the \".shp\" extension, but others may have \".dbf\", \".prj\", etc.  \n\nThe [GIS basics] page provides links to the *Humanitarian Data Exchange* website where you can download the shapefiles directly as zipped files.  \n\nFor example, the health facility points data can be downloaded [here](https://data.humdata.org/dataset/hotosm_sierra_leone_health_facilities). Download \"hotosm_sierra_leone_health_facilities_points_shp.zip\". Once saved to your computer, \"unzip\" the folder. You will see several files with different extensions (e.g. \".shp\", \".prj\", \".shx\") - all these must be saved to the same folder on your computer. Then to import into R, provide the file path and name of the \".shp\" file to `st_read()` from the **sf** package (as described in the [GIS basics] page).  \n\nIf you follow Option 1 to download all the example data (via our R package **epirhandbook**), all the shapefiles are included.  \n\n\nAlternatively, you can download the shapefiles from the R Handbook Github \"data\" folder (see the \"gis\" sub-folder). However, be aware that you will need to download *each* sub-file individually to your computer. In Github, click on each file individually and download them by clicking on the \"Download\" button. Below, you can see how the shapefile \"sle_adm3\" consists of many files - each of which would need to be downloaded from Github.  \n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](../images/download_shp.png){fig-align='center' width=918 height=50%}\n:::\n:::\n\n\n\n#### Phylogenetic trees {.unnumbered}  \n\nSee the page on [Phylogenetic trees]. Newick file of phylogenetic tree constructed from whole genome sequencing of 299 Shigella sonnei samples and corresponding sample data (converted to a text file). The Belgian samples and resulting data are kindly provided by the Belgian NRC for Salmonella and Shigella in the scope of a project conducted by an ECDC EUPHEM Fellow, and will also be published in a manuscript. The international data are openly available on public databases (ncbi) and have been previously published.  \n\n* To download the \"Shigella_tree.txt\" phylogenetic tree file, right-click this [link](https://github.com/appliedepi/epirhandbook_eng/raw/master/data/phylo/Shigella_tree.txt) (Cmd+click for Mac) and select \"Save link as\".  \n* To download the \"sample_data_Shigella_tree.csv\" with additional information on each sample, right-click this [link](https://github.com/appliedepi/epirhandbook_eng/raw/master/data/phylo/sample_data_Shigella_tree.csv) (Cmd+click for Mac) and select \"Save link as\".  \n* To see the new, created subset-tree, right-click this [link](https://github.com/appliedepi/epirhandbook_eng/raw/master/data/phylo/Shigella_subtree_2.txt) (Cmd+click for Mac) and select \"Save link as\". The .txt file will download to your computer.  \n\n\nYou can then import the .txt files with `read.tree()` from the **ape** package, as explained in the page.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nape::read.tree(\"Shigella_tree.txt\")\n```\n:::\n\n\n\n#### Standardization {.unnumbered}  \n\nSee the page on [Standardised rates]. You can load the data directly from our Github repository on the internet into your R session with the following commands:  \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# install/load the rio package\npacman::p_load(rio) \n\n##############\n# Country A\n##############\n# import demographics for country A directly from Github\nA_demo <- import(\"https://github.com/appliedepi/epirhandbook_eng/raw/master/data/standardization/country_demographics.csv\")\n\n# import deaths for country A directly from Github\nA_deaths <- import(\"https://github.com/appliedepi/epirhandbook_eng/raw/master/data/standardization/deaths_countryA.csv\")\n\n##############\n# Country B\n##############\n# import demographics for country B directly from Github\nB_demo <- import(\"https://github.com/appliedepi/epirhandbook_eng/raw/master/data/standardization/country_demographics_2.csv\")\n\n# import deaths for country B directly from Github\nB_deaths <- import(\"https://github.com/appliedepi/epirhandbook_eng/raw/master/data/standardization/deaths_countryB.csv\")\n\n\n###############\n# Reference Pop\n###############\n# import demographics for country B directly from Github\nstandard_pop_data <- import(\"https://github.com/appliedepi/epirhandbook_eng/raw/master/data/standardization/world_standard_population_by_sex.csv\")\n```\n:::\n\n\n\n\n#### Time series and outbreak detection {#data_outbreak .unnumbered}  \n\nSee the page on [Time series and outbreak detection]. We use campylobacter cases reported in Germany 2002-2011, as available from the **surveillance** R package. (*nb.* this dataset has been adapted from the original, in that 3 months of data have been deleted from the end of 2011 for demonstration purposes)\n\n<a href='https://github.com/appliedepi/epirhandbook_eng/raw/master/data/time_series/campylobacter_germany.xlsx' class='download-button'>\n\tClick to download\n\t<span> Campylobacter in Germany (.xlsx)</span>\n</a>\n\nWe also use climate data from Germany 2002-2011 (temperature in degrees celsius and rain fail in millimetres) . These were downloaded from the EU Copernicus satellite reanalysis dataset using the **ecmwfr** package. You will need to download all of these and import them with `stars::read_stars()` as explained in the time series page.  \n\n<a href='https://github.com/appliedepi/epirhandbook_eng/raw/master/data/time_series/weather/germany_weather2002.nc' class='download-button'>\n\tClick to download\n\t<span> Germany weather 2002 (.nc file)</span>\n</a> \n\n<a href='https://github.com/appliedepi/epirhandbook_eng/raw/master/data/time_series/weather/germany_weather2003.nc' class='download-button'>\n\tClick to download\n\t<span> Germany weather 2003 (.nc file)</span>\n</a> \n\n<a href='https://github.com/appliedepi/epirhandbook_eng/raw/master/data/time_series/weather/germany_weather2004.nc' class='download-button'>\n\tClick to download\n\t<span> Germany weather 2004 (.nc file)</span>\n</a> \n\n<a href='https://github.com/appliedepi/epirhandbook_eng/raw/master/data/time_series/weather/germany_weather2005.nc' class='download-button'>\n\tClick to download\n\t<span> Germany weather 2005 (.nc file)</span>\n</a> \n\n<a href='https://github.com/appliedepi/epirhandbook_eng/raw/master/data/time_series/weather/germany_weather2006.nc' class='download-button'>\n\tClick to download\n\t<span> Germany weather 2006 (.nc file)</span>\n</a> \n\n<a href='https://github.com/appliedepi/epirhandbook_eng/raw/master/data/time_series/weather/germany_weather2007.nc' class='download-button'>\n\tClick to download\n\t<span> Germany weather 2007 (.nc file)</span>\n</a> \n\n<a href='https://github.com/appliedepi/epirhandbook_eng/raw/master/data/time_series/weather/germany_weather2008.nc' class='download-button'>\n\tClick to download\n\t<span> Germany weather 2008 (.nc file)</span>\n</a> \n\n<a href='https://github.com/appliedepi/epirhandbook_eng/raw/master/data/time_series/weather/germany_weather2009.nc' class='download-button'>\n\tClick to download\n\t<span> Germany weather 2009 (.nc file)</span>\n</a> \n\n<a href='https://github.com/appliedepi/epirhandbook_eng/raw/master/data/time_series/weather/germany_weather2010.nc' class='download-button'>\n\tClick to download\n\t<span> Germany weather 2010 (.nc file)</span>\n</a> \n\n<a href='https://github.com/appliedepi/epirhandbook_eng/raw/master/data/time_series/weather/germany_weather2011.nc' class='download-button'>\n\tClick to download\n\t<span> Germany weather 2011 (.nc file)</span>\n</a>\n\n\n\n#### Survey analysis {#data_survey .unnumbered}  \n\nFor the [survey analysis](https://epirhandbook.com/survey-analysis.html) page we use fictional mortality survey data based off MSF OCA survey templates. This fictional data was generated as part of the [\"R4Epis\" project](https://r4epis.netlify.app/).\n\n<a href='https://github.com/appliedepi/epirhandbook_eng/raw/master/data/surveys/survey_data.xlsx' class='download-button'>\n\tClick to download\n\t<span> Fictional survey data (.xlsx)</span>\n</a>\n\n<a href='https://github.com/appliedepi/epirhandbook_eng/raw/master/data/surveys/survey_dict.xlsx' class='download-button'>\n\tClick to download\n\t<span> Fictional survey data dictionary (.xlsx)</span>\n</a>\n\n<a href='https://github.com/appliedepi/epirhandbook_eng/raw/master/data/surveys/population.xlsx' class='download-button'>\n\tClick to download\n\t<span> Fictional survey population data (.xlsx)</span>\n</a>\n\n\n\n\n#### Shiny {#data_shiny .unnumbered}  \n\nThe page on [Dashboards with Shiny] demonstrates the construction of a simple app to display malaria data.  \n\nTo download the R files that produce the Shiny app:  \n\nYou can <a href='https://github.com/appliedepi/epirhandbook_eng/raw/master/data/malaria_app/app.R' class='download-button'>\n\tclick here to download the app.R file<span> that contains both the UI and Server code for the Shiny app.</span></a>\n\nYou can <a href='https://github.com/appliedepi/epirhandbook_eng/blob/master/data/malaria_app/data/facility_count_data.rds' class='download-button'>\n\tclick here to download the facility_count_data.rds file<span></a> that contains malaria data for the Shiny app. Note that you may need to store it within a \"data\" folder for the here() file paths to work correctly.  \n\nYou can <a href='https://github.com/appliedepi/epirhandbook_eng/blob/master/data/malaria_app/global.R' class='download-button'>\n\tclick here to download the global.R file<span></a> that should run prior to the app opening, as explained in the page.\n\t\nYou can <a href='https://github.com/appliedepi/epirhandbook_eng/raw/master/data/malaria_app/funcs/plot_epicurve.R' class='download-button'>\n\tclick here to download the plot_epicurve.R file<span></a> that is sourced by global.R. Note that you may need to store it within a \"funcs\" folder for the here() file paths to work correctly.\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}