{
  "hash": "95e7ef215659c1d79167c827b75af1c2",
  "result": {
    "markdown": "\n# Getting help  \n\nThis page covers how to get help by posting a Github issue or by posting a reproducible example (\"reprex\") to an online forum.  \n\n\n\n\n## Github issues  \n\nMany R packages and projects have their code hosted on the website Github.com. You can communicate directly with authors via this website by posting an \"Issue\".  \n\nRead more about how to store your work on Github in the page [Collaboration and Github]. \n\nOn Github, each project is contained within a *repository*. Each repository contains code, data, outputs, help documentation, etc. There is also a vehicle to communicate with the authors called \"Issues\".  \n\nSee below the Github page for the **incidence2** package (used to make epidemic curves). You can see the \"Issues\" tab highlighted in yellow. You can see that there are 5 open issues.  \n\n\n::: {.cell}\n::: {.cell-output-display}\n![](../images/errors_Github_issues.png){width=948}\n:::\n:::\n\n\nOnce in the Issues tab, you can see the open issues. Review them to ensure your problem is not already being addressed. You can open a new issue by clicking the green button on the right. You will need a Github account to do this. \n\n\n::: {.cell}\n::: {.cell-output-display}\n![](../images/errors_Github_issues2.png){width=910}\n:::\n:::\n\n\n\n  \nIn your issue, follow the instructions below to provide a minimal, reproducible example. And please be courteous! Most people developing R packages and projects are doing so in their spare time (like this handbook!).  \n\nTo read more advanced materials about handling issues in your own Github repository, check out the Github [documentation on Issues](https://guides.github.com/features/issues/).  \n\n\n\n## Reproducible example  \n\nProviding a reproducible example (\"reprex\") is key to getting help when posting in a forum or in a Github issue. People want to help you, but you have to give them an example that they can work with on their own computer. The example should:  \n\n* Demonstrate the problem you encountered  \n* Be *minimal*, in that it includes only the data and code required to reproduce your problem  \n* Be *reproducible*, such that all objects (e.g. data), package calls (e.g. `library()` or `p_load()`) are included\n\n*Also, be sure you do not post any sensitive data with the reprex!* You can create example data frames, or use one of the data frames built into R (enter `data()` to open a list of these datasets).  \n\n\n\n### The **reprex** package {.unnumbered}  \n\nThe **reprex** package can assist you with making a reproducible example:  \n\n1) **reprex** is installed with **tidyverse**, so load either package  \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# install/load tidyverse (which includes reprex)\npacman::p_load(tidyverse)\n```\n:::\n\n\n2) Begin an R script that creates your problem, step-by-step, starting from loading packages and data.  \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# load packages\npacman::p_load(\n     tidyverse,  # data mgmt and vizualization\n     outbreaks)  # example outbreak datasets\n\n# flu epidemic case linelist\noutbreak_raw <- outbreaks::fluH7N9_china_2013  # retrieve dataset from outbreaks package\n\n# Clean dataset\noutbreak <- outbreak_raw %>% \n     mutate(across(contains(\"date\"), as.Date))\n\n# Plot epidemic\n\nggplot(data = outbreak)+\n     geom_histogram(\n          mapping = aes(x = date_of_onset),\n          binwidth = 7\n     )+\n  scale_x_date(\n    date_format = \"%d %m\"\n  )\n```\n:::\n\n*Copy* all the code to your clipboard, and run the following command:  \n\n\n::: {.cell}\n\n```{.r .cell-code}\nreprex::reprex()\n```\n:::\n\n\nYou will see an HTML output appear in the RStudio Viewer pane. It will contain all your code and any warnings, errors, or plot outputs. This output is also copied to your clipboard, so you can post it directly into a Github issue or a forum post.  \n\n\n::: {.cell}\n::: {.cell-output-display}\n![](../images/errors_reprex_RStudio1.png){width=100%}\n:::\n:::\n\n\n\n* If you set `session_info = TRUE` the output of `sessioninfo::session_info()` with your R and R package versions will be included  \n* You can provide a working directory to `wd = `  \n* You can read more about the arguments and possible variations at the [documentation]() or by entering `?reprex`\n\nIn the example above, the `ggplot()` command did not run because the arguemnt `date_format =` is not correct - it should be `date_labels = `.  \n\n\n### Minimal data {.unnumbered}  \n\nThe helpers need to be able to use your data - ideally they need to be able to create it *with code*.  \n\nTo create a minumal dataset, consider anonymising and using only a subset of the observations. \n\nUNDER CONSTRUCTION - you can also use the function `dput()` to create minimal dataset.  \n\n\n\n\n## Posting to a forum  \n\nRead lots of forum posts. Get an understanding for which posts are well-written, and which ones are not.  \n\n1) First, decide whether to ask the question at all. Have you *thoroughly* reviewed the forum website, trying various search terms, to see if your question has already been asked?  \n\n2) Give your question an informative title (not \"Help! this isn't working\").  \n\n3) Write your question:  \n\n* Introduce your situation and problem  \n* Link to posts of similar issues and explain how they do not answer your question  \n* Include any relevant information to help someone who does not know the context of your work  \n* Give a minimal reproducible example with your R session information  \n* Use proper spelling, grammar, punctuation, and break your question into paragraphs so that it is easier to read  \n\n4) Monitor your question once posted to respond to any requests for clarification. Be courteous and gracious - often the people answering are volunteering their time to help you. If you have a follow-up question consider whether it should be a separate posted question.  \n\n5) Mark the question as answered, *if* you get an answer that meets the *original* request. This helps others later quickly recognize the solution.  \n\n\nRead these posts about [how to ask a good question](https://stackoverflow.com/help/how-to-ask) the [Stack overflow code of conduct](https://stackoverflow.com/conduct).  \n\n\n<!-- ======================================================= -->\n## Resources { }\n\n\nTidyverse page on how to [get help!](https://www.tidyverse.org/help/#:~:text=When%20you%20want%20to%20make,to%20load%20the%20reprex%20package.&text=Enter%20reprex()%20in%20the,preview%20of%20your%20rendered%20reprex.)\n\nTips on [producing a minimal dataset](https://xiangxing98.github.io/R_Learning/R_Reproducible.nb.html#producing-a-minimal-dataset)\n\nDocumentation for the [dput function](https://www.rdocumentation.org/packages/base/versions/3.6.2/topics/dput)\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}