[{"path":"index.html","id":"section","chapter":"","heading":"","text":"","code":""},{"path":"index.html","id":"r-for-applied-epidemiology-and-public-health","chapter":"","heading":"R for applied epidemiology and public health","text":"Usage: handbook used 1 million times 450,000 people around world.Objective: Serve quick R code reference manual (online [offline][Download handbook data]) task-centered examples address common epidemiological problems.just starting R? Try free interactive tutorials synchronous, virtual intro course used US CDC, , 75+ health agencies Field Epi Training Programs worldwide.Languages: French (Français), Spanish (Español), Vietnamese (Tiếng Việt), Japanese (日本), Turkish (Türkçe)Written epidemiologists, epidemiologists \nApplied Epi nonprofit organisation grassroots movement frontline epis around world. write spare time offer resource community. encouragement feedback welcome:Visit website join contact listcontact@appliedepi.org, tweet @appliedepi, LinkedInSubmit issues Github repositoryWe offer live R training instructors decades applied epidemiology experience - email us discuss.","code":""},{"path":"index.html","id":"how-to-use-this-handbook","chapter":"","heading":"How to use this handbook","text":"Browse pages Table Contents, use search boxClick “copy” icons copy codeYou can follow-along [example data][Download handbook data]Offline versionSee instructions [Download handbook data] page.","code":""},{"path":"index.html","id":"acknowledgements","chapter":"","heading":"Acknowledgements","text":"handbook produced independent collaboration epidemiologists around world drawing upon experience organizations including local, state, provincial, national health agencies, World Health Organization (), Doctors without Borders (MSF), hospital systems, academic institutions.handbook approved product specific organization. Although strive accuracy, provide guarantee content book.","code":""},{"path":"index.html","id":"contributors","chapter":"","heading":"Contributors","text":"Editor: Neale BatraAuthors: Neale Batra, Alex Spina, Paula Blomquist, Finlay Campbell, Henry Laurenson-Schafer, Isaac Florence, Natalie Fischer, Aminata Ndiaye, Liza Coyer, Jonathan Polonsky, Yurie Izawa, Chris Bailey, Daniel Molling, Isha Berry, Emma Buajitti, Mathilde Mousset, Sara Hollis, Wen LinReviewers supporters: Pat Keating, Amrish Baidjoe, Annick Lenglet, Margot Charette, Danielly Xavier, Marie-Amélie Degail Chabrat, Esther Kukielka, Michelle Sloan, Aybüke Koyuncu, Rachel Burke, Kate Kelsey, Berhe Etsay, John Rossow, Mackenzie Zendt, James Wright, Laura Haskins, Flavio Finger, Tim Taylor, Jae Hyoung Tim Lee, Brianna Bradley, Wayne Enanoria, Manual Albela Miranda, Molly Mantus, Pattama Ulrich, Joseph Timothy, Adam Vaughan, Olivia Varsaneux, Lionel Monteiro, Joao MuiangaIllustrations: Calder Fong","code":""},{"path":"index.html","id":"funding-and-support","chapter":"","heading":"Funding and support","text":"book primarily volunteer effort took thousands hours create.handbook received supportive funding via COVID-19 emergency capacity-building grant TEPHINET, global network Field Epidemiology Training Programs (FETPs).Administrative support provided EPIET Alumni Network (EAN), special thanks Annika Wendland. EPIET European Programme Intervention Epidemiology Training.Special thanks Médecins Sans Frontières (MSF) Operational Centre Amsterdam (OCA) support development handbook.publication supported Cooperative Agreement number NU2GGH001873, funded Centers Disease Control Prevention TEPHINET, program Task Force Global Health. contents solely responsibility authors necessarily represent official views Centers Disease Control Prevention, Department Health Human Services, Task Force Global Health, Inc. TEPHINET.","code":""},{"path":"index.html","id":"inspiration","chapter":"","heading":"Inspiration","text":"multitude tutorials vignettes provided knowledge development handbook content credited within respective pages.generally, following sources provided inspiration handbook:“R4Epis” project (collaboration MSF RECON)R Epidemics Consortium (RECON)R Data Science book (R4DS)bookdown: Authoring Books Technical Documents R MarkdownNetlify hosts website","code":""},{"path":"index.html","id":"terms-of-use-and-contribution","chapter":"","heading":"Terms of Use and Contribution","text":"","code":""},{"path":"index.html","id":"license","chapter":"","heading":"License","text":" Applied Epi Incorporated, 2021 work licensed Applied Epi Incorporated Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License.Academic courses epidemiologist training programs welcome contact us use adaptation material (email contact@appliedepi.org).","code":""},{"path":"index.html","id":"citation","chapter":"","heading":"Citation","text":"Batra, Neale, et al. Epidemiologist R Handbook. 2021. ","code":""},{"path":"index.html","id":"contribution","chapter":"","heading":"Contribution","text":"like make content contribution, please contact us first via Github issues email. implementing schedule updates creating contributor guide.Please note epiRhandbook project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"reports-with-r-markdown.html","id":"reports-with-r-markdown","chapter":"1 Reports with R Markdown","heading":"1 Reports with R Markdown","text":"R Markdown widely-used tool creating automated, reproducible, share-worthy outputs, reports. can generate static interactive outputs, Word, pdf, html, powerpoint, formats.R Markdown script intersperces R code text script actually becomes output document. can create entire formatted document, including narrative text (can dynamic change based data), tables, figures, bullets/numbers, bibliographies, etc.documents can produced update routine basis (e.g. daily surveillance reports) /run subsets data (e.g. reports jurisdiction).pages handbook expand topic:page Organizing routine reports demonstrates routinize report production auto-generated time-stamped folders.page Dashboards R Markdown explains format R Markdown report dashboard.note, R4Epis project developed template R Markdown scripts common outbreaks surveys scenarios encountered MSF project locations.","code":""},{"path":"reports-with-r-markdown.html","id":"preparation","chapter":"1 Reports with R Markdown","heading":"1.1 Preparation","text":"Background R MarkdownTo explain concepts packages involved:Markdown “language” allows write document using plain text, can converted html formats. specific R. Files written Markdown ‘.md’ extension.R Markdown: variation markdown specific R - allows write document using markdown produce text embed R code display outputs. R Markdown files ‘.Rmd’ extension.rmarkdown - package: used R render .Rmd file desired output. ’s focus converting markdown (text) syntax, also need…knitr: R package read code chunks, execute , ‘knit’ back document. tables graphs included alongside text.Pandoc: Finally, pandoc actually convert output word/pdf/powerpoint etc. software separate R installed automatically RStudio.sum, process happens background (need know steps!) involves feeding .Rmd file knitr, executes R code chunks creates new .md (markdown) file includes R code rendered output. .md file processed pandoc create finished product: Microsoft Word document, HTML file, powerpoint document, pdf, etc.(source: https://rmarkdown.rstudio.com/authoring_quick_tour.html):InstallationTo create R Markdown output, need following installed:rmarkdown package (knitr also installed automatically)Pandoc, come installed RStudio. using RStudio, can download Pandoc : http://pandoc.org.want generate PDF output (bit trickier), need install LaTeX. R Markdown users installed LaTeX , recommend install TinyTeX (https://yihui.name/tinytex/). can use following commands:","code":"\npacman::p_load(tinytex)     # install tinytex package\ntinytex::install_tinytex()  # R command to install TinyTeX software"},{"path":"reports-with-r-markdown.html","id":"getting-started","chapter":"1 Reports with R Markdown","heading":"1.2 Getting started","text":"","code":""},{"path":"reports-with-r-markdown.html","id":"install-rmarkdown-r-package","chapter":"1 Reports with R Markdown","heading":"Install rmarkdown R package","text":"Install rmarkdown R package. handbook emphasize p_load() pacman, installs package necessary loads use. can also load installed packages library() base R. See page [R basics] information R packages.","code":"\npacman::p_load(rmarkdown)"},{"path":"reports-with-r-markdown.html","id":"starting-a-new-rmd-file","chapter":"1 Reports with R Markdown","heading":"Starting a new Rmd file","text":"RStudio, open new R markdown file, starting ‘File’, ‘New file’ ‘R markdown…’.R Studio give output options pick . example select “HTML” want create html document. title author names important. output document type want one , don’t worry - can just pick one change script later.open new .Rmd script.","code":""},{"path":"reports-with-r-markdown.html","id":"important-to-know","chapter":"1 Reports with R Markdown","heading":"Important to know","text":"working directoryThe working directory markdown file wherever Rmd file saved. instance, R project within ~/Documents/projectX Rmd file subfolder ~/Documents/projectX/markdownfiles/markdown.Rmd, code read.csv(“data.csv”) within markdown look csv file markdownfiles folder, root project folder scripts within projects normally automatically look.refer files elsewhere, either need use full file path use package. package sets working directory root folder R project explained detail [R projects] [Import export] pages handbook. instance, import file called “data.csv” within projectX folder, code import((“data.csv”)).Note use setwd() R Markdown scripts recommended – applies code chunk written .Working drive vs computerBecause R Markdown can run pandoc issues running shared network drive, recommended folder local machine, e.g. project within ‘Documents’. use Git (much recommended!), familiar. details, see handbook pages R network drives [Errors help].","code":""},{"path":"reports-with-r-markdown.html","id":"r-markdown-components","chapter":"1 Reports with R Markdown","heading":"1.3 R Markdown components","text":"R Markdown document can edited RStudio just like standard R script. start new R Markdown script, RStudio tries helpful showing template explains different section R Markdown script.appears starting new Rmd script intended produce html output (per previous section).can see, three basic components Rmd file: YAML, Markdown text, R code chunks.create become document output. See diagram :","code":""},{"path":"reports-with-r-markdown.html","id":"yaml-metadata","chapter":"1 Reports with R Markdown","heading":"YAML metadata","text":"Referred ‘YAML metadata’ just ‘YAML’, top R Markdown document. section script tell Rmd file type output produce, formatting preferences, metadata document title, author, date. uses mentioned (referred ‘Producing output’). Note indentation matters; tabs accepted spaces .section must begin line containing just three dashes --- must close line containing just three dashes ---. YAML parameters comes key:value pairs. placement colons YAML important - key:value pairs separated colons (equals signs!).YAML begin metadata document. order primary YAML parameters (indented) matter. example:can use R code YAML values writing -line code (preceded r within back-ticks) also within quotes (see example date:).image , clicked default output html file, can see YAML says output: html_document. However can also change say powerpoint_presentation word_document even pdf_document.","code":"title: \"My document\"\nauthor: \"Me\"\ndate: \"2023-07-18\""},{"path":"reports-with-r-markdown.html","id":"text","chapter":"1 Reports with R Markdown","heading":"Text","text":"narrative document, including titles headings. written “markdown” language, used across many different software.core ways write text. See extensive documentation available R Markdown “cheatsheet” RStudio website.","code":""},{"path":"reports-with-r-markdown.html","id":"new-lines","chapter":"1 Reports with R Markdown","heading":"New lines","text":"Uniquely R Markdown, initiate new line, enter *two spaces** end previous line Enter/Return.","code":""},{"path":"reports-with-r-markdown.html","id":"case","chapter":"1 Reports with R Markdown","heading":"Case","text":"Surround normal text character change appears output.Underscores (_text_) single asterisk (*text*) italiciseDouble asterisks (**text**) bold textBack-ticks (text) display text codeThe actual appearance font can set using specific templates (specified YAML metadata; see example tabs).","code":""},{"path":"reports-with-r-markdown.html","id":"color","chapter":"1 Reports with R Markdown","heading":"Color","text":"simple mechanism change color text R Markdown. One work-around, output HTML file, add HTML line markdown text. HTML code print line text bold red.DANGER: warning.","code":"<span style=\"color: red;\">**_DANGER:_** This is a warning.<\/span>  "},{"path":"reports-with-r-markdown.html","id":"titles-and-headings","chapter":"1 Reports with R Markdown","heading":"Titles and headings","text":"hash symbol text portion R Markdown script creates heading. different chunk R code script, hash symbol mechanism comment/annotate/de-activate, normal R script.Different heading levels established different numbers hash symbols start new line. One hash symbol title primary heading. Two hash symbols second-level heading. Third- fourth-level headings can made successively hash symbols.","code":"# First-level heading / title\n\n## Second level heading  \n\n### Third-level heading"},{"path":"reports-with-r-markdown.html","id":"bullets-and-numbering","chapter":"1 Reports with R Markdown","heading":"Bullets and numbering","text":"Use asterisks (*) created bullets list. Finish previous sentence, enter two spaces, Enter/Return twice, start bullets. Include space asterisk bullet text. bullet enter two spaces Enter/Return. Sub-bullets work way indented. Numbers work way instead asterisk, write 1), 2), etc. R Markdown script text might look.","code":"Here are my bullets (there are two spaces after this colon):  \n\n* Bullet 1 (followed by two spaces and Enter/Return)  \n* Bullet 2 (followed by two spaces and Enter/Return)  \n  * Sub-bullet 1 (followed by two spaces and Enter/Return)  \n  * Sub-bullet 2 (followed by two spaces and Enter/Return)  \n  "},{"path":"reports-with-r-markdown.html","id":"comment-out-text","chapter":"1 Reports with R Markdown","heading":"Comment out text","text":"can “comment ” R Markdown text just can use “#” comment line R code R chunk. Simply highlight text press Ctrl+Shift+c (Cmd+Shift+c Mac). text surrounded arrows turn green. appear output.","code":""},{"path":"reports-with-r-markdown.html","id":"code-chunks","chapter":"1 Reports with R Markdown","heading":"Code chunks","text":"Sections script dedicated running R code called “chunks”. may load packages, import data, perform actual data management visualisation. may many code chunks, can help organize R code parts, perhaps interspersed text. note:\n‘chunks’ appear slightly different background colour narrative part document.chunk opened line starts three back-ticks, curly brackets contain parameters chunk ({ }). chunk ends three back-ticks.can create new chunk typing , using keyboard shortcut “Ctrl + Alt + ” (Cmd + Shift + r Mac), clicking green ‘insert new code chunk’ icon top script editor.notes contents curly brackets { }:start ‘r’ indicate language name within chunk RAfter r can optionally write chunk “name” – necessary can help organise work. Note name chunks, ALWAYS use unique names else R complain try render.curly brackets can include options , written tag=value, :eval = FALSE run R codeecho = FALSE print chunk’s R source code output documentwarning = FALSE print warnings produced R codemessage = FALSE print messages produced R codeinclude = either TRUE/FALSE whether include chunk outputs (e.g. plots) documentout.width = .height = - provide style .width = \"75%\"fig.align = \"center\" adjust figure aligned across pagefig.show='hold' chunk prints multiple figures want printed next (pair .width = c(\"33%\", \"67%\"). Can also set fig.show='asis' show code generates , 'hide' hide, 'animate' concatenate multiple animation.chunk header must written one lineTry avoid periods, underscores, spaces. Use hyphens ( - ) instead need separator.Read extensively knitr options .options can configured point--click using setting buttons top right chunk. , can specify parts chunk want rendered document include, namely code, outputs, warnings. come written preferences within curly brackets, e.g. echo=FALSE specify want ‘Show output ’.also two arrows top right chunk, useful run code within chunk, code prior chunks. Hover see .global options applied chunks script, can set within first R code chunk script. instance, outputs shown code chunk code , can include command R code chunk:","code":"\nknitr::opts_chunk$set(echo = FALSE) "},{"path":"reports-with-r-markdown.html","id":"in-text-r-code","chapter":"1 Reports with R Markdown","heading":"In-text R code","text":"can also include minimal R code within back-ticks. Within back-ticks, begin code “r” space, RStudio knows evaluate code R code. See example .example shows multiple heading levels, bullets, uses R code current date (Sys.Date()) evaluate printed date.example simple (showing current date), using syntax can display values produced complex R code (e.g. calculate min, median, max column). can also integrate R objects values created R code chunks earlier script.example, script calculates proportion cases aged less 18 years old, using tidyverse functions, creates objects less18, total, less18prop. dynamic value inserted subsequent text. see looks knitted word document.","code":""},{"path":"reports-with-r-markdown.html","id":"images","chapter":"1 Reports with R Markdown","heading":"Images","text":"can include images R Markdown one two ways:work, try using knitr::include_graphics()(remember, file path written using package)","code":"![](\"path/to/image.png\")  \nknitr::include_graphics(\"path/to/image.png\")\nknitr::include_graphics(here::here(\"path\", \"to\", \"image.png\"))"},{"path":"reports-with-r-markdown.html","id":"tables","chapter":"1 Reports with R Markdown","heading":"Tables","text":"Create table using hyphens ( - ) bars ( | ). number hyphens /bars allow number spaces cell text begins wrap.code produces table :","code":"Column 1 |Column  2 |Column 3\n---------|----------|--------\nCell A   |Cell B    |Cell C\nCell D   |Cell E    |Cell F"},{"path":"reports-with-r-markdown.html","id":"tabbed-sections","chapter":"1 Reports with R Markdown","heading":"Tabbed sections","text":"HTML outputs, can arrange sections “tabs”. Simply add .tabset curly brackets { } placed heading. sub-headings beneath heading (another heading level) appear tabs user can click . Read hereYou can add additional option .tabset-pills .tabset give tabs “pilled” appearance. aware viewing tabbed HTML output, Ctrl+f search functionality search “active” tabs, hidden tabs.","code":""},{"path":"reports-with-r-markdown.html","id":"file-structure","chapter":"1 Reports with R Markdown","heading":"1.4 File structure","text":"several ways structure R Markdown associated R scripts. advantages disadvantages:Self-contained R Markdown - everything needed report imported created within R Markdown\nSource files - can run external R scripts source() command use outputs Rmd\nChild scripts - alternate mechanism source()\nSource files - can run external R scripts source() command use outputs RmdChild scripts - alternate mechanism source()Utilize “runfile” - Run commands R script prior rendering R Markdown","code":""},{"path":"reports-with-r-markdown.html","id":"self-contained-rmd","chapter":"1 Reports with R Markdown","heading":"Self-contained Rmd","text":"relatively simple report, may elect organize R Markdown script “self-contained” involve external scripts.Everything need run R markdown imported created within Rmd file, including code chunks package loading. “self-contained” approach appropriate need much data processing (e.g. brings clean semi-clean data file) rendering R Markdown take long.scenario, one logical organization R Markdown script might :Set global knitr optionsLoad packagesImport dataProcess dataProduce outputs (tables, plots, etc.)Save outputs, applicable (.csv, .png, etc.)","code":""},{"path":"reports-with-r-markdown.html","id":"source-other-files","chapter":"1 Reports with R Markdown","heading":"Source other files","text":"One variation “self-contained” approach R Markdown code chunks “source” (run) R scripts. can make R Markdown script less cluttered, simple, easier organize. can also help want display final figures beginning report. approach, final R Markdown script simply combines pre-processed outputs document.One way providing R scripts (file path name extension) base R command source().Note using source() within R Markdown, external files still run course rendering Rmd file. Therefore, script run every time render report. Thus, source() commands within R Markdown speed run time, greatly assist de-bugging, error produced still printed producing R Markdown.alternative utilize child = knitr option. EXPLAIN DOYou must aware various R environments. Objects created within environment necessarily available environment used R Markdown.","code":"\nsource(\"your-script.R\", local = knitr::knit_global())\n# or sys.source(\"your-script.R\", envir = knitr::knit_global())"},{"path":"reports-with-r-markdown.html","id":"runfile","chapter":"1 Reports with R Markdown","heading":"Runfile","text":"approach involves utilizing R script contains render() command(s) pre-process objects feed R markdown.instance, can load packages, load clean data, even create graphs interest prior render(). steps can occur R script, scripts sourced. long commands occur RStudio session objects saved environment, objects can called within Rmd content. R markdown used final step - produce output pre-processed objects. much easier de-bug something goes wrong.approach helpful following reasons:informative error messages - messages generated R script, R Markdown. R Markdown errors tend tell chunk problem, tell line.applicable, can run long processing steps advance render() command - run .example , separate R script pre-process data object R Environment render “create_output.Rmd” using render().","code":"\ndata <- import(\"datafile.csv\") %>%       # Load data and save to environment\n  select(age, hospital, weight)          # Select limited columns\n\nrmarkdown::render(input = \"create_output.Rmd\")   # Create Rmd file"},{"path":"reports-with-r-markdown.html","id":"folder-strucutre","chapter":"1 Reports with R Markdown","heading":"Folder strucutre","text":"Workflow also concerns overall folder structure, ‘output’ folder created documents figures, ‘data’ ‘inputs’ folders cleaned data. go detail , check Organizing routine reports page.","code":""},{"path":"reports-with-r-markdown.html","id":"producing-the-document","chapter":"1 Reports with R Markdown","heading":"1.5 Producing the document","text":"can produce document following ways:Manually pressing “Knit” button top RStudio script editor (fast easy)Run render() command (executed outside R Markdown script)","code":""},{"path":"reports-with-r-markdown.html","id":"option-1-knit-button","chapter":"1 Reports with R Markdown","heading":"Option 1: “Knit” button","text":"Rmd file open, press ‘Knit’ icon/button top file.R Studio show progress within ‘R Markdown’ tab near R console. document automatically open complete.document saved folder R markdown script, file name (aside extension). obviously ideal version control (-written tim knit, unless moved manually), may need rename file (e.g. add date).RStudio’s shortcut button render() function rmarkdown. approach compatible self-contained R markdown, needed components exist sourced within file.","code":""},{"path":"reports-with-r-markdown.html","id":"option-2-render-command","chapter":"1 Reports with R Markdown","heading":"Option 2: render() command","text":"Another way produce R Markdown output run render() function (rmarkdown package). must execute command outside R Markdown script - either separate R script (often called “run file”), stand-alone command R Console.“knit”, default settings save Rmd output folder Rmd script, file name (aside file extension). instance “my_report.Rmd” knitted create “my_report.docx” knitting word document. However, using render() option use different settings. render() can accept arguments including:output_format = output format convert (e.g. \"html_document\", \"pdf_document\", \"word_document\", \"\"). can also specify YAML inside R Markdown script.output_file = name output file (file path). can created via R functions like () str_glue() demonstrated .output_dir = output directory (folder) save file. allows chose alternative directory Rmd file saved .output_options = can provide list options override script YAML (e.g. )output_yaml = can provide path .yml file contains YAML specificationsparams = See section parameters belowSee complete list hereAs one example, improve version control, following command save output file within ‘outputs’ sub-folder, current date file name. create file name, function str_glue() stringr package use ‘glue’ together static strings (written plainly) dynamic R code (written curly brackets). instance April 10th 2021, file name “Report_2021-04-10.docx”. See page [Characters strings] details str_glue().file renders, RStudio Console show rendering progress 100%, final message indicate rendering complete.","code":"\nrmarkdown::render(input = \"my_report.Rmd\")\nrmarkdown::render(\n  input = \"create_output.Rmd\",\n  output_file = stringr::str_glue(\"outputs/Report_{Sys.Date()}.docx\")) "},{"path":"reports-with-r-markdown.html","id":"options-3-reportfactory-package","chapter":"1 Reports with R Markdown","heading":"Options 3: reportfactory package","text":"R package reportfactory offers alternative method organising compiling R Markdown reports catered scenarios run reports routinely (e.g. daily, weekly…). eases compilation multiple R Markdown files organization outputs. essence, provides “factory” can run R Markdown reports, get automatically date- time-stamped folders outputs, “light” version control.Read work flow page Organizing routine reports.","code":""},{"path":"reports-with-r-markdown.html","id":"parameterised-reports","chapter":"1 Reports with R Markdown","heading":"1.6 Parameterised reports","text":"can use parameterisation make report dynamic, can run specific setting (e.g. specific date place certain knitting options). , focus basics, detail online parameterized reports.Using Ebola linelist example, let’s say want run standard surveillance report hospital day. show one can using parameters.Important: dynamic reports also possible without formal parameter structure (without params:), using simple R objects adjacent R script. explained end section.","code":""},{"path":"reports-with-r-markdown.html","id":"setting-parameters","chapter":"1 Reports with R Markdown","heading":"Setting parameters","text":"several options specifying parameter values R Markdown output.","code":""},{"path":"reports-with-r-markdown.html","id":"option-1-set-parameters-within-yaml","chapter":"1 Reports with R Markdown","heading":"Option 1: Set parameters within YAML","text":"Edit YAML include params: option, indented statements parameter want define. example create parameters date hospital, specify values. values subject change time report run. use “Knit” button produce output, parameters default values. Likewise, use render() parameters default values unless otherwise specified render() command.background, parameter values contained within read-list called params. Thus, can insert parameter values R code another R object/value environment. Simply type params$ followed parameter name. example params$hospital represent hospital name (“Central Hospital” default).Note parameters can also hold values true false, can included knitr options R chunk. example, can set {r, eval=params$run} instead {r, eval=FALSE}, now whether chunk runs depends value parameter run:.Note parameters dates, input string. params$date interpreted R code likely need wrapped .Date() similar function convert class Date.","code":"---\ntitle: Surveillance report\noutput: html_document\nparams:\n date: 2021-04-10\n hospital: Central Hospital\n---"},{"path":"reports-with-r-markdown.html","id":"option-2-set-parameters-within-render","chapter":"1 Reports with R Markdown","heading":"Option 2: Set parameters within render()","text":"mentioned , alternative pressing “Knit” button produce output execute render() function separate script. later case, can specify parameters used rendering params = argument render().Note parameter values provided overwrite default values written within YAML. write values quotation marks case defined character/string values.command renders “surveillance_report.Rmd”, specifies dynamic output file name folder, provides list() two parameters values argument params =.","code":"\nrmarkdown::render(\n  input = \"surveillance_report.Rmd\",  \n  output_file = stringr::str_glue(\"outputs/Report_{Sys.Date()}.docx\"),\n  params = list(date = \"2021-04-10\", hospital  = \"Central Hospital\"))"},{"path":"reports-with-r-markdown.html","id":"option-3-set-parameters-using-a-graphical-user-interface","chapter":"1 Reports with R Markdown","heading":"Option 3: Set parameters using a Graphical User Interface","text":"interactive feel, can also use Graphical User Interface (GUI) manually select values parameters. can click drop-menu next ‘Knit’ button choose ‘Knit parameters’.pop-appear allowing type values parameters established document’s YAML.can achieve render() command specifying params = \"ask\", demonstrated .However, typing values pop-window subject error spelling mistakes. may prefer add restrictions values can entered drop-menus. can adding YAML several specifications params: entry.label: title particular drop-menuvalue: default (starting) valueinput: set select drop-menuchoices: Give eligible values drop-menuBelow, specifications written hospital parameter.knitting (either via ‘knit parameters’ button render()), pop-window drop-options select .","code":"rmarkdown::render(\n  input = \"surveillance_report.Rmd\",  \n  output_file = stringr::str_glue(\"outputs/Report_{Sys.Date()}.docx\"),\n  params = “ask”)---\ntitle: Surveillance report\noutput: html_document\nparams:\n date: 2021-04-10\n hospital: \n  label: “Town:”\n  value: Central Hospital\n  input: select\n  choices: [Central Hospital, Military Hospital, Port Hospital, St. Mark's Maternity Hospital (SMMH)]\n---"},{"path":"reports-with-r-markdown.html","id":"parameterized-example","chapter":"1 Reports with R Markdown","heading":"Parameterized example","text":"following code creates parameters date hospital, used R Markdown params$date params$hospital, respectively.resulting report output, see data filtered specific hospital, plot title refers correct hospital date. use “linelist_cleaned.rds” file , particularly appropriate linelist also datestamp within align parameterised date.Knitting produces final output default font layout.","code":""},{"path":"reports-with-r-markdown.html","id":"parameterisation-without-params","chapter":"1 Reports with R Markdown","heading":"Parameterisation without params","text":"rendering R Markdown file render() separate script, can actually create impact parameterization without using params: functionality.instance, R script contains render() command, can simply define hospital date two R objects (values) render() command. R Markdown, need params: section YAML, refer date object rather params$date hospital rather params$hospital.Following approach means means can “knit parameters”, use GUI, include knitting options within parameters. However allows simpler code, may advantageous.","code":"\n# This is a R script that is separate from the R Markdown\n\n# define R objects\nhospital <- \"Central Hospital\"\ndate <- \"2021-04-10\"\n\n# Render the R markdown\nrmarkdown::render(input = \"create_output.Rmd\") "},{"path":"reports-with-r-markdown.html","id":"looping-reports","chapter":"1 Reports with R Markdown","heading":"1.7 Looping reports","text":"may want run report multiple times, varying input parameters, produce report jurisdictions/unit. can done using tools iteration, explained detail page [Iteration, loops, lists]. Options include purrr package, use loop explained ., use simple loop generate surveillance report hospitals interest. done one command (instead manually changing hospital parameter one---time). command render reports must exist separate script outside report Rmd. script also contain defined objects “loop ” - today’s date, vector hospital names loop .feed values one---time render() command using loop, runs command value hospitals vector. letter represents index position (1 4) hospital currently used iteration, hospital_list[1] “Central Hospital”. information supplied two places render() command:file name, file name first iteration produced 10th April 2021 “Report_Central Hospital_2021-04-10.docx”, saved ‘output’ subfolder working directory.params = Rmd uses hospital name internally whenever params$hospital value called (e.g. filter dataset particular hospital ). example, four files created - one hospital.","code":"\nhospitals <- c(\"Central Hospital\",\n                \"Military Hospital\", \n                \"Port Hospital\",\n                \"St. Mark's Maternity Hospital (SMMH)\") \nfor(i in 1:length(hospitals)){\n  rmarkdown::render(\n    input = \"surveillance_report.Rmd\",\n    output_file = str_glue(\"output/Report_{hospitals[i]}_{Sys.Date()}.docx\"),\n    params = list(hospital  = hospitals[i]))\n}       "},{"path":"reports-with-r-markdown.html","id":"templates","chapter":"1 Reports with R Markdown","heading":"1.8 Templates","text":"using template document contains desired formatting, can adjust aesthetics Rmd output look. can create instance MS Word Powerpoint file contains pages/slides desired dimensions, watermarks, backgrounds, fonts.","code":""},{"path":"reports-with-r-markdown.html","id":"word-documents","chapter":"1 Reports with R Markdown","heading":"Word documents","text":"create template, start new word document (use existing output formatting suits ), edit fonts defining Styles. Style,Headings 1, 2, 3 refer various markdown header levels (# Header 1, ## Header 2 ### Header 3 respectively). Right click style click ‘modify’ change font formatting well paragraph (e.g. can introduce page breaks certain styles can help spacing). aspects word document margins, page size, headers etc, can changed like usual word document working directly within.","code":""},{"path":"reports-with-r-markdown.html","id":"powerpoint-documents","chapter":"1 Reports with R Markdown","heading":"Powerpoint documents","text":", create new slideset use existing powerpoint file desired formatting. editing, click ‘View’ ‘Slide Master’. can change ‘master’ slide appearance editing text formatting text boxes, well background/page dimensions overall page.Unfortunately, editing powerpoint files slightly less flexible:first level header (# Header 1) automatically become title new slide,## Header 2 text come subtitle text within slide’s main textbox (unless find way maniuplate Master view).Outputted plots tables automatically go new slides. need combine , instance patchwork function combine ggplots, show page. See blog post using patchwork package put multiple images one slide.See officer package tool work -depth powerpoint presentations.","code":""},{"path":"reports-with-r-markdown.html","id":"integrating-templates-into-the-yaml","chapter":"1 Reports with R Markdown","heading":"Integrating templates into the YAML","text":"template prepared, detail can added YAML Rmd underneath ‘output’ line underneath document type specified (goes separate line ). Note reference_doc can used powerpoint slide templates.easiest save template folder Rmd file (example ), subfolder within.","code":"---\ntitle: Surveillance report\noutput: \n word_document:\n  reference_docx: \"template.docx\"\nparams:\n date: 2021-04-10\n hospital: Central Hospital\ntemplate:\n \n---"},{"path":"reports-with-r-markdown.html","id":"formatting-html-files","chapter":"1 Reports with R Markdown","heading":"Formatting HTML files","text":"HTML files use templates, can styles configured within YAML. HTMLs interactive documents, particularly flexible. cover basic options .Table contents: can add table contents toc: true , also specify remains viewable (“floats”) scroll, toc_float: true.Table contents: can add table contents toc: true , also specify remains viewable (“floats”) scroll, toc_float: true.Themes: can refer pre-made themes, come Bootswatch theme library. example use cerulean. options include: journal, flatly, darkly, readable, spacelab, united, cosmo, lumen, paper, sandstone, simplex, yeti.Themes: can refer pre-made themes, come Bootswatch theme library. example use cerulean. options include: journal, flatly, darkly, readable, spacelab, united, cosmo, lumen, paper, sandstone, simplex, yeti.Highlight: Configuring changes look highlighted text (e.g. code within chunks shown). Supported styles include default, tango, pygments, kate, monochrome, espresso, zenburn, haddock, breezedark, textmate.Highlight: Configuring changes look highlighted text (e.g. code within chunks shown). Supported styles include default, tango, pygments, kate, monochrome, espresso, zenburn, haddock, breezedark, textmate.example integrate options YAML.two examples HTML outputs floating tables contents, different theme highlight styles selected:","code":"---\ntitle: \"HTML example\"\noutput:\n  html_document:\n    toc: true\n    toc_float: true\n    theme: cerulean\n    highlight: kate\n    \n---"},{"path":"reports-with-r-markdown.html","id":"dynamic-content","chapter":"1 Reports with R Markdown","heading":"1.9 Dynamic content","text":"HTML output, report content can dynamic. examples:","code":""},{"path":"reports-with-r-markdown.html","id":"tables-1","chapter":"1 Reports with R Markdown","heading":"Tables","text":"HTML report, can print data frame / tibbles content dynamic, filters scroll bars. several packages offer capability.DT package, used throughout handbook, can insert code chunk like :function datatable() print provided data frame dynamic table reader. can set rownames = FALSE simplify far left-side table. filter = \"top\" provides filter column. option() argument provide list specifications. include two: pageLength = 5 set number rows appear 5 (remaining rows can viewed paging arrows), scrollX=TRUE enables scrollbar bottom table (columns extend far right).dataset large, consider showing top X rows wrapping data frame head().","code":""},{"path":"reports-with-r-markdown.html","id":"html-widgets","chapter":"1 Reports with R Markdown","heading":"HTML widgets","text":"HTML widgets R special class R packages enable increased interactivity utilizing JavaScript libraries. can embed HTML R Markdown outputs.common examples widgets include:Plotly (used handbook page [Interative plots] page)visNetwork (used [Transmission Chains] page handbook)Leaflet (used [GIS Basics] page handbook)dygraphs (useful interactively showing time series data)DT (datatable()) (used show dynamic tables filter, sort, etc.)ggplotly() function plotly particularly easy use. See Interactive plots page.","code":""},{"path":"reports-with-r-markdown.html","id":"resources","chapter":"1 Reports with R Markdown","heading":"1.10 Resources","text":"information can found via:https://bookdown.org/yihui/rmarkdown/https://rmarkdown.rstudio.com/articles_intro.htmlA good explainer markdown vs knitr vs Rmarkdown : https://stackoverflow.com/questions/40563479/relationship--r-markdown-knitr-pandoc--bookdown","code":""},{"path":"organizing-routine-reports.html","id":"organizing-routine-reports","chapter":"2 Organizing routine reports","heading":"2 Organizing routine reports","text":"page covers reportfactory package, accompaniment using R Markdown reports.scenarios run reports routinely (daily, weekly, etc.), eases compilation multiple R Markdown files organization outputs. essence, provides “factory” can run R Markdown reports, get automatically date- time-stamped folders outputs, “light” version control.reportfactory one packages developed RECON (R Epidemics Consortium). website Github.","code":""},{"path":"organizing-routine-reports.html","id":"preparation-1","chapter":"2 Organizing routine reports","heading":"2.1 Preparation","text":"","code":""},{"path":"organizing-routine-reports.html","id":"load-packages","chapter":"2 Organizing routine reports","heading":"Load packages","text":"within RStudio, install latest version reportfactory package Github.can via pacman package p_load_current_gh() force intall latest version Github. Provide character string “reconverse/reportfactory”, specifies Github organization (reconverse) repository (reportfactory). can also use install_github() remotes package, alternative.","code":"\n# Install and load the latest version of the package from Github\npacman::p_load_current_gh(\"reconverse/reportfactory\")\n#remotes::install_github(\"reconverse/reportfactory\") # alternative"},{"path":"organizing-routine-reports.html","id":"new-factory","chapter":"2 Organizing routine reports","heading":"2.2 New factory","text":"create new factory, run function new_factory(). create new self-contained R project folder. default:factory added working directoryThe name factory R project called “new_factory.Rproj”RStudio session “move ” R projectLooking inside factory, can see sub-folders files created automatically.report_sources folder hold R Markdown scripts, generate reportsThe outputs folder hold report outputs (e.g. HTML, Word, PDF, etc.)scripts folder can used store R scripts (e.g. sourced Rmd scripts)data folder can used hold data (“raw” “clean” subfolders included).file, can use package call files sub-folders relation root folder (see [R projects] page details)gitignore file created case link R project Github repository (see [Version control collaboration Github])empty README file, use Github repositoryCAUTION: depending computer’s setting, files “.” may exist invisible.default settings, several might want adjust within new_factory() command:factory = - Provide name factory folder (default “new_factory”)path = - Designate file path new factory (default working directory)report_sources = Provide alternate name subfolder holds R Markdown scripts (default “report_sources”)outputs = Provide alternate name folder holds report outputs (default “outputs”)See ?new_factory complete list arguments.create new factory, R session transferred new R project, load reportfactory package.Now can run factory_overview() command see internal structure (folders files) factory.following “tree” factory’s folders files printed R console. Note “data” folder sub-folders “raw” “clean” data, example CSV data. also “example_report.Rmd” “report_sources” folder.","code":"\n# This will create the factory in the working directory\nnew_factory()\npacman::p_load(reportfactory)\nfactory_overview()            # print overview of the factory to console"},{"path":"organizing-routine-reports.html","id":"create-a-report","chapter":"2 Organizing routine reports","heading":"2.3 Create a report","text":"within factory R project, create R Markdown report just normally, save “report_sources” folder. See R Markdown page instructions. purposes example, added following factory:new R markdown script entitled “daily_sitrep.Rmd”, saved within “report_sources” folderData report (“linelist_cleaned.rds”), saved “clean” sub-folder within “data” folderWe can see using factory_overview() R Markdown “report_sources” folder data file “clean” data folder (highlighted):screenshot beginning R Markdown “daily_sitrep.Rmd”. can see output format set HTML, via YAML header output: html_document.simple script, commands :Load necessary packagesImport linelist data using filepath package (read page [Import export])Print summary table cases, export export() .csv filePrint epicurve, export ggsave() .png fileYou can review just list R Markdown reports “report_sources” folder command:","code":"\nlinelist <- import(here(\"data\", \"clean\", \"linelist_cleaned.rds\"))\nlist_reports()"},{"path":"organizing-routine-reports.html","id":"compile","chapter":"2 Organizing routine reports","heading":"2.4 Compile","text":"report factory, “compile” R Markdown report means .Rmd script run output produced (specified script YAML e.g. HTML, Word, PDF, etc).factory automatically create date- time-stamped folder outputs “outputs” folder.report exported files produced script (e.g. csv, png, xlsx) saved folder. addition, Rmd script saved folder, record version script.contrasts normal behavior “knitted” R Markdown, saves outputs location Rmd script. default behavior can result crowded, messy folders. factory aims improve organization one needs run reports frequently.","code":""},{"path":"organizing-routine-reports.html","id":"compile-by-name","chapter":"2 Organizing routine reports","heading":"Compile by name","text":"can compile specific report running compile_reports() providing Rmd script name (without .Rmd extension) reports =. simplicity, can skip reports = just write R Markdown name quotes, .command compile “daily_sitrep.Rmd” report, saving HTML report, .csv table .png epicurve exports date- time-stamped sub-folder specific report, within “outputs” folder.Note choose provide .Rmd extension, must correctly type extension saved file name (.rmd vs. .Rmd).Also note compile, may see several files temporarily appear “report_sources” folder - soon disappear transferred correct “outputs” folder.","code":""},{"path":"organizing-routine-reports.html","id":"compile-by-number","chapter":"2 Organizing routine reports","heading":"Compile by number","text":"can also specify Rmd script compile providing number vector numbers reports =. numbers must align order reports appear run list_reports().","code":"\n# Compile the second and fourth Rmds in the \"report_sources\" folder\ncompile_reports(reports = c(2, 4))"},{"path":"organizing-routine-reports.html","id":"compile-all","chapter":"2 Organizing routine reports","heading":"Compile all","text":"can compile R Markdown reports “report_sources” folder setting reports = argument TRUE.","code":""},{"path":"organizing-routine-reports.html","id":"compile-from-sub-folder","chapter":"2 Organizing routine reports","heading":"Compile from sub-folder","text":"can add sub-folders “report_sources” folder. run R Markdown report subfolder, simply provide name folder subfolder =. example code compile Rmd report lives sub_folder “report_sources”.can compile Rmd reports within subfolder providing subfolder name reports =, slash end, .","code":"\ncompile_reports(\n     reports = \"summary_for_partners.Rmd\",\n     subfolder = \"for_partners\")\ncompile_reports(reports = \"for_partners/\")"},{"path":"organizing-routine-reports.html","id":"parameterization","chapter":"2 Organizing routine reports","heading":"Parameterization","text":"noted page Reports R Markdown, can run reports specified parameters. can pass parameters list compile_reports() via params = argument. example, fictional report three parameters provided R Markdown reports.","code":"\ncompile_reports(\n  reports = \"daily_sitrep.Rmd\",\n  params = list(most_recent_data = TRUE,\n                region = \"NORTHERN\",\n                rates_denominator = 10000),\n  subfolder = \"regional\"\n)"},{"path":"organizing-routine-reports.html","id":"using-a-run-file","chapter":"2 Organizing routine reports","heading":"Using a “run-file”","text":"multiple reports run, consider creating R script contains compile_reports() commands. user can simply run commands R script reports compile. can save “run-file” “scripts” folder.","code":""},{"path":"organizing-routine-reports.html","id":"outputs","chapter":"2 Organizing routine reports","heading":"2.5 Outputs","text":"compiled reports times, “outputs” folder might look like (highlights added clarity):Within “outputs”, sub-folders created Rmd reportWithin , sub-folders created unique compiling\ndate- time-stamped (“2021-04-23_T11-07-36” means 23rd April 2021 11:07:36)\ncan edit date/time-stamp format. See ?compile_reports\ndate- time-stamped (“2021-04-23_T11-07-36” means 23rd April 2021 11:07:36)can edit date/time-stamp format. See ?compile_reportsWithin date/time compiled folder, report output stored (e.g. HTML, PDF, Word) along Rmd script (version control!) exported files (e.g. table.csv, epidemic_curve.png)view inside one date/time-stamped folders, “daily_sitrep” report. file path highlighted yellow emphasis.Finally, screenshot HTML report output.can use list_outputs() review list outputs.","code":""},{"path":"organizing-routine-reports.html","id":"miscellaneous","chapter":"2 Organizing routine reports","heading":"2.6 Miscellaneous","text":"","code":""},{"path":"organizing-routine-reports.html","id":"knit","chapter":"2 Organizing routine reports","heading":"Knit","text":"can still “knit” one R Markdown reports pressing “Knit” button, want. , default, outputs appear folder Rmd saved - “report_sources” folder. prior versions reportfactory, non-Rmd files “report_sources” prevent compiling, longer case. can run compile_reports() error occur.","code":""},{"path":"organizing-routine-reports.html","id":"scripts","chapter":"2 Organizing routine reports","heading":"Scripts","text":"encourage utilize “scripts” folder store “runfiles” .R scripts sourced .Rmd scripts. See page R Markdown tips structure code across several files.","code":""},{"path":"organizing-routine-reports.html","id":"extras","chapter":"2 Organizing routine reports","heading":"Extras","text":"reportfactory, can use function list_deps() list packages required across reports entire factory.reportfactory, can use function list_deps() list packages required across reports entire factory.accompanying package development called rfextras offers helper functions assist building reports, :\nload_scripts() - sources/loads .R scripts given folder (“scripts” folder default)\nfind_latest() - finds latest version file (e.g. latest dataset)\naccompanying package development called rfextras offers helper functions assist building reports, :load_scripts() - sources/loads .R scripts given folder (“scripts” folder default)find_latest() - finds latest version file (e.g. latest dataset)","code":""},{"path":"organizing-routine-reports.html","id":"resources-1","chapter":"2 Organizing routine reports","heading":"2.7 Resources","text":"See reportfactory package’s Github pageSee rfextras package’s Github page","code":""},{"path":"dashboards-with-r-markdown.html","id":"dashboards-with-r-markdown","chapter":"3 Dashboards with R Markdown","heading":"3 Dashboards with R Markdown","text":"page cover basic use flexdashboard package. package allows easily format R Markdown output dashboard panels pages. dashboard content can text, static figures/tables interactive graphics.Advantages flexdashboard:requires minimal non-standard R coding - little practice can quickly create dashboardThe dashboard can usually emailed colleagues self-contained HTML file - server requiredYou can combine flexdashboard shiny, ggplotly, “html widgets” add interactivityDisadvantages flexdashboard:Less customization compared using shiny alone create dashboardVery comprehensive tutorials using flexdashboard informed page can found Resources section. describe core features give example building dashboard explore outbreak, using case linelist data.","code":""},{"path":"dashboards-with-r-markdown.html","id":"preparation-2","chapter":"3 Dashboards with R Markdown","heading":"3.1 Preparation","text":"","code":""},{"path":"dashboards-with-r-markdown.html","id":"load-packages-1","chapter":"3 Dashboards with R Markdown","heading":"Load packages","text":"handbook emphasize p_load() pacman, installs package necessary loads use. can also load installed packages library() base R. See page [R basics] information R packages.","code":"\npacman::p_load(\n  rio,             # data import/export     \n  here,            # locate files\n  tidyverse,       # data management and visualization\n  flexdashboard,   # dashboard versions of R Markdown reports\n  shiny,           # interactive figures\n  plotly           # interactive figures\n)"},{"path":"dashboards-with-r-markdown.html","id":"import-data","chapter":"3 Dashboards with R Markdown","heading":"Import data","text":"import dataset cases simulated Ebola epidemic. want follow along, click download “clean” linelist (.rds file). Import data import() function rio package (handles many file types like .xlsx, .csv, .rds - see [Import export] page details).first 50 rows linelist displayed .","code":"\n# import the linelist\nlinelist <- import(\"linelist_cleaned.rds\")"},{"path":"dashboards-with-r-markdown.html","id":"create-new-r-markdown","chapter":"3 Dashboards with R Markdown","heading":"3.2 Create new R Markdown","text":"installed package, create new R Markdown file clicking File > New file > R Markdown.window opens, select “Template” select “Flex Dashboard” template. prompted name document. page’s example, name R Markdown “outbreak_dashboard.Rmd”.","code":""},{"path":"dashboards-with-r-markdown.html","id":"the-script","chapter":"3 Dashboards with R Markdown","heading":"3.3 The script","text":"script R Markdown script, components organization described page Reports R Markdown. briefly re-visit highlight differences R Markdown output formats.","code":""},{"path":"dashboards-with-r-markdown.html","id":"yaml","chapter":"3 Dashboards with R Markdown","heading":"YAML","text":"top script “YAML” header. must begin three dashes --- must close three dashes ---. YAML parameters comes key:value pairs. indentation placement colons YAML important - key:value pairs separated colons (equals signs!).YAML begin metadata document. order primary YAML parameters (indented) matter. example:can use R code YAML values putting like -line code (preceeded r within backticks) also within quotes (see Date).required YAML parameter output:, specifies type file produced (e.g. html_document, pdf_document, word_document, powerpoint_presentation). flexdashboard parameter value bit confusing - must set output:flexdashboard::flex_dashboard. Note single double colons, underscore. YAML output parameter often followed additional colon indented sub-parameters (see orientation: vertical_layout: parameters ).shown , indentations (2 spaces) used sub-parameters. case, forget put additional colon primary, like key:value:.appropriate, logical values given YAML lowercase (true, false, null). colon part value (e.g. title) put value quotes. See examples sections .","code":"\ntitle: \"My document\"\nauthor: \"Me\"\ndate: \"`r Sys.Date()`\"\ntitle: \"My dashboard\"\nauthor: \"Me\"\ndate: \"`r Sys.Date()`\"\noutput:\n  flexdashboard::flex_dashboard:\n    orientation: rows\n    vertical_layout: scroll"},{"path":"dashboards-with-r-markdown.html","id":"code-chunks-1","chapter":"3 Dashboards with R Markdown","heading":"Code chunks","text":"R Markdown script can contain multiple code “chunks” - areas script can write multiple-line R code function just like mini R scripts.Code chunks created three back-ticks curly brackets lowercase “r” within. chunk closed three backticks. can create new chunk typing , using keyboard shortcut “Ctrl + Alt + ” (Cmd + Shift + r Mac), clicking green ‘insert new code chunk’ icon top script editor. Many examples given .","code":""},{"path":"dashboards-with-r-markdown.html","id":"narrative-text","chapter":"3 Dashboards with R Markdown","heading":"Narrative text","text":"Outside R code “chunk”, can write narrative text. described page Reports R Markdown, can italicize text surrounding one asterisk (*), bold surrounding two asterisks (**). Recall bullets numbering schemes sensitive newlines, indentation, finishing line two spaces.can also insert -line R code text described Reports R Markdown page, surrounding code backticks starting command “r”: ` 1+1`(see example date ).","code":""},{"path":"dashboards-with-r-markdown.html","id":"headings","chapter":"3 Dashboards with R Markdown","heading":"Headings","text":"Different heading levels established different numbers hash symbols, described Reports R Markdown page.flexdashboard, primary heading (#) creates “page” dashboard. Second-level headings (##) create column row depending orientation: parameter (see details ). Third-level headings (###) create panels plots, charts, tables, text, etc.","code":"# First-level heading (page)\n\n## Second level heading (row or column)  \n\n### Third-level heading (pane for plot, chart, etc.)"},{"path":"dashboards-with-r-markdown.html","id":"section-attributes","chapter":"3 Dashboards with R Markdown","heading":"3.4 Section attributes","text":"normal R markdown, can specify attributes apply parts dashboard including key=value options heading, within curly brackets { }. example, typical HTML R Markdown report might organize sub-headings tabs ## heading {.tabset}.Note attributes written heading text portion script. different knitr options inserted within top R code chunks, .height =.Section attributes specific flexdashboard include:{data-orientation=} Set either rows columns. dashboard multiple pages, add attribute page indicate orientation (explained layout section).{data-width=} {data-height=} set relative size charts, columns, rows laid dimension (horizontal vertical). Absolute sizes adjusted best fill space display device thanks flexbox engine.\nHeight charts also depends whether set YAML parameter vertical_layout: fill vertical_layout: scroll. set scroll, figure height reflect traditional fig.height = option R code chunk.\nSee complete size documentation flexdashboard website\nHeight charts also depends whether set YAML parameter vertical_layout: fill vertical_layout: scroll. set scroll, figure height reflect traditional fig.height = option R code chunk.See complete size documentation flexdashboard website{.hidden} Use exclude specific page navigation bar{data-navbar=} Use page-level heading nest within navigation bar drop-menu. Provide name (quotes) drop-menu. See example .","code":""},{"path":"dashboards-with-r-markdown.html","id":"layout","chapter":"3 Dashboards with R Markdown","heading":"3.5 Layout","text":"Adjust layout dashboard following ways:Add pages, columns/rows, charts R Markdown headings (e.g. #, ##, ###)Adjust YAML parameter orientation: either rows columnsSpecify whether layout fills browser allows scrollingAdd tabs particular section heading","code":""},{"path":"dashboards-with-r-markdown.html","id":"pages","chapter":"3 Dashboards with R Markdown","heading":"Pages","text":"First-level headings (#) R Markdown represent “pages” dashboard. default, pages appear navigation bar along top dashboard.can group pages “menu” within top navigation bar adding attribute {data-navmenu=} page heading. careful - include spaces around equals sign otherwise work!script produces:can also convert page column “sidebar” left side dashboard adding {.sidebar} attribute. can hold text (viewable page), integrated shiny interactivity can useful hold user-input controls sliders drop-menus.script produces:","code":""},{"path":"dashboards-with-r-markdown.html","id":"orientation","chapter":"3 Dashboards with R Markdown","heading":"Orientation","text":"Set orientation: yaml parameter indicate second-level (##) R Markdown headings interpreted - either orientation: columns orientation: rows.Second-level headings (##) interpreted new columns rows based orientation setting.set orientation: columns, second-level headers create new columns dashboard. dashboard one page, containing two columns, total three panels. can adjust relative width columns {data-width=} shown .script produces:set orientation: rows, second-level headers create new rows instead columns. script , orientation: rows second-level headings produce rows instead columns. can adjust relative height rows {data-height=} shown .script produces:dashboard multiple pages, can designate orientation specific page adding {data-orientation=} attribute header page (specify either rows columns without quotes).","code":""},{"path":"dashboards-with-r-markdown.html","id":"tabs","chapter":"3 Dashboards with R Markdown","heading":"Tabs","text":"can divide content tabs {.tabset} attribute, HTML R Markdown outputs.Simply add attribute desired heading. Sub-headings heading displayed tabs. example, example script column 2 right (##) modified epidemic curve table panes (###) displayed tabs.can rows orientation rows.script produces:","code":""},{"path":"dashboards-with-r-markdown.html","id":"adding-content","chapter":"3 Dashboards with R Markdown","heading":"3.6 Adding content","text":"Let’s begin build dashboard. simple dashboard 1 page, 2 columns, 4 panels. build panels piece--piece demonstration.can easily include standard R outputs text, ggplots, tables (see [Tables presentation] page). Simply code within R code chunk R Markdown script.Note: can download finished Rmd script HTML dashboard output - see [Download handbook data] page.","code":""},{"path":"dashboards-with-r-markdown.html","id":"text-1","chapter":"3 Dashboards with R Markdown","heading":"Text","text":"can type Markdown text include -line code R Markdown output. See Reports R Markdown page details.dashboard include summary text panel includes dynamic text showing latest hospitalisation date number cases reported outbreak.","code":""},{"path":"dashboards-with-r-markdown.html","id":"tables-2","chapter":"3 Dashboards with R Markdown","heading":"Tables","text":"can include R code chunks print outputs tables. output look best respond window size use kable() function knitr display tables. flextable functions may produce tables shortened / cut-.example, feed linelist() count() command produce summary table cases hospital. Ultimately, table piped knitr::kable() result scroll bar right. can read customizing table kable() kableExtra .script produces:want show dynamic table allows user filter, sort, /click “pages” data frame, use package DT ’s function datatable(), code .example code , data frame linelist printed. can set rownames = FALSE conserve horizontal space, filter = \"top\" filters top every column. list specifications can provided options =. , set pageLength = 5 rows appear scrollX = user can use scroll bar bottom scroll horizontally. argument class = 'white-space: nowrap' ensures row one line (multiple lines). can read possible arguments values entering ?datatable","code":"\nDT::datatable(linelist, \n              rownames = FALSE, \n              options = list(pageLength = 5, scrollX = TRUE), \n              class = 'white-space: nowrap' )"},{"path":"dashboards-with-r-markdown.html","id":"plots","chapter":"3 Dashboards with R Markdown","heading":"Plots","text":"can print plots dashboard pane R script. example, use incidence2 package create “epicurve” age group two simple commands (see [Epidemic curves] page). However, use ggplot() print plot manner.script produces:","code":""},{"path":"dashboards-with-r-markdown.html","id":"interactive-plots","chapter":"3 Dashboards with R Markdown","heading":"Interactive plots","text":"can also pass standard ggplot plot object ggplotly() plotly package (see Interactive plots page). make plot interactive, allow reader “zoom ”, show--hover value every data point (scenario number cases per week age group curve).looks like dashboard (gif). interactive functionality still work even email dashboard static file (online server).","code":"\nage_outbreak <- incidence(linelist, date_onset, \"week\", groups = age_cat)\nplot(age_outbreak, fill = age_cat, col_pal = muted, title = \"\") %>% \n  plotly::ggplotly()"},{"path":"dashboards-with-r-markdown.html","id":"html-widgets-1","chapter":"3 Dashboards with R Markdown","heading":"HTML widgets","text":"HTML widgets R special class R packages increases interactivity utilizing JavaScript libraries. can embed R Markdown outputs (flexdashboard) Shiny dashboards.common examples widgets include:Plotly (used handbook page [Interative plots] page)visNetwork (used [Transmission Chains] page handbook)Leaflet (used [GIS Basics] page handbook)dygraphs (useful interactively showing time series data)DT (datatable()) (used show dynamic tables filter, sort, etc.)demonstrate adding epidemic transmission chain uses visNetwork dashboard. script shows new code added “Column 2” section R Markdown script. can find code [Transmission chains] page handbook.script produces:","code":""},{"path":"dashboards-with-r-markdown.html","id":"code-organization","chapter":"3 Dashboards with R Markdown","heading":"3.7 Code organization","text":"may elect code within R Markdown flexdashboard script. Alternatively, clean concise dashboard script may choose call upon code/figures hosted created external R scripts. described greater detail Reports R Markdown page.","code":""},{"path":"dashboards-with-r-markdown.html","id":"shiny","chapter":"3 Dashboards with R Markdown","heading":"3.8 Shiny","text":"Integrating R package shiny can make dashboards even reactive user input. example, user select jurisdiction, date range, panels react choice (e.g. filter data displayed). embed shiny reactivity flexdashboard, need make changes flexdashboard R Markdown script.can use shiny produce apps/dashboards without flexdashboard . handbook page Dashboards Shiny gives overview approach, including primers shiny syntax, app file structure, options sharing/publishing (including free server options). syntax general tips translate flexdashboard context well.Embedding shiny flexdashboard however, fundamental change flexdashboard. longer produce HTML output can send email anyone open view. Instead, “app”. “Knit” button top script replaced “Run document” icon, open instance interactive dashboard locally computer.Sharing dashboard now require either:Send Rmd script viewer, open R computer, run app, orThe app/dashboard hosted server accessible viewerThus, benefits integrating shiny, also complications. easy sharing email priority don’t need shiny reactive capabilities, consider reduced interactivity offered ggplotly() demonstrated .give simple example using “outbreak_dashboard.Rmd” . Extensive documentation integrating Shiny flexdashboard available online .","code":""},{"path":"dashboards-with-r-markdown.html","id":"settings","chapter":"3 Dashboards with R Markdown","heading":"Settings","text":"Enable shiny flexdashboard adding YAML parameter runtime: shiny indentation level output:, :also convenient enable “side bar” hold shiny input widgets collect information user. explained , create column indicate {.sidebar} option create side bar left side. can add text R chunks containing shiny input commands within column.app/dashboard hosted server may multiple simultaneous users, name first R code chunk global. Include commands import/load data chunk. special named chunk treated differently, data imported within imported (continuously) available users. improves start-speed app.","code":"---\ntitle: \"Outbreak dashboard (Shiny demo)\"\noutput: \n  flexdashboard::flex_dashboard:\n    orientation: columns\n    vertical_layout: fill\nruntime: shiny\n---"},{"path":"dashboards-with-r-markdown.html","id":"worked-example","chapter":"3 Dashboards with R Markdown","heading":"Worked example","text":"adapt flexdashboard script “outbreak_dashboard.Rmd” include shiny. add capability user select hospital drop-menu, epidemic curve reflect cases hospital, dynamic plot title. following:Add runtime: shiny YAMLRe-name setup chunk globalCreate sidebar containing:\nCode create vector unique hospital names\nselectInput() command (shiny drop-menu) choice hospital names. selection saved hospital_choice, can referenced later code input$hospital_choice\nCode create vector unique hospital namesA selectInput() command (shiny drop-menu) choice hospital names. selection saved hospital_choice, can referenced later code input$hospital_choiceThe epidemic curve code (column 2) wrapped within renderPlot({ }), including:\nfilter dataset restricting column hospital current value input$hospital_choice\ndynamic plot title incorporates input$hospital_choice\nfilter dataset restricting column hospital current value input$hospital_choiceA dynamic plot title incorporates input$hospital_choiceNote code referencing input$ value must within render({}) function (reactive).top script, including YAML, global chunk, sidebar:Column 2, reactive epicurve plot:dashboard:","code":""},{"path":"dashboards-with-r-markdown.html","id":"other-examples","chapter":"3 Dashboards with R Markdown","heading":"Other examples","text":"read health-related example Shiny-flexdashboard using shiny interactivity leaflet mapping widget, see chapter online book Geospatial Health Data: Modeling Visualization R-INLA Shiny.","code":""},{"path":"dashboards-with-r-markdown.html","id":"sharing","chapter":"3 Dashboards with R Markdown","heading":"3.9 Sharing","text":"Dashboards contain Shiny elements output HTML file (.html), can emailed (size permits). useful, can send “dashboard” report set server host website.embedded shiny, able send output email, can send script R user, host dashboard server explained .","code":""},{"path":"dashboards-with-r-markdown.html","id":"resources-2","chapter":"3 Dashboards with R Markdown","heading":"3.10 Resources","text":"Excellent tutorials informed page can found . review , likely within hour can dashboard.https://bookdown.org/yihui/rmarkdown/dashboards.htmlhttps://rmarkdown.rstudio.com/flexdashboard/https://rmarkdown.rstudio.com/flexdashboard/using.htmlhttps://rmarkdown.rstudio.com/flexdashboard/examples.html","code":""},{"path":"dashboards-with-shiny.html","id":"dashboards-with-shiny","chapter":"4 Dashboards with Shiny","heading":"4 Dashboards with Shiny","text":"Dashboards often great way share results analyses others. Producing dashboard shiny requires relatively advanced knowledge R language, offers incredible customization possibilities.recommended someone learning dashboards shiny good knowledge data transformation visualisation, comfortable debugging code, writing functions. Working dashboards intuitive ’re starting, difficult understand times, great skill learn gets much easier practice!page give short overview make dashboards shiny extensions.\nalternative method making dashboards faster, easier, perhaps less customizeable, see page flextable (Dashboards R Markdown).","code":""},{"path":"dashboards-with-shiny.html","id":"preparation-3","chapter":"4 Dashboards with Shiny","heading":"4.1 Preparation","text":"","code":""},{"path":"dashboards-with-shiny.html","id":"load-packages-2","chapter":"4 Dashboards with Shiny","heading":"Load packages","text":"handbook emphasize p_load() pacman, installs package necessary loads use. can also load installed packages library() base R. See page [R basics] information R packages.begin installing shiny R package:","code":"\npacman::p_load(shiny)"},{"path":"dashboards-with-shiny.html","id":"import-data-1","chapter":"4 Dashboards with Shiny","heading":"Import data","text":"like follow-along page, see section Download handbook data. links download R scripts data files produce final Shiny app.try re-construct app using files, please aware R project folder structure created course demonstration (e.g. folders “data” “funcs”).","code":""},{"path":"dashboards-with-shiny.html","id":"the-structure-of-a-shiny-app","chapter":"4 Dashboards with Shiny","heading":"4.2 The structure of a shiny app","text":"","code":""},{"path":"dashboards-with-shiny.html","id":"basic-file-structures","chapter":"4 Dashboards with Shiny","heading":"Basic file structures","text":"understand shiny, first need understand file structure app works! make brand new directory start. can actually made easier choosing New project Rstudio, choosing Shiny Web Application. create basic structure shiny app .opening project, ’ll notice .R file already present called app.R. essential one two basic file structures:One file called app.R, orTwo files, one called ui.R server.RIn page, use first approach one file called app.R. example script:open file, ’ll notice two objects defined - one called ui another called server. objects must defined every shiny app central structure app ! fact, difference two file structures described structure 1, ui server defined one file, whereas structure 2 defined separate files. Note: can also (larger app) .R files structure can source() app.","code":"\n# an example of app.R\n\nlibrary(shiny)\n\nui <- fluidPage(\n\n    # Application title\n    titlePanel(\"My app\"),\n\n    # Sidebar with a slider input widget\n    sidebarLayout(\n        sidebarPanel(\n            sliderInput(\"input_1\")\n        ),\n\n        # Show a plot \n        mainPanel(\n           plotOutput(\"my_plot\")\n        )\n    )\n)\n\n# Define server logic required to draw a histogram\nserver <- function(input, output) {\n     \n     plot_1 <- reactive({\n          plot_func(param = input_1)\n     })\n     \n    output$my_plot <- renderPlot({\n       plot_1()\n    })\n}\n\n\n# Run the application \nshinyApp(ui = ui, server = server)"},{"path":"dashboards-with-shiny.html","id":"the-server-and-the-ui","chapter":"4 Dashboards with Shiny","heading":"The server and the ui","text":"next need understand server ui objects actually . Put simply, two objects interacting whenever user interacts shiny app.UI element shiny app , basic level, R code creates HTML interface. means everything displayed UI app. generally includes:“Widgets” - dropdown menus, check boxes, sliders, etc can interacted userPlots, tables, etc - outputs generated R codeNavigation aspects app - tabs, panes, etc.Generic text, hyperlinks, etcHTML CSS elements (addressed later)important thing understand UI receives inputs user displays outputs server. active code running ui time - changes seen UI passed server (less). make plots, downloads, etc serverThe server shiny app code run app starts . way works little confusing. server function effectively react user interfacing UI, run chunks code response. things change server, passed back ui, changes can seen. Importantly, code server executed non-consecutively (’s best think way). Basically, whenever ui input affects chunk code server, run automatically, output produced displayed.probably sounds abstract now, ’ll dive examples get clear idea actually works.","code":""},{"path":"dashboards-with-shiny.html","id":"before-you-start-to-build-an-app","chapter":"4 Dashboards with Shiny","heading":"Before you start to build an app","text":"begin build app, immensely helpful know want build. Since UI written code, can’t really visualise ’re building unless aiming something specific. reason, immensely helpful look lots examples shiny apps get idea can make - even better can look source code behind apps! great resources :Rstudio app galleryOnce get idea possible, ’s also helpful map want look like - can paper drawing software (PowerPoint, MS paint, etc.). ’s helpful start simple first app! ’s also shame using code find online nice app template work - much easier building something scratch!","code":""},{"path":"dashboards-with-shiny.html","id":"building-a-ui","chapter":"4 Dashboards with Shiny","heading":"4.3 Building a UI","text":"building app, easier work UI first can see ’re making, risk app failing server errors. mentioned previously, often good use template working UI. number standard layouts can used shiny available base shiny package, ’s worth noting also number package extensions shinydashboard. ’ll use example base shiny start .shiny UI generally defined series nested functions, following orderA function defining general layout (basic fluidPage(), available)Panels within layout :\nsidebar (sidebarPanel())\n“main” panel (mainPanel())\ntab (tabPanel())\ngeneric “column” (column())\nsidebar (sidebarPanel())“main” panel (mainPanel())tab (tabPanel())generic “column” (column())Widgets outputs - can confer inputs server (widgets) outputs server (outputs)\nWidgets generally styled xxxInput() e.g. selectInput()\nOutputs generally styled xxxOutput() e.g. plotOutput()\nWidgets generally styled xxxInput() e.g. selectInput()Outputs generally styled xxxOutput() e.g. plotOutput()’s worth stating can’t visualised easily abstract way, ’s best look example! Lets consider making basic app visualises malaria facility count data district. data lot differnet parameters, great end user apply filters see data age group/district see fit! can use simple shiny layout start - sidebar layout. layout widgets placed sidebar left, plot placed right.Lets plan app - can start selector lets us choose district want visualise data, another let us visualise age group interested . ’ll aim use filters show epicurve reflects parameters. need:Two dropdown menus let us choose district want, age group ’re interested .area can show resulting epicurve.might look something like :app.R run UI code (active code server portion app.R) layout appears looking like - note plot server render , inputs working!good opportunity discuss widgets work - note widget accepting inputId, label, series options specific widget type. inputId extremely important - IDs used pass information UI server. reason, must unique. make effort name something sensible, specific interacting cases larger apps.read documentation carefully full details widgets . Widgets pass specific types data server depending widget type, needs fully understood. example, selectInput() pass character type server:select Spring first widget , pass character object \"Spring\" server.select two items dropdown menu, come character vector (e.g. c(\"Spring\", \"Bolo\")).widgets pass different types object server! example:numericInput() pass numeric type object servercheckboxInput() pass logical type object server (TRUE FALSE)’s also worth noting named vector used age data . many widgets, using named vector choices display names vector display choices, pass selected value vector server. .e. someone can select “15+” drop-menu, UI pass \"malaria_rdt_15\" server - happens name column ’re interested !loads widgets can use lots things app. Widgets also allow upload files app, download outputs. also excellent shiny extensions give access widgets base shiny - shinyWidgets package great example . look examples can look following links:base shiny widget galleryshinyWidgets gallery","code":"\nlibrary(shiny)\n\nui <- fluidPage(\n\n  titlePanel(\"Malaria facility visualisation app\"),\n\n  sidebarLayout(\n\n    sidebarPanel(\n         # selector for district\n         selectInput(\n              inputId = \"select_district\",\n              label = \"Select district\",\n              choices = c(\n                   \"All\",\n                   \"Spring\",\n                   \"Bolo\",\n                   \"Dingo\",\n                   \"Barnard\"\n              ),\n              selected = \"All\",\n              multiple = TRUE\n         ),\n         # selector for age group\n         selectInput(\n              inputId = \"select_agegroup\",\n              label = \"Select age group\",\n              choices = c(\n                   \"All ages\" = \"malaria_tot\",\n                   \"0-4 yrs\" = \"malaria_rdt_0-4\",\n                   \"5-14 yrs\" = \"malaria_rdt_5-14\",\n                   \"15+ yrs\" = \"malaria_rdt_15\"\n              ), \n              selected = \"All\",\n              multiple = FALSE\n         )\n\n    ),\n\n    mainPanel(\n      # epicurve goes here\n      plotOutput(\"malaria_epicurve\")\n    )\n    \n  )\n)"},{"path":"dashboards-with-shiny.html","id":"loading-data-into-our-app","chapter":"4 Dashboards with Shiny","heading":"4.4 Loading data into our app","text":"next step app development getting server running. however, need get data app, figure calculations ’re going . shiny app straightforward debug, ’s often clear errors coming , ’s ideal get data processing visualisation code working start making server .given want make app shows epi curves change based user input, think code need run normal R script. ’ll need :Load packagesLoad dataTransform dataDevelop function visualise data based user inputsThis list pretty straightforward, shouldn’t hard . ’s now important think parts process need done parts need run response user inputs. shiny apps generally run code running, performed . help app’s performance much code can moved section. example, need load data/packages basic transformations , can put code outside server. means thing ’ll need server code visualise data. Lets develop componenets script first. However, since ’re visualising data function, can also put code function outside server function environment app runs!First lets load data. Since ’re working new project, want make clean, can create new directory called data, add malaria data . can run code testing script eventually delete clean structure app.easier work data use tidy data standards, also transform longer data format, age group column, cases another column. can easily using ’ve learned [Pivoting data] page.’ve finished preparing data! crosses items 1, 2, 3 list things develop “testing R script”. last, difficult task building function produce epicurve based user defined parameters. mentioned previously, ’s highly recommended anyone learning shiny first look section functional programming (Writing functions) understand works!defining function, might hard think parameters want include. functional programming shiny, every relevent parameter generally widget associated , thinking usually quite easy! example current app, want able filter district, widget , can add district parameter reflect . don’t app functionality filter facility (now), don’t need add parameter. Lets start making function three parameters:core datasetThe district choiceThe age group choiceWe won’t go great detail function, ’s relatively simple works. One thing note however, handle errors returning NULL otherwise give error. shiny server produces NULL object instead plot object, nothing shown ui! important, otherwise errors often cause app stop working.Another thing note use %% operator evaluating district input. mentioned , arrive character vector multiple values, using %% flexible say, ==.Let’s test function!function working, now understand going fit shiny app. mentioned concept startup code , lets look can actually incorporate structure app. two ways can !Put code app.R file start script (UI), orCreate new file app’s directory called global.R, put startup code file.’s worth noting point ’s generally easier, especially bigger apps, use second file structure, lets separate file structure simple way. Lets fully develop global.R script now. look like:Easy! One great feature shiny understand files named app.R, server.R, ui.R, global.R , need connect via code. just code global.R directory run start app!.also note improve app’s organisation moved plotting function file - especially helpful apps become larger. , make another directory called funcs, put function file called plot_epicurve.R. read function via following command global.RNote always specify local = TRUE shiny apps, since affect sourcing /app published server.","code":"\npacman::p_load(\"tidyverse\", \"lubridate\")\n\n# read data\nmalaria_data <- rio::import(here::here(\"data\", \"malaria_facility_count_data.rds\")) %>% \n  as_tibble()\n\nprint(malaria_data)## # A tibble: 3,038 × 10\n##    location_name data_date  submitted_date Province District `malaria_rdt_0-4` `malaria_rdt_5-14` malaria_rdt_15\n##    <chr>         <date>     <date>         <chr>    <chr>                <int>              <int>          <int>\n##  1 Facility 1    2020-08-11 2020-08-12     North    Spring                  11                 12             23\n##  2 Facility 2    2020-08-11 2020-08-12     North    Bolo                    11                 10              5\n##  3 Facility 3    2020-08-11 2020-08-12     North    Dingo                    8                  5              5\n##  4 Facility 4    2020-08-11 2020-08-12     North    Bolo                    16                 16             17\n##  5 Facility 5    2020-08-11 2020-08-12     North    Bolo                     9                  2              6\n##  6 Facility 6    2020-08-11 2020-08-12     North    Dingo                    3                  1              4\n##  7 Facility 6    2020-08-10 2020-08-12     North    Dingo                    4                  0              3\n##  8 Facility 5    2020-08-10 2020-08-12     North    Bolo                    15                 14             13\n##  9 Facility 5    2020-08-09 2020-08-12     North    Bolo                    11                 11             13\n## 10 Facility 5    2020-08-08 2020-08-12     North    Bolo                    19                 15             15\n## # ℹ 3,028 more rows\n## # ℹ 2 more variables: malaria_tot <int>, newid <int>\nmalaria_data <- malaria_data %>%\n  select(-newid) %>%\n  pivot_longer(cols = starts_with(\"malaria_\"), names_to = \"age_group\", values_to = \"cases_reported\")\n\nprint(malaria_data)## # A tibble: 12,152 × 7\n##    location_name data_date  submitted_date Province District age_group        cases_reported\n##    <chr>         <date>     <date>         <chr>    <chr>    <chr>                     <int>\n##  1 Facility 1    2020-08-11 2020-08-12     North    Spring   malaria_rdt_0-4              11\n##  2 Facility 1    2020-08-11 2020-08-12     North    Spring   malaria_rdt_5-14             12\n##  3 Facility 1    2020-08-11 2020-08-12     North    Spring   malaria_rdt_15               23\n##  4 Facility 1    2020-08-11 2020-08-12     North    Spring   malaria_tot                  46\n##  5 Facility 2    2020-08-11 2020-08-12     North    Bolo     malaria_rdt_0-4              11\n##  6 Facility 2    2020-08-11 2020-08-12     North    Bolo     malaria_rdt_5-14             10\n##  7 Facility 2    2020-08-11 2020-08-12     North    Bolo     malaria_rdt_15                5\n##  8 Facility 2    2020-08-11 2020-08-12     North    Bolo     malaria_tot                  26\n##  9 Facility 3    2020-08-11 2020-08-12     North    Dingo    malaria_rdt_0-4               8\n## 10 Facility 3    2020-08-11 2020-08-12     North    Dingo    malaria_rdt_5-14              5\n## # ℹ 12,142 more rows\nplot_epicurve <- function(data, district = \"All\", agegroup = \"malaria_tot\") {\n  \n  if (!(\"All\" %in% district)) {\n    data <- data %>%\n      filter(District %in% district)\n    \n    plot_title_district <- stringr::str_glue(\"{paste0(district, collapse = ', ')} districts\")\n    \n  } else {\n    \n    plot_title_district <- \"all districts\"\n    \n  }\n  \n  # if no remaining data, return NULL\n  if (nrow(data) == 0) {\n    \n    return(NULL)\n  }\n  \n  data <- data %>%\n    filter(age_group == agegroup)\n  \n  \n  # if no remaining data, return NULL\n  if (nrow(data) == 0) {\n    \n    return(NULL)\n  }\n  \n  if (agegroup == \"malaria_tot\") {\n      agegroup_title <- \"All ages\"\n  } else {\n    agegroup_title <- stringr::str_glue(\"{str_remove(agegroup, 'malaria_rdt')} years\")\n  }\n  \n  \n  ggplot(data, aes(x = data_date, y = cases_reported)) +\n    geom_col(width = 1, fill = \"darkred\") +\n    theme_minimal() +\n    labs(\n      x = \"date\",\n      y = \"number of cases\",\n      title = stringr::str_glue(\"Malaria cases - {plot_title_district}\"),\n      subtitle = agegroup_title\n    )\n  \n  \n  \n}\nplot_epicurve(malaria_data, district = \"Bolo\", agegroup = \"malaria_rdt_0-4\")\n# global.R script\n\npacman::p_load(\"tidyverse\", \"lubridate\", \"shiny\")\n\n# read data\nmalaria_data <- rio::import(here::here(\"data\", \"malaria_facility_count_data.rds\")) %>% \n  as_tibble()\n\n# clean data and pivot longer\nmalaria_data <- malaria_data %>%\n  select(-newid) %>%\n  pivot_longer(cols = starts_with(\"malaria_\"), names_to = \"age_group\", values_to = \"cases_reported\")\n\n\n# define plotting function\nplot_epicurve <- function(data, district = \"All\", agegroup = \"malaria_tot\") {\n  \n  # create plot title\n  if (!(\"All\" %in% district)) {            \n    data <- data %>%\n      filter(District %in% district)\n    \n    plot_title_district <- stringr::str_glue(\"{paste0(district, collapse = ', ')} districts\")\n    \n  } else {\n    \n    plot_title_district <- \"all districts\"\n    \n  }\n  \n  # if no remaining data, return NULL\n  if (nrow(data) == 0) {\n    \n    return(NULL)\n  }\n  \n  # filter to age group\n  data <- data %>%\n    filter(age_group == agegroup)\n  \n  \n  # if no remaining data, return NULL\n  if (nrow(data) == 0) {\n    \n    return(NULL)\n  }\n  \n  if (agegroup == \"malaria_tot\") {\n      agegroup_title <- \"All ages\"\n  } else {\n    agegroup_title <- stringr::str_glue(\"{str_remove(agegroup, 'malaria_rdt')} years\")\n  }\n  \n  \n  ggplot(data, aes(x = data_date, y = cases_reported)) +\n    geom_col(width = 1, fill = \"darkred\") +\n    theme_minimal() +\n    labs(\n      x = \"date\",\n      y = \"number of cases\",\n      title = stringr::str_glue(\"Malaria cases - {plot_title_district}\"),\n      subtitle = agegroup_title\n    )\n  \n  \n  \n}\nsource(here(\"funcs\", \"plot_epicurve.R\"), local = TRUE)"},{"path":"dashboards-with-shiny.html","id":"developing-an-app-server","chapter":"4 Dashboards with Shiny","heading":"4.5 Developing an app server","text":"Now code, just develop server. final piece app, probably hardest understand. server large R function, helpful think series smaller functions, tasks app can perform. ’s important understand functions executed linear order. order , ’s fully necessary understand starting shiny. basic level, tasks functions activate change user inputs affects , unless developer set behave differently. , quite abstract, lets first go three basic types shiny objectsReactive sources - another term user inputs. shiny server access outputs UI widgets ’ve programmed. Every time values changed, passed server.Reactive sources - another term user inputs. shiny server access outputs UI widgets ’ve programmed. Every time values changed, passed server.Reactive conductors - objects exist inside shiny server. don’t actually need simple apps, produce objects can seen inside server, used operations. generally depend reactive sources.Reactive conductors - objects exist inside shiny server. don’t actually need simple apps, produce objects can seen inside server, used operations. generally depend reactive sources.Endpoints - outputs passed server UI. example, epi curve producing.Endpoints - outputs passed server UI. example, epi curve producing.mind lets construct server step--step. ’ll show UI code just reference:code UI :Two inputs:\nDistrict selector (inputId select_district)\nAge group selector (inputId select_agegroup)\nDistrict selector (inputId select_district)Age group selector (inputId select_agegroup)One output:\nepicurve (outputId malaria_epicurve)\nepicurve (outputId malaria_epicurve)stated previously, unique names assigned inputs outputs crucial. must unique used pass information ui server. server, access inputs via syntax input$inputID outputs passed ui syntax output$output_name Lets look example, hard understand otherwise!server simple app like actually quite straightforward! ’ll notice server function three parameters - input, output, session - isn’t important understand now, important stick setup! server one task - renders plot based function made earlier, inputs server. Notice names input output objects correspond exactly ui.understand basics server reacts user inputs, note output know (underlying package) inputs change, rerun function create plot every time change. Note also use renderPlot() function - one family class-specific functions pass objects ui output. number functions behave similarly, need ensure function used matches class object ’re passing ui! example:renderText() - send text uirenderDataTable - send interactive table ui.Remember also need match output function used ui - renderPlot() paired plotOutput(), renderText() matched textOutput().’ve finally made functioning app! can run pressing Run App button top right script window Rstudio. note can choose run app default browser (rather Rstudio) accurately reflect app look like users.fun note R console, app “listening”! Talk reactivity!","code":"\nui <- fluidPage(\n\n  titlePanel(\"Malaria facility visualisation app\"),\n\n  sidebarLayout(\n\n    sidebarPanel(\n         # selector for district\n         selectInput(\n              inputId = \"select_district\",\n              label = \"Select district\",\n              choices = c(\n                   \"All\",\n                   \"Spring\",\n                   \"Bolo\",\n                   \"Dingo\",\n                   \"Barnard\"\n              ),\n              selected = \"All\",\n              multiple = TRUE\n         ),\n         # selector for age group\n         selectInput(\n              inputId = \"select_agegroup\",\n              label = \"Select age group\",\n              choices = c(\n                   \"All ages\" = \"malaria_tot\",\n                   \"0-4 yrs\" = \"malaria_rdt_0-4\",\n                   \"5-14 yrs\" = \"malaria_rdt_5-14\",\n                   \"15+ yrs\" = \"malaria_rdt_15\"\n              ), \n              selected = \"All\",\n              multiple = FALSE\n         )\n\n    ),\n\n    mainPanel(\n      # epicurve goes here\n      plotOutput(\"malaria_epicurve\")\n    )\n    \n  )\n)\nserver <- function(input, output, session) {\n  \n  output$malaria_epicurve <- renderPlot(\n    plot_epicurve(malaria_data, district = input$select_district, agegroup = input$select_agegroup)\n  )\n  \n}"},{"path":"dashboards-with-shiny.html","id":"adding-more-functionality","chapter":"4 Dashboards with Shiny","heading":"4.6 Adding more functionality","text":"point ’ve finally got running app, little functionality. also haven’t really scratched surface shiny can , ’s lot learn ! Lets continue build existing app adding extra features. things nice add :explanatory textA download button plot - provide user high quality version image ’re generating appA selector specific facilitiesAnother dashboard page - show table data.lot add, can use learn bunch different shiny featues way. much learn shiny (can get advanced, hopefully case users better idea use can become comfortable using external learning sources well).","code":""},{"path":"dashboards-with-shiny.html","id":"adding-static-text","chapter":"4 Dashboards with Shiny","heading":"Adding static text","text":"Lets first discuss adding static text shiny app. Adding text app extremely easy, basic grasp . Since static text doesn’t change shiny app (’d like change, can use text rendering functions server!), shiny’s static text generally added ui app. wont go great detail, can add number different elements ui (even custom ones) interfacing R HTML css.HTML css languages explicitly involved user interface design. don’t need understand well, HTML creates objects UI (like text box, table), css generally used change style aesthetics objects. Shiny access large array HTML tags - present objects behave specific way, headers, paragraphs text, line breaks, tables, etc. can use examples like :h1() - header tag, make enclosed text automatically larger, change defaults pertain font face, colour etc (depending overall theme app). can access smaller smaller sub-heading h2() h6() well. Usage looks like:\nh1(\"header - section 1\")\nh1() - header tag, make enclosed text automatically larger, change defaults pertain font face, colour etc (depending overall theme app). can access smaller smaller sub-heading h2() h6() well. Usage looks like:h1(\"header - section 1\")p() - paragraph tag, make enclosed text similar text body text. text automatically wrap, relatively small size (footers smaller example.) Think text body word document. Usage looks like:\np(\"larger body text explaining function app\")\np() - paragraph tag, make enclosed text similar text body text. text automatically wrap, relatively small size (footers smaller example.) Think text body word document. Usage looks like:p(\"larger body text explaining function app\")tags$b() tags$() - used create bold tags$b() italicised tags$() whichever text enclosed!tags$b() tags$() - used create bold tags$b() italicised tags$() whichever text enclosed!tags$ul(), tags$ol() tags$li() - tags used creating lists. used within syntax , allow user create either ordered list (tags$ol(); .e. numbered) unordered list (tags$ul(), .e. bullet points). tags$li() used denote items list, regardless type list used. e.g.:tags$ul(), tags$ol() tags$li() - tags used creating lists. used within syntax , allow user create either ordered list (tags$ol(); .e. numbered) unordered list (tags$ul(), .e. bullet points). tags$li() used denote items list, regardless type list used. e.g.:br() hr() - tags create linebreaks horizontal lines (linebreak) respectively. Use separate sections app text! need pass items tags (parentheses can remain empty).br() hr() - tags create linebreaks horizontal lines (linebreak) respectively. Use separate sections app text! need pass items tags (parentheses can remain empty).div() - generic tag can contain anything, can named anything. progress ui design, can use compartmentalize ui, give specific sections specific styles, create interactions server UI elements. won’t go detail, ’re worth aware !div() - generic tag can contain anything, can named anything. progress ui design, can use compartmentalize ui, give specific sections specific styles, create interactions server UI elements. won’t go detail, ’re worth aware !Note every one objects can accessed tags$... , just function. effectively synonymous, may help use tags$... style ’d rather explicit overwrite functions accidentally. also means exhaustive list tags available. full list tags available shiny even can used inserting HTML directly ui!’re feeling confident, can also add css styling elements HTML tags style argument . won’t go works detail, one tip testing aesthetic changes UI using HTML inspector mode chrome (shiny app running browser), editing style objects !Lets add text app","code":"\ntags$ol(\n  \n  tags$li(\"Item 1\"),\n  \n  tags$li(\"Item 2\"),\n  \n  tags$li(\"Item 3\")\n  \n)\nui <- fluidPage(\n\n  titlePanel(\"Malaria facility visualisation app\"),\n\n  sidebarLayout(\n\n    sidebarPanel(\n         h4(\"Options\"),\n         # selector for district\n         selectInput(\n              inputId = \"select_district\",\n              label = \"Select district\",\n              choices = c(\n                   \"All\",\n                   \"Spring\",\n                   \"Bolo\",\n                   \"Dingo\",\n                   \"Barnard\"\n              ),\n              selected = \"All\",\n              multiple = TRUE\n         ),\n         # selector for age group\n         selectInput(\n              inputId = \"select_agegroup\",\n              label = \"Select age group\",\n              choices = c(\n                   \"All ages\" = \"malaria_tot\",\n                   \"0-4 yrs\" = \"malaria_rdt_0-4\",\n                   \"5-14 yrs\" = \"malaria_rdt_5-14\",\n                   \"15+ yrs\" = \"malaria_rdt_15\"\n              ), \n              selected = \"All\",\n              multiple = FALSE\n         ),\n    ),\n\n    mainPanel(\n      # epicurve goes here\n      plotOutput(\"malaria_epicurve\"),\n      br(),\n      hr(),\n      p(\"Welcome to the malaria facility visualisation app! To use this app, manipulate the widgets on the side to change the epidemic curve according to your preferences! To download a high quality image of the plot you've created, you can also download it with the download button. To see the raw data, use the raw data tab for an interactive form of the table. The data dictionary is as follows:\"),\n    tags$ul(\n      tags$li(tags$b(\"location_name\"), \" - the facility that the data were collected at\"),\n      tags$li(tags$b(\"data_date\"), \" - the date the data were collected at\"),\n      tags$li(tags$b(\"submitted_daate\"), \" - the date the data were submitted at\"),\n      tags$li(tags$b(\"Province\"), \" - the province the data were collected at (all 'North' for this dataset)\"),\n      tags$li(tags$b(\"District\"), \" - the district the data were collected at\"),\n      tags$li(tags$b(\"age_group\"), \" - the age group the data were collected for (0-5, 5-14, 15+, and all ages)\"),\n      tags$li(tags$b(\"cases_reported\"), \" - the number of cases reported for the facility/age group on the given date\")\n    )\n    \n  )\n)\n)"},{"path":"dashboards-with-shiny.html","id":"adding-a-link","chapter":"4 Dashboards with Shiny","heading":"Adding a link","text":"add link website, use tags$() link display text shown . standalone paragraph, put within p(). words sentence linked, break sentence parts use tags$() hyperlinked part. ensure link opens new browser window, add target = \"_blank\" argument.","code":"\ntags$a(href = \"www.epiRhandbook.com\", \"Visit our website!\")"},{"path":"dashboards-with-shiny.html","id":"adding-a-download-button","chapter":"4 Dashboards with Shiny","heading":"Adding a download button","text":"Lets move second three features. download button fairly common thing add app fairly easy make. need add another Widget ui, need add another output server attach . can also introduce reactive conductors example!Lets update ui first - easy shiny comes widget called downloadButton() - lets give inputId label.Note ’ve also added hr() tag - adds horizontal line separating control widgets download widgets. another one HTML tags discussed previously.Now ui ready, need add server component. Downloads done server downloadHandler() function. Similar plot, need attach output inputId download button. function takes two arguments - filename content - functions. might able guess, filename used specify name downloaded file, content used specify downloaded. content contain function use save data locally - downloading csv file use rio::export(). Since ’re downloading plot, ’ll use ggplot2::ggsave(). Lets look program (won’t add server yet).Note content function always takes file argument, put output file name specified. might also notice ’re repeating code - using plot_epicurve() function twice server, download image displayed app. wont massively affect performance, means code generate plot run user changes widgets specifying district age group, want download plot. larger apps, suboptimal decisions like one slow things , ’s good learn make app efficient sense. make sense way run epicurve code districts/age groups changes, let used renderPlot() downloadHandler() functions. reactive conductors come !Reactive conductors objects created shiny server reactive way, outputted - can just used parts server. number different kinds reactive conductors, ’ll go basic two.1.reactive() - basic reactive conductor - react whenever inputs used inside change (district/age group widgets)\n2. eventReactive()- rective conductor works reactive(), except user can specify inputs cause rerun. useful reactive conductor takes long time process, explained later.Lets look two examples:use eventReactive() setup, can specify inputs cause chunk code run - isn’t useful us moment, can leave now. Note can include multiple inputs c()Lets look can integrate server code:can see ’re just calling output reactive ’ve defined download plot rendering functions. One thing note often trips people use outputs reactives functions - must add empty brackets end (.e. malaria_plot() correct, malaria_plot ). Now ’ve added solution app little tidyer, faster, easier change since code runs epicurve function one place.","code":"\nui <- fluidPage(\n\n  titlePanel(\"Malaria facility visualisation app\"),\n\n  sidebarLayout(\n\n    sidebarPanel(\n         # selector for district\n         selectInput(\n              inputId = \"select_district\",\n              label = \"Select district\",\n              choices = c(\n                   \"All\",\n                   \"Spring\",\n                   \"Bolo\",\n                   \"Dingo\",\n                   \"Barnard\"\n              ),\n              selected = \"All\",\n              multiple = FALSE\n         ),\n         # selector for age group\n         selectInput(\n              inputId = \"select_agegroup\",\n              label = \"Select age group\",\n              choices = c(\n                   \"All ages\" = \"malaria_tot\",\n                   \"0-4 yrs\" = \"malaria_rdt_0-4\",\n                   \"5-14 yrs\" = \"malaria_rdt_5-14\",\n                   \"15+ yrs\" = \"malaria_rdt_15\"\n              ), \n              selected = \"All\",\n              multiple = FALSE\n         ),\n         # horizontal line\n         hr(),\n         downloadButton(\n           outputId = \"download_epicurve\",\n           label = \"Download plot\"\n         )\n\n    ),\n\n    mainPanel(\n      # epicurve goes here\n      plotOutput(\"malaria_epicurve\"),\n      br(),\n      hr(),\n      p(\"Welcome to the malaria facility visualisation app! To use this app, manipulate the widgets on the side to change the epidemic curve according to your preferences! To download a high quality image of the plot you've created, you can also download it with the download button. To see the raw data, use the raw data tab for an interactive form of the table. The data dictionary is as follows:\"),\n      tags$ul(\n        tags$li(tags$b(\"location_name\"), \" - the facility that the data were collected at\"),\n        tags$li(tags$b(\"data_date\"), \" - the date the data were collected at\"),\n        tags$li(tags$b(\"submitted_daate\"), \" - the date the data were submitted at\"),\n        tags$li(tags$b(\"Province\"), \" - the province the data were collected at (all 'North' for this dataset)\"),\n        tags$li(tags$b(\"District\"), \" - the district the data were collected at\"),\n        tags$li(tags$b(\"age_group\"), \" - the age group the data were collected for (0-5, 5-14, 15+, and all ages)\"),\n        tags$li(tags$b(\"cases_reported\"), \" - the number of cases reported for the facility/age group on the given date\")\n      )\n      \n    )\n    \n  )\n)\nserver <- function(input, output, session) {\n  \n  output$malaria_epicurve <- renderPlot(\n    plot_epicurve(malaria_data, district = input$select_district, agegroup = input$select_agegroup)\n  )\n  \n  output$download_epicurve <- downloadHandler(\n    filename = function() {\n      stringr::str_glue(\"malaria_epicurve_{input$select_district}.png\")\n    },\n    \n    content = function(file) {\n      ggsave(file, \n             plot_epicurve(malaria_data, district = input$select_district, agegroup = input$select_agegroup),\n             width = 8, height = 5, dpi = 300)\n    }\n    \n  )\n  \n}\nmalaria_plot_r <- reactive({\n  \n  plot_epicurve(malaria_data, district = input$select_district, agegroup = input$select_agegroup)\n  \n})\n\n\n# only runs when the district selector changes!\nmalaria_plot_er <- eventReactive(input$select_district, {\n  \n  plot_epicurve(malaria_data, district = input$select_district, agegroup = input$select_agegroup)\n  \n})\nserver <- function(input, output, session) {\n  \n  malaria_plot <- reactive({\n    plot_epicurve(malaria_data, district = input$select_district, agegroup = input$select_agegroup)\n  })\n  \n  \n  \n  output$malaria_epicurve <- renderPlot(\n    malaria_plot()\n  )\n  \n  output$download_epicurve <- downloadHandler(\n    \n    filename = function() {\n      stringr::str_glue(\"malaria_epicurve_{input$select_district}.png\")\n    },\n    \n    content = function(file) {\n      ggsave(file, \n             malaria_plot(),\n             width = 8, height = 5, dpi = 300)\n    }\n    \n  )\n  \n}"},{"path":"dashboards-with-shiny.html","id":"adding-a-facility-selector","chapter":"4 Dashboards with Shiny","heading":"Adding a facility selector","text":"Lets move next feature - selector specific facilities. ’ll implement another parameter function can pass argument code. Lets look first - just operates principles parameters ’ve set . Lets update test function.Let’s test :facilites data, isn’t clear facilities correspond districts - end user won’t know either. might make using app quite unintuitive. reason, make facility options UI change dynamically user changes district - one filters ! Since many variables ’re using options, might also want generate options ui global.R file data. example, can add code chunk global.R ’ve read data :Let’s look :can pass new variables ui without issue, since globally visible server ui! Lets update UI:Notice ’re now passing variables choices instead hard coding ui! might make code compact well! Lastly, ’ll update server. easy update function incorporate new input (just pass argument new parameter), remember also want ui update dynamically user changes selected district. important understand can change parameters behaviour widgets app running, needs done server. need understand new way output server learn .functions need understand known observer functions, similar reactive functions behave. one key difference though:Reactive functions directly affect outputs, produce objects can seen locations serverObserver functions can affect server outputs, via side effects functions. (can also things, main function practice)Similar reactive functions, two flavours observer functions, divided logic divides reactive functions:observe() - function runs whenever inputs used inside changeobserveEvent() - function runs user-specified input changesWe also need understand shiny-provided functions update widgets. fairly straightforward run - first take session object server function (doesn’t need understood now), inputId function changed. pass new versions parameters already taken selectInput() - automatically updated widget.Lets look isolated example use server. user changes district, want filter tibble facilities district, update choices reflect available district (option facilities)’s ! can add server, behaviour now work. ’s new server look like:","code":"\nplot_epicurve <- function(data, district = \"All\", agegroup = \"malaria_tot\", facility = \"All\") {\n  \n  if (!(\"All\" %in% district)) {\n    data <- data %>%\n      filter(District %in% district)\n    \n    plot_title_district <- stringr::str_glue(\"{paste0(district, collapse = ', ')} districts\")\n    \n  } else {\n    \n    plot_title_district <- \"all districts\"\n    \n  }\n  \n  # if no remaining data, return NULL\n  if (nrow(data) == 0) {\n    \n    return(NULL)\n  }\n  \n  data <- data %>%\n    filter(age_group == agegroup)\n  \n  \n  # if no remaining data, return NULL\n  if (nrow(data) == 0) {\n    \n    return(NULL)\n  }\n  \n  if (agegroup == \"malaria_tot\") {\n      agegroup_title <- \"All ages\"\n  } else {\n    agegroup_title <- stringr::str_glue(\"{str_remove(agegroup, 'malaria_rdt')} years\")\n  }\n  \n    if (!(\"All\" %in% facility)) {\n    data <- data %>%\n      filter(location_name == facility)\n    \n    plot_title_facility <- facility\n    \n  } else {\n    \n    plot_title_facility <- \"all facilities\"\n    \n  }\n  \n  # if no remaining data, return NULL\n  if (nrow(data) == 0) {\n    \n    return(NULL)\n  }\n\n  \n  \n  ggplot(data, aes(x = data_date, y = cases_reported)) +\n    geom_col(width = 1, fill = \"darkred\") +\n    theme_minimal() +\n    labs(\n      x = \"date\",\n      y = \"number of cases\",\n      title = stringr::str_glue(\"Malaria cases - {plot_title_district}; {plot_title_facility}\"),\n      subtitle = agegroup_title\n    )\n  \n  \n  \n}\nplot_epicurve(malaria_data, district = \"Spring\", agegroup = \"malaria_rdt_0-4\", facility = \"Facility 1\")\nall_districts <- c(\"All\", unique(malaria_data$District))\n\n# data frame of location names by district\nfacility_list <- malaria_data %>%\n  group_by(location_name, District) %>%\n  summarise() %>% \n  ungroup()\nall_districts## [1] \"All\"     \"Spring\"  \"Bolo\"    \"Dingo\"   \"Barnard\"\nfacility_list## # A tibble: 65 × 2\n##    location_name District\n##    <chr>         <chr>   \n##  1 Facility 1    Spring  \n##  2 Facility 10   Bolo    \n##  3 Facility 11   Spring  \n##  4 Facility 12   Dingo   \n##  5 Facility 13   Bolo    \n##  6 Facility 14   Dingo   \n##  7 Facility 15   Barnard \n##  8 Facility 16   Barnard \n##  9 Facility 17   Barnard \n## 10 Facility 18   Bolo    \n## # ℹ 55 more rows\nui <- fluidPage(\n\n  titlePanel(\"Malaria facility visualisation app\"),\n\n  sidebarLayout(\n\n    sidebarPanel(\n         # selector for district\n         selectInput(\n              inputId = \"select_district\",\n              label = \"Select district\",\n              choices = all_districts,\n              selected = \"All\",\n              multiple = FALSE\n         ),\n         # selector for age group\n         selectInput(\n              inputId = \"select_agegroup\",\n              label = \"Select age group\",\n              choices = c(\n                   \"All ages\" = \"malaria_tot\",\n                   \"0-4 yrs\" = \"malaria_rdt_0-4\",\n                   \"5-14 yrs\" = \"malaria_rdt_5-14\",\n                   \"15+ yrs\" = \"malaria_rdt_15\"\n              ), \n              selected = \"All\",\n              multiple = FALSE\n         ),\n         # selector for facility\n         selectInput(\n           inputId = \"select_facility\",\n           label = \"Select Facility\",\n           choices = c(\"All\", facility_list$location_name),\n           selected = \"All\"\n         ),\n         \n         # horizontal line\n         hr(),\n         downloadButton(\n           outputId = \"download_epicurve\",\n           label = \"Download plot\"\n         )\n\n    ),\n\n    mainPanel(\n      # epicurve goes here\n      plotOutput(\"malaria_epicurve\"),\n      br(),\n      hr(),\n      p(\"Welcome to the malaria facility visualisation app! To use this app, manipulate the widgets on the side to change the epidemic curve according to your preferences! To download a high quality image of the plot you've created, you can also download it with the download button. To see the raw data, use the raw data tab for an interactive form of the table. The data dictionary is as follows:\"),\n      tags$ul(\n        tags$li(tags$b(\"location_name\"), \" - the facility that the data were collected at\"),\n        tags$li(tags$b(\"data_date\"), \" - the date the data were collected at\"),\n        tags$li(tags$b(\"submitted_daate\"), \" - the date the data were submitted at\"),\n        tags$li(tags$b(\"Province\"), \" - the province the data were collected at (all 'North' for this dataset)\"),\n        tags$li(tags$b(\"District\"), \" - the district the data were collected at\"),\n        tags$li(tags$b(\"age_group\"), \" - the age group the data were collected for (0-5, 5-14, 15+, and all ages)\"),\n        tags$li(tags$b(\"cases_reported\"), \" - the number of cases reported for the facility/age group on the given date\")\n      )\n      \n    )\n    \n  )\n)\nobserve({\n  \n  if (input$select_district == \"All\") {\n    new_choices <- facility_list$location_name\n  } else {\n    new_choices <- facility_list %>%\n      filter(District == input$select_district) %>%\n      pull(location_name)\n  }\n  \n  new_choices <- c(\"All\", new_choices)\n  \n  updateSelectInput(session, inputId = \"select_facility\",\n                    choices = new_choices)\n  \n})\nserver <- function(input, output, session) {\n  \n  malaria_plot <- reactive({\n    plot_epicurve(malaria_data, district = input$select_district, agegroup = input$select_agegroup, facility = input$select_facility)\n  })\n  \n  \n  \n  observe({\n    \n    if (input$select_district == \"All\") {\n      new_choices <- facility_list$location_name\n    } else {\n      new_choices <- facility_list %>%\n        filter(District == input$select_district) %>%\n        pull(location_name)\n    }\n    \n    new_choices <- c(\"All\", new_choices)\n    \n    updateSelectInput(session, inputId = \"select_facility\",\n                      choices = new_choices)\n    \n  })\n  \n  \n  output$malaria_epicurve <- renderPlot(\n    malaria_plot()\n  )\n  \n  output$download_epicurve <- downloadHandler(\n    \n    filename = function() {\n      stringr::str_glue(\"malaria_epicurve_{input$select_district}.png\")\n    },\n    \n    content = function(file) {\n      ggsave(file, \n             malaria_plot(),\n             width = 8, height = 5, dpi = 300)\n    }\n    \n  )\n  \n  \n  \n}"},{"path":"dashboards-with-shiny.html","id":"adding-another-tab-with-a-table","chapter":"4 Dashboards with Shiny","heading":"Adding another tab with a table","text":"Now ’ll move last component want add app. ’ll want separate ui two tabs, one interactive table user can see data making epidemic curve . , can use packaged ui elements come shiny relevant tabs. basic level, can enclose main panel general structure:Lets apply ui. also want use DT package - great package making interactive tables pre-existing data. can see used DT::datatableOutput() example.Now app arranged tabs! Lets make necessary edits server well. Since dont need manipulate dataset render actually simple - just render malaria_data dataset via DT::renderDT() ui!","code":"\n# ... the rest of ui\n\nmainPanel(\n  \n  tabsetPanel(\n    type = \"tabs\",\n    tabPanel(\n      \"Epidemic Curves\",\n      ...\n    ),\n    tabPanel(\n      \"Data\",\n      ...\n    )\n  )\n)\nui <- fluidPage(\n     \n     titlePanel(\"Malaria facility visualisation app\"),\n     \n     sidebarLayout(\n          \n          sidebarPanel(\n               # selector for district\n               selectInput(\n                    inputId = \"select_district\",\n                    label = \"Select district\",\n                    choices = all_districts,\n                    selected = \"All\",\n                    multiple = FALSE\n               ),\n               # selector for age group\n               selectInput(\n                    inputId = \"select_agegroup\",\n                    label = \"Select age group\",\n                    choices = c(\n                         \"All ages\" = \"malaria_tot\",\n                         \"0-4 yrs\" = \"malaria_rdt_0-4\",\n                         \"5-14 yrs\" = \"malaria_rdt_5-14\",\n                         \"15+ yrs\" = \"malaria_rdt_15\"\n                    ), \n                    selected = \"All\",\n                    multiple = FALSE\n               ),\n               # selector for facility\n               selectInput(\n                    inputId = \"select_facility\",\n                    label = \"Select Facility\",\n                    choices = c(\"All\", facility_list$location_name),\n                    selected = \"All\"\n               ),\n               \n               # horizontal line\n               hr(),\n               downloadButton(\n                    outputId = \"download_epicurve\",\n                    label = \"Download plot\"\n               )\n               \n          ),\n          \n          mainPanel(\n               tabsetPanel(\n                    type = \"tabs\",\n                    tabPanel(\n                         \"Epidemic Curves\",\n                         plotOutput(\"malaria_epicurve\")\n                    ),\n                    tabPanel(\n                         \"Data\",\n                         DT::dataTableOutput(\"raw_data\")\n                    )\n               ),\n               br(),\n               hr(),\n               p(\"Welcome to the malaria facility visualisation app! To use this app, manipulate the widgets on the side to change the epidemic curve according to your preferences! To download a high quality image of the plot you've created, you can also download it with the download button. To see the raw data, use the raw data tab for an interactive form of the table. The data dictionary is as follows:\"),\n               tags$ul(\n                    tags$li(tags$b(\"location_name\"), \" - the facility that the data were collected at\"),\n                    tags$li(tags$b(\"data_date\"), \" - the date the data were collected at\"),\n                    tags$li(tags$b(\"submitted_daate\"), \" - the date the data were submitted at\"),\n                    tags$li(tags$b(\"Province\"), \" - the province the data were collected at (all 'North' for this dataset)\"),\n                    tags$li(tags$b(\"District\"), \" - the district the data were collected at\"),\n                    tags$li(tags$b(\"age_group\"), \" - the age group the data were collected for (0-5, 5-14, 15+, and all ages)\"),\n                    tags$li(tags$b(\"cases_reported\"), \" - the number of cases reported for the facility/age group on the given date\")\n               )\n               \n               \n          )\n     )\n)\nserver <- function(input, output, session) {\n  \n  malaria_plot <- reactive({\n    plot_epicurve(malaria_data, district = input$select_district, agegroup = input$select_agegroup, facility = input$select_facility)\n  })\n  \n  \n  \n  observe({\n    \n    if (input$select_district == \"All\") {\n      new_choices <- facility_list$location_name\n    } else {\n      new_choices <- facility_list %>%\n        filter(District == input$select_district) %>%\n        pull(location_name)\n    }\n    \n    new_choices <- c(\"All\", new_choices)\n    \n    updateSelectInput(session, inputId = \"select_facility\",\n                      choices = new_choices)\n    \n  })\n  \n  \n  output$malaria_epicurve <- renderPlot(\n    malaria_plot()\n  )\n  \n  output$download_epicurve <- downloadHandler(\n    \n    filename = function() {\n      stringr::str_glue(\"malaria_epicurve_{input$select_district}.png\")\n    },\n    \n    content = function(file) {\n      ggsave(file, \n             malaria_plot(),\n             width = 8, height = 5, dpi = 300)\n    }\n    \n  )\n  \n  # render data table to ui\n  output$raw_data <- DT::renderDT(\n    malaria_data\n  )\n  \n  \n}"},{"path":"dashboards-with-shiny.html","id":"sharing-shiny-apps","chapter":"4 Dashboards with Shiny","heading":"4.7 Sharing shiny apps","text":"Now ’ve developed app, probably want share others - main advantage shiny ! can sharing code directly, publish server. share code, others able see ’ve done build , negate one main advantages shiny - can eliminate need end-users maintain R installation. reason, ’re sharing app users comfortable R, much easier share app published server.’d rather share code, make .zip file app, better yet, publish app github add collaborators. can refer section github information .However, ’re publishing app online, need little work. Ultimately, want app able accessed via web URL others can get quick easy access . Unfortunately, publish app server, need access server publish ! number hosting options comes :shinyapps.io: easiest place publish shiny apps, smallest amount configuration work needed, free, limited licenses.shinyapps.io: easiest place publish shiny apps, smallest amount configuration work needed, free, limited licenses.RStudio Connect: far powerful version R server, can perform many operations, including publishing shiny apps. however, harder use, less recommended first-time users.RStudio Connect: far powerful version R server, can perform many operations, including publishing shiny apps. however, harder use, less recommended first-time users.purposes document, use shinyapps.io, since easier first time users. can make free account start - also different price plans server licesnses needed. users expect , expensive price plan may , keep consideration. ’re looking create something small set individuals use, free license may perfectly suitable, public facing app may need licenses.First make sure app suitable publishing server. app, restart R session, ensure runs without running extra code. important, app requires package loading, data reading defined app code won’t run server. Also note can’t explicit file paths app - invalid server setting - using package solves issue well. Finally, ’re reading data source requires user-authentication, organisation’s servers, generally work server. need liase department figure whitelist shiny server .signing accountOnce account, can navigate tokens page Accounts. want add new token - used deploy app., note url account reflect name app - app called my_app, url appended xxx.io/my_app/. Choose app name wisely! Now ready, click deploy - successful run app web url chose!something making apps documents?","code":""},{"path":"dashboards-with-shiny.html","id":"further-reading","chapter":"4 Dashboards with Shiny","heading":"4.8 Further reading","text":"far, ’ve covered lot aspects shiny, barely scratched surface offer shiny. guide serves introduction, loads learn fully understand shiny. start making apps gradually add functionality","code":""},{"path":"dashboards-with-shiny.html","id":"recommended-extension-packages","chapter":"4 Dashboards with Shiny","heading":"4.9 Recommended extension packages","text":"following represents selection high quality shiny extensions can help get lot shiny. particular order:shinyWidgets - package gives many many widgets can used app. Run shinyWidgets::shinyWidgetsGallery() see selection available widgets package. See examples hereshinyWidgets - package gives many many widgets can used app. Run shinyWidgets::shinyWidgetsGallery() see selection available widgets package. See examples hereshinyjs - excellent package gives user ability greatly extend shiny’s utility via series javascript. applications package range simple highly advanced, might want first use manipulate ui simple ways, like hiding/showing elements, enabling/disabling buttons. Find hereshinyjs - excellent package gives user ability greatly extend shiny’s utility via series javascript. applications package range simple highly advanced, might want first use manipulate ui simple ways, like hiding/showing elements, enabling/disabling buttons. Find hereshinydashboard - package massively expands available ui can used shiny, specifically letting user create complex dashboard variety complex layouts. See hereshinydashboard - package massively expands available ui can used shiny, specifically letting user create complex dashboard variety complex layouts. See hereshinydashboardPlus - get even features shinydashboard framework! See hereshinydashboardPlus - get even features shinydashboard framework! See hereshinythemes - change default css theme shiny app wide range preset templates! See hereshinythemes - change default css theme shiny app wide range preset templates! See hereThere also number packages can used create interactive outputs shiny compatible.DT semi-incorporated base-shiny, provides great set functions create interactive tables.DT semi-incorporated base-shiny, provides great set functions create interactive tables.plotly package creating interactive plots user can manipulate app. can also convert plot interactive versions via plotly::ggplotly()! alternatives, dygraphs highcharter also excellent.plotly package creating interactive plots user can manipulate app. can also convert plot interactive versions via plotly::ggplotly()! alternatives, dygraphs highcharter also excellent.","code":""},{"path":"dashboards-with-shiny.html","id":"recommended-resources","chapter":"4 Dashboards with Shiny","heading":"4.10 Recommended resources","text":"","code":""},{"path":"writing-functions.html","id":"writing-functions","chapter":"5 Writing functions","heading":"5 Writing functions","text":"","code":""},{"path":"writing-functions.html","id":"preparation-4","chapter":"5 Writing functions","heading":"5.1 Preparation","text":"","code":""},{"path":"writing-functions.html","id":"load-packages-3","chapter":"5 Writing functions","heading":"Load packages","text":"code chunk shows loading packages required analyses. handbook emphasize p_load() pacman, installs package necessary loads use. can also load installed packages library() base R. See page [R basics] information R packages.","code":""},{"path":"writing-functions.html","id":"import-data-2","chapter":"5 Writing functions","heading":"Import data","text":"import dataset cases simulated Ebola epidemic. want download data follow step--step, see instructions [Download book data] page. dataset imported using import() function rio package. See page [Import export] various ways import data.also use last part page data H7N9 flu 2013.","code":""},{"path":"writing-functions.html","id":"functions","chapter":"5 Writing functions","heading":"5.2 Functions","text":"Functions helpful programming since allow make codes easier understand, somehow shorter less prone errors (given errors function ).come far handbook, means came across endless functions since R, every operation function call\n+, , , [, $, { …. example x + y '+'(x, y)R one languages offers possibility work functions give enough tools user easily write . think functions fixed top end programming chain, R offers possibility use vectors even use inside functions, lists…Lot advanced resources functional programming exist give insight help start functional programming short practical examples. encouraged visit links references read .","code":""},{"path":"writing-functions.html","id":"why-would-you-use-a-function","chapter":"5 Writing functions","heading":"5.3 Why would you use a function?","text":"answering question, important note already tips get write first R functions page [Iteration, loops, lists] handbook. fact, use “/else” loops often core part many functions since easily help either broaden application code allowing multiple conditions iterate codes repeating tasks.repeating multiple times block code apply different variable data?repeating multiple times block code apply different variable data?Getting rid substantially shorten overall code make run quicker?Getting rid substantially shorten overall code make run quicker?possible code written used different value many places code?possible code written used different value many places code?answer one previous questions “YES”, probably need write function","code":""},{"path":"writing-functions.html","id":"how-does-r-build-functions","chapter":"5 Writing functions","heading":"5.4 How does R build functions?","text":"Functions R three main components:formals() list arguments controls can call functionthe formals() list arguments controls can call functionthe body() code inside function .e. within brackets following parenthesis depending write itthe body() code inside function .e. within brackets following parenthesis depending write itand,environment() help locate function’s variables determines function finds value.created function, can verify components calling function associated.","code":""},{"path":"writing-functions.html","id":"basic-syntax-and-structure","chapter":"5 Writing functions","heading":"5.5 Basic syntax and structure","text":"function need named properly job easily understandable soon read name. Actually already case majority base R architecture. Functions like mean(), print(), summary() names straightforwardA function need named properly job easily understandable soon read name. Actually already case majority base R architecture. Functions like mean(), print(), summary() names straightforwardA function need arguments, data work objects can static values among optionsA function need arguments, data work objects can static values among optionsAnd finally function give output based core task arguments given. Usually use built-functions print(), return()… produce output. output can logical value, number, character, data frame…short kind R object.finally function give output based core task arguments given. Usually use built-functions print(), return()… produce output. output can logical value, number, character, data frame…short kind R object.Basically composition function:can create first function called contain_covid19().can verify components newly created function.Now test function. call written function, use use R functions .e writing function name adding required arguments.can write name argument precautionary reasons. without specifying , code work since R memory positioning argument. long put values arguments correct order, can skip writing arguments names calling functions.let’s look happens one values \"\" \"yes\".provide argument recognized, get error:Error contain_covid19(barrier_gest = \"sometimes\", wear_mask = \"yes\",  :    find function \"contain_covid19\"NOTE: functions (time short straightforward) may need name can used directly line code inside another function quick task. called anonymous functions .instance first anonymous function keeps character variables dataset.another function selects every second observation dataset (may relevant longitudinal data many records per patient instance ordered date visit).\ncase, proper function writing outside dplyr function (x) (x%%2 == 0) apply vector containing row numbers.possible base R code task :CAUTION: Though true using functions can help us code, can nevertheless time consuming write functions fix one thought thoroughly, written adequately returning errors result. reason often recommended first write R code, make sure intend , transform function three main components listed . ","code":"\nfunction_name <- function(argument_1, argument_2, argument_3){\n  \n           function_task\n  \n           return(output)\n}\ncontain_covid19 <- function(barrier_gest, wear_mask, get_vaccine){\n  \n                            if(barrier_gest == \"yes\" & wear_mask == \"yes\" & get_vaccine == \"yes\" ) \n       \n                            return(\"success\")\n  \n  else(\"please make sure all are yes, this pandemic has to end!\")\n}\nformals(contain_covid19)## $barrier_gest\n## \n## \n## $wear_mask\n## \n## \n## $get_vaccine\nbody(contain_covid19)## {\n##     if (barrier_gest == \"yes\" & wear_mask == \"yes\" & get_vaccine == \n##         \"yes\") \n##         return(\"success\")\n##     else (\"please make sure all are yes, this pandemic has to end!\")\n## }\nenvironment(contain_covid19)## <environment: R_GlobalEnv>\ncontain_covid19(barrier_gest = \"yes\", wear_mask = \"yes\", get_vaccine = \"yes\")## [1] \"success\"\ncontain_covid19(\"yes\", \"yes\", \"yes\")## [1] \"success\"\ncontain_covid19(barrier_gest = \"yes\", wear_mask = \"yes\", get_vaccine = \"no\")## [1] \"please make sure all are yes, this pandemic has to end!\"\ncontain_covid19(barrier_gest = \"sometimes\", wear_mask = \"yes\", get_vaccine = \"no\")\nlinelist %>% \n  dplyr::slice_head(n=10) %>%  #equivalent to R base \"head\" function and that return first n observation of the  dataset\n  select(function(x) is.character(x)) \nlinelist %>%   \n   slice_head(n=20) %>% \n   tibble::rownames_to_column() %>% # add indices of each obs as rownames to clearly see the final selection\n   filter(row_number() %%2 == 0)\nlinelist_firstobs <- head(linelist, 20)\n\nlinelist_firstobs[base::Filter(function(x) (x%%2 == 0), seq(nrow(linelist_firstobs))),]"},{"path":"writing-functions.html","id":"examples","chapter":"5 Writing functions","heading":"5.6 Examples","text":"","code":""},{"path":"writing-functions.html","id":"return-proportion-tables-for-several-columns","chapter":"5 Writing functions","heading":"Return proportion tables for several columns","text":"Yes, already nice functions many packages allowing summarize information easy nice way. still try make , first steps getting used writing functions.example want show writing simple function avoid copy-pasting code multiple times.TIP: shown , important comment functions general programming. Bear mind function’s aim make code ready read, shorter efficient. one able understand function just reading name details reading comments.second option use function another one via loop make process :simpler way using base R “apply” instead “loop” expressed :TIP: R often defined functional programming language almost anytime run line code using built-functions. good habit comfortable writing functions often internal look basic functions using daily built. shortcut selecting function name clicking onCtrl+F2 fn+F2 Cmd+F2 (depending computer) .","code":"\nproptab_multiple <- function(my_data, var_to_tab){\n  \n  #print the name of each variable of interest before doing the tabulation\n  print(var_to_tab)\n\n  with(my_data,\n       rbind( #bind the results of the two following function by row\n        #tabulate the variable of interest: gives only numbers\n          table(my_data[[var_to_tab]], useNA = \"no\"),\n          #calculate the proportions for each variable of interest and round the value to 2 decimals\n         round(prop.table(table(my_data[[var_to_tab]]))*100,2)\n         )\n       )\n}\n\n\nproptab_multiple(linelist, \"gender\")## [1] \"gender\"##            f       m\n## [1,] 2807.00 2803.00\n## [2,]   50.04   49.96\nproptab_multiple(linelist, \"age_cat\")## [1] \"age_cat\"##          0-4     5-9  10-14  15-19   20-29 30-49 50-69 70+\n## [1,] 1095.00 1095.00 941.00 743.00 1073.00   754 95.00 6.0\n## [2,]   18.87   18.87  16.22  12.81   18.49    13  1.64 0.1\nproptab_multiple(linelist, \"outcome\")## [1] \"outcome\"##        Death Recover\n## [1,] 2582.00 1983.00\n## [2,]   56.56   43.44\nfor(var_to_tab in c(\"gender\",\"age_cat\",  \"outcome\")){\n  \n  print(proptab_multiple(linelist, var_to_tab))\n  \n}## [1] \"gender\"\n##            f       m\n## [1,] 2807.00 2803.00\n## [2,]   50.04   49.96\n## [1] \"age_cat\"\n##          0-4     5-9  10-14  15-19   20-29 30-49 50-69 70+\n## [1,] 1095.00 1095.00 941.00 743.00 1073.00   754 95.00 6.0\n## [2,]   18.87   18.87  16.22  12.81   18.49    13  1.64 0.1\n## [1] \"outcome\"\n##        Death Recover\n## [1,] 2582.00 1983.00\n## [2,]   56.56   43.44"},{"path":"writing-functions.html","id":"using-purrr-writing-functions-that-can-be-iteratively-applied","chapter":"5 Writing functions","heading":"5.7 Using purrr: writing functions that can be iteratively applied","text":"","code":""},{"path":"writing-functions.html","id":"modify-class-of-multiple-columns-in-a-dataset","chapter":"5 Writing functions","heading":"Modify class of multiple columns in a dataset","text":"Let’s say many character variables original linelist data need changes “factor” analysis plotting purposes. Instead repeating step several times, can just use lapply() transformation variables concerned single line code.CAUTION: lapply() returns list, thus use may require additional modification last step.step can done using map_if() function purrr package","code":"\nlinelist_factor2 <- linelist %>%\n  purrr::map_if(is.character, as.factor)\n\n\nlinelist_factor2 %>%\n        glimpse()## List of 30\n##  $ case_id             : Factor w/ 5888 levels \"00031d\",\"00086d\",..: 2134 3022 396 4203 3084 4347 179 1241 5594 430 ...\n##  $ generation          : num [1:5888] 4 4 2 3 3 3 4 4 4 4 ...\n##  $ date_infection      : Date[1:5888], format: \"2014-05-08\" NA NA \"2014-05-04\" ...\n##  $ date_onset          : Date[1:5888], format: \"2014-05-13\" \"2014-05-13\" \"2014-05-16\" \"2014-05-18\" ...\n##  $ date_hospitalisation: Date[1:5888], format: \"2014-05-15\" \"2014-05-14\" \"2014-05-18\" \"2014-05-20\" ...\n##  $ date_outcome        : Date[1:5888], format: NA \"2014-05-18\" \"2014-05-30\" NA ...\n##  $ outcome             : Factor w/ 2 levels \"Death\",\"Recover\": NA 2 2 NA 2 2 2 1 2 1 ...\n##  $ gender              : Factor w/ 2 levels \"f\",\"m\": 2 1 2 1 2 1 1 1 2 1 ...\n##  $ age                 : num [1:5888] 2 3 56 18 3 16 16 0 61 27 ...\n##  $ age_unit            : Factor w/ 2 levels \"months\",\"years\": 2 2 2 2 2 2 2 2 2 2 ...\n##  $ age_years           : num [1:5888] 2 3 56 18 3 16 16 0 61 27 ...\n##  $ age_cat             : Factor w/ 8 levels \"0-4\",\"5-9\",\"10-14\",..: 1 1 7 4 1 4 4 1 7 5 ...\n##  $ age_cat5            : Factor w/ 18 levels \"0-4\",\"5-9\",\"10-14\",..: 1 1 12 4 1 4 4 1 13 6 ...\n##  $ hospital            : Factor w/ 6 levels \"Central Hospital\",..: 4 3 6 5 2 5 3 3 3 3 ...\n##  $ lon                 : num [1:5888] -13.2 -13.2 -13.2 -13.2 -13.2 ...\n##  $ lat                 : num [1:5888] 8.47 8.45 8.46 8.48 8.46 ...\n##  $ infector            : Factor w/ 2697 levels \"00031d\",\"002e6c\",..: 2594 NA NA 2635 180 1799 1407 195 NA NA ...\n##  $ source              : Factor w/ 2 levels \"funeral\",\"other\": 2 NA NA 2 2 2 2 2 NA NA ...\n##  $ wt_kg               : num [1:5888] 27 25 91 41 36 56 47 0 86 69 ...\n##  $ ht_cm               : num [1:5888] 48 59 238 135 71 116 87 11 226 174 ...\n##  $ ct_blood            : num [1:5888] 22 22 21 23 23 21 21 22 22 22 ...\n##  $ fever               : Factor w/ 2 levels \"no\",\"yes\": 1 NA NA 1 1 1 NA 1 1 1 ...\n##  $ chills              : Factor w/ 2 levels \"no\",\"yes\": 1 NA NA 1 1 1 NA 1 1 1 ...\n##  $ cough               : Factor w/ 2 levels \"no\",\"yes\": 2 NA NA 1 2 2 NA 2 2 2 ...\n##  $ aches               : Factor w/ 2 levels \"no\",\"yes\": 1 NA NA 1 1 1 NA 1 1 1 ...\n##  $ vomit               : Factor w/ 2 levels \"no\",\"yes\": 2 NA NA 1 2 2 NA 2 2 1 ...\n##  $ temp                : num [1:5888] 36.8 36.9 36.9 36.8 36.9 37.6 37.3 37 36.4 35.9 ...\n##  $ time_admission      : Factor w/ 1072 levels \"00:10\",\"00:29\",..: NA 308 746 415 514 589 609 297 409 387 ...\n##  $ bmi                 : num [1:5888] 117.2 71.8 16.1 22.5 71.4 ...\n##  $ days_onset_hosp     : num [1:5888] 2 1 2 2 1 1 2 1 1 2 ..."},{"path":"writing-functions.html","id":"iteratively-produce-graphs-for-different-levels-of-a-variable","chapter":"5 Writing functions","heading":"Iteratively produce graphs for different levels of a variable","text":"produce pie chart look distribution patient’s outcome China H7N9 outbreak province. Instead repeating code , just apply function create.","code":"\n#precising options for the use of highchart\noptions(highcharter.theme =   highcharter::hc_theme_smpl(tooltip = list(valueDecimals = 2)))\n\n\n#create a function called \"chart_outcome_province\" that takes as argument the dataset and the name of the province for which to plot the distribution of the outcome.\n\nchart_outcome_province <- function(data_used, prov){\n  \n  tab_prov <- data_used %>% \n    filter(province == prov,\n           !is.na(outcome))%>% \n    group_by(outcome) %>% \n    count() %>%\n    adorn_totals(where = \"row\") %>% \n    adorn_percentages(denominator = \"col\", )%>%\n    mutate(\n        perc_outcome= round(n*100,2))\n  \n  \n  tab_prov %>%\n    filter(outcome != \"Total\") %>% \n  highcharter::hchart(\n    \"pie\", hcaes(x = outcome, y = perc_outcome),\n    name = paste0(\"Distibution of the outcome in:\", prov)\n    )\n  \n}\n\nchart_outcome_province(flu_china, \"Shanghai\")\nchart_outcome_province(flu_china,\"Zhejiang\")\nchart_outcome_province(flu_china,\"Jiangsu\")"},{"path":"writing-functions.html","id":"iteratively-produce-tables-for-different-levels-of-a-variable","chapter":"5 Writing functions","heading":"Iteratively produce tables for different levels of a variable","text":"create three indicators summarize table like produce table provinces. indicators delay onset hospitalization, percentage recovery median age cases.Indicateurs pour la province de: ShanghaiIndicateursEstimationMean delay onset-hosp4.0Percentage recovery46.7Median age cases67.0Indicateurs pour la province de: JiangsuIndicateursEstimationMean delay onset-hosp6.0Percentage recovery71.4Median age cases55.0","code":"\nindic_1 <- flu_china %>% \n  group_by(province) %>% \n  mutate(\n    date_hosp= strptime(date_of_hospitalisation, format = \"%m/%d/%Y\"),\n    date_ons= strptime(date_of_onset, format = \"%m/%d/%Y\"), \n    delay_onset_hosp= as.numeric(date_hosp - date_ons)/86400,\n    mean_delay_onset_hosp = round(mean(delay_onset_hosp, na.rm=TRUE ), 0)) %>%\n  select(province, mean_delay_onset_hosp)  %>% \n  distinct()\n     \n\nindic_2 <-  flu_china %>% \n            filter(!is.na(outcome)) %>% \n            group_by(province, outcome) %>% \n            count() %>%\n            pivot_wider(names_from = outcome, values_from = n) %>% \n    adorn_totals(where = \"col\") %>% \n    mutate(\n        perc_recovery= round((Recover/Total)*100,2))%>% \n  select(province, perc_recovery)\n    \n    \n    \nindic_3 <-  flu_china %>% \n            group_by(province) %>% \n            mutate(\n                    median_age_cases = median(as.numeric(age), na.rm = TRUE)\n            ) %>% \n  select(province, median_age_cases)  %>% \n  distinct()## Warning: There was 1 warning in `mutate()`.\n## ℹ In argument: `median_age_cases = median(as.numeric(age), na.rm = TRUE)`.\n## ℹ In group 11: `province = \"Shanghai\"`.\n## Caused by warning in `median()`:\n## ! NAs introduced by coercion\n#join the three indicator datasets\n\ntable_indic_all <- indic_1 %>% \n  dplyr::left_join(indic_2, by = \"province\") %>% \n        left_join(indic_3, by = \"province\")\n\n\n#print the indicators in a flextable\n\n\nprint_indic_prov <-  function(table_used, prov){\n  \n  #first transform a bit the dataframe for printing ease\n  indic_prov <- table_used %>%\n    filter(province==prov) %>%\n    pivot_longer(names_to = \"Indicateurs\", cols = 2:4) %>% \n   mutate( indic_label = factor(Indicateurs,\n   levels= c(\"mean_delay_onset_hosp\",\"perc_recovery\",\"median_age_cases\"),\n   labels=c(\"Mean delay onset-hosp\",\"Percentage of recovery\", \"Median age of the cases\"))\n   ) %>% \n    ungroup(province) %>% \n    select(indic_label, value)\n  \n\n    tab_print <- flextable(indic_prov)  %>%\n    theme_vanilla() %>% \n    flextable::fontsize(part = \"body\", size = 10) \n    \n    \n     tab_print <- tab_print %>% \n                  autofit()   %>%\n                  set_header_labels( \n                indic_label= \"Indicateurs\", value= \"Estimation\") %>%\n    flextable::bg( bg = \"darkblue\", part = \"header\") %>%\n    flextable::bold(part = \"header\") %>%\n    flextable::color(color = \"white\", part = \"header\") %>% \n    add_header_lines(values = paste0(\"Indicateurs pour la province de: \", prov)) %>% \nbold(part = \"header\")\n \n tab_print <- set_formatter_type(tab_print,\n   fmt_double = \"%.2f\",\n   na_str = \"-\")\n\ntab_print \n    \n}\n\n\n\n\nprint_indic_prov(table_indic_all, \"Shanghai\")\nprint_indic_prov(table_indic_all, \"Jiangsu\")"},{"path":"writing-functions.html","id":"tips-and-best-practices-for-well-functioning-functions","chapter":"5 Writing functions","heading":"5.8 Tips and best Practices for well functioning functions","text":"Functional programming meant ease code facilitates reading. produce contrary. tips help clean code easy read code.","code":""},{"path":"writing-functions.html","id":"naming-and-syntax","chapter":"5 Writing functions","heading":"Naming and syntax","text":"Avoid using character easily already taken functions already existing environmentAvoid using character easily already taken functions already existing environmentIt recommended function name short straightforward understand another readerIt recommended function name short straightforward understand another readerIt preferred use verbs function name nouns argument names.preferred use verbs function name nouns argument names.","code":""},{"path":"writing-functions.html","id":"column-names-and-tidy-evaluation","chapter":"5 Writing functions","heading":"Column names and tidy evaluation","text":"want know reference column names provided code arguments, read tidyverse programming guidance. Among topics covered tidy evaluation use embrace {{ }} “double braces”example, quick skeleton template code page tutorial mentioned just :","code":"\nvar_summary <- function(data, var) {\n  data %>%\n    summarise(n = n(), min = min({{ var }}), max = max({{ var }}))\n}\nmtcars %>% \n  group_by(cyl) %>% \n  var_summary(mpg)"},{"path":"writing-functions.html","id":"testing-and-error-handling","chapter":"5 Writing functions","heading":"Testing and Error handling","text":"complicated function’s task higher possibility errors. Thus sometimes necessary add verification within funtion help quickly understand error find way t fix .can recommended introduce check missingness one argument using missing(argument). simple check can return “TRUE” “FALSE” value.Use stop() detectable errors.see run built-functions, messages warnings can pop-certain conditions. can integrate written functions using functions message() warning().see run built-functions, messages warnings can pop-certain conditions. can integrate written functions using functions message() warning().can handle errors also using safely() takes one function argument executes safe way. fact function execute without stopping encounters error. safely() returns output list two objects results error “skipped”.can handle errors also using safely() takes one function argument executes safe way. fact function execute without stopping encounters error. safely() returns output list two objects results error “skipped”.can verify first running mean() function, run safely().said previously, well commenting codes already good way documentation work.","code":"\ncontain_covid19_missing <- function(barrier_gest, wear_mask, get_vaccine){\n  \n  if (missing(barrier_gest)) (print(\"please provide arg1\"))\n  if (missing(wear_mask)) print(\"please provide arg2\")\n  if (missing(get_vaccine)) print(\"please provide arg3\")\n\n\n  if (!barrier_gest == \"yes\" | wear_mask ==\"yes\" | get_vaccine == \"yes\" ) \n       \n       return (\"you can do better\")\n  \n  else(\"please make sure all are yes, this pandemic has to end!\")\n}\n\n\ncontain_covid19_missing(get_vaccine = \"yes\")## [1] \"please provide arg1\"\n## [1] \"please provide arg2\"## Error in contain_covid19_missing(get_vaccine = \"yes\"): argument \"barrier_gest\" is missing, with no default\ncontain_covid19_stop <- function(barrier_gest, wear_mask, get_vaccine){\n  \n  if(!is.character(barrier_gest)) (stop(\"arg1 should be a character, please enter the value with `yes`, `no` or `sometimes\"))\n  \n  if (barrier_gest == \"yes\" & wear_mask ==\"yes\" & get_vaccine == \"yes\" ) \n       \n       return (\"success\")\n  \n  else(\"please make sure all are yes, this pandemic has to end!\")\n}\n\n\ncontain_covid19_stop(barrier_gest=1, wear_mask=\"yes\", get_vaccine = \"no\")## Error in contain_covid19_stop(barrier_gest = 1, wear_mask = \"yes\", get_vaccine = \"no\"): arg1 should be a character, please enter the value with `yes`, `no` or `sometimes\nmap(linelist, mean)## $case_id\n## [1] NA\n## \n## $generation\n## [1] 16.56165\n## \n## $date_infection\n## [1] NA\n## \n## $date_onset\n## [1] NA\n## \n## $date_hospitalisation\n## [1] \"2014-11-03\"\n## \n## $date_outcome\n## [1] NA\n## \n## $outcome\n## [1] NA\n## \n## $gender\n## [1] NA\n## \n## $age\n## [1] NA\n## \n## $age_unit\n## [1] NA\n## \n## $age_years\n## [1] NA\n## \n## $age_cat\n## [1] NA\n## \n## $age_cat5\n## [1] NA\n## \n## $hospital\n## [1] NA\n## \n## $lon\n## [1] -13.23381\n## \n## $lat\n## [1] 8.469638\n## \n## $infector\n## [1] NA\n## \n## $source\n## [1] NA\n## \n## $wt_kg\n## [1] 52.64487\n## \n## $ht_cm\n## [1] 124.9633\n## \n## $ct_blood\n## [1] 21.20686\n## \n## $fever\n## [1] NA\n## \n## $chills\n## [1] NA\n## \n## $cough\n## [1] NA\n## \n## $aches\n## [1] NA\n## \n## $vomit\n## [1] NA\n## \n## $temp\n## [1] NA\n## \n## $time_admission\n## [1] NA\n## \n## $bmi\n## [1] 46.89023\n## \n## $days_onset_hosp\n## [1] NA\nsafe_mean <- safely(mean)\nlinelist %>% \n  map(safe_mean)## $case_id\n## $case_id$result\n## [1] NA\n## \n## $case_id$error\n## NULL\n## \n## \n## $generation\n## $generation$result\n## [1] 16.56165\n## \n## $generation$error\n## NULL\n## \n## \n## $date_infection\n## $date_infection$result\n## [1] NA\n## \n## $date_infection$error\n## NULL\n## \n## \n## $date_onset\n## $date_onset$result\n## [1] NA\n## \n## $date_onset$error\n## NULL\n## \n## \n## $date_hospitalisation\n## $date_hospitalisation$result\n## [1] \"2014-11-03\"\n## \n## $date_hospitalisation$error\n## NULL\n## \n## \n## $date_outcome\n## $date_outcome$result\n## [1] NA\n## \n## $date_outcome$error\n## NULL\n## \n## \n## $outcome\n## $outcome$result\n## [1] NA\n## \n## $outcome$error\n## NULL\n## \n## \n## $gender\n## $gender$result\n## [1] NA\n## \n## $gender$error\n## NULL\n## \n## \n## $age\n## $age$result\n## [1] NA\n## \n## $age$error\n## NULL\n## \n## \n## $age_unit\n## $age_unit$result\n## [1] NA\n## \n## $age_unit$error\n## NULL\n## \n## \n## $age_years\n## $age_years$result\n## [1] NA\n## \n## $age_years$error\n## NULL\n## \n## \n## $age_cat\n## $age_cat$result\n## [1] NA\n## \n## $age_cat$error\n## NULL\n## \n## \n## $age_cat5\n## $age_cat5$result\n## [1] NA\n## \n## $age_cat5$error\n## NULL\n## \n## \n## $hospital\n## $hospital$result\n## [1] NA\n## \n## $hospital$error\n## NULL\n## \n## \n## $lon\n## $lon$result\n## [1] -13.23381\n## \n## $lon$error\n## NULL\n## \n## \n## $lat\n## $lat$result\n## [1] 8.469638\n## \n## $lat$error\n## NULL\n## \n## \n## $infector\n## $infector$result\n## [1] NA\n## \n## $infector$error\n## NULL\n## \n## \n## $source\n## $source$result\n## [1] NA\n## \n## $source$error\n## NULL\n## \n## \n## $wt_kg\n## $wt_kg$result\n## [1] 52.64487\n## \n## $wt_kg$error\n## NULL\n## \n## \n## $ht_cm\n## $ht_cm$result\n## [1] 124.9633\n## \n## $ht_cm$error\n## NULL\n## \n## \n## $ct_blood\n## $ct_blood$result\n## [1] 21.20686\n## \n## $ct_blood$error\n## NULL\n## \n## \n## $fever\n## $fever$result\n## [1] NA\n## \n## $fever$error\n## NULL\n## \n## \n## $chills\n## $chills$result\n## [1] NA\n## \n## $chills$error\n## NULL\n## \n## \n## $cough\n## $cough$result\n## [1] NA\n## \n## $cough$error\n## NULL\n## \n## \n## $aches\n## $aches$result\n## [1] NA\n## \n## $aches$error\n## NULL\n## \n## \n## $vomit\n## $vomit$result\n## [1] NA\n## \n## $vomit$error\n## NULL\n## \n## \n## $temp\n## $temp$result\n## [1] NA\n## \n## $temp$error\n## NULL\n## \n## \n## $time_admission\n## $time_admission$result\n## [1] NA\n## \n## $time_admission$error\n## NULL\n## \n## \n## $bmi\n## $bmi$result\n## [1] 46.89023\n## \n## $bmi$error\n## NULL\n## \n## \n## $days_onset_hosp\n## $days_onset_hosp$result\n## [1] NA\n## \n## $days_onset_hosp$error\n## NULL"},{"path":"writing-functions.html","id":"resources-3","chapter":"5 Writing functions","heading":"5.9 Resources","text":"R Data Science linkCheatsheet advance R programmingCheatsheet purr PackageVideo-ACM talk Hadley Wickham: joy functional programming (map_dbl work)","code":""},{"path":"directory-interactions.html","id":"directory-interactions","chapter":"6 Directory interactions","heading":"6 Directory interactions","text":"page cover common scenarios create, interact , save, import directories (folders).","code":""},{"path":"directory-interactions.html","id":"preparation-5","chapter":"6 Directory interactions","heading":"6.1 Preparation","text":"","code":""},{"path":"directory-interactions.html","id":"fs-package","chapter":"6 Directory interactions","heading":"fs package","text":"fs package tidyverse package facilitate directory interactions, improving base R functions. sections often use functions fs.","code":"\npacman::p_load(\n  fs,             # file/directory interactions\n  rio,            # import/export\n  here,           # relative file pathways\n  tidyverse)      # data management and visualization"},{"path":"directory-interactions.html","id":"print-directory-as-a-dendrogram-tree","chapter":"6 Directory interactions","heading":"Print directory as a dendrogram tree","text":"Use function dir_tree() fs.Provide folder filepath path = decide whether want show one level (recurse = FALSE) files sub-levels (recurse = TRUE). use () shorthand R project specify sub-folder “data”, contains data used R handbook. set display files within “data” sub-folders (e.g. “cache”, “epidemic models”, “population”, “shp”, “weather”).","code":"\nfs::dir_tree(path = here(\"data\"), recurse = TRUE)## C:/Users/neale/Documents/Applied Epi/repos/epiRhandbook_eng/data\n## ├── africa_countries.geo.json\n## ├── cache\n## │   └── epidemic_models\n## │       ├── 2015-04-30\n## │       │   ├── estimated_reported_cases_samples.rds\n## │       │   ├── estimate_samples.rds\n## │       │   ├── latest_date.rds\n## │       │   ├── reported_cases.rds\n## │       │   ├── summarised_estimated_reported_cases.rds\n## │       │   ├── summarised_estimates.rds\n## │       │   └── summary.rds\n## │       ├── epinow_res.rds\n## │       ├── epinow_res_small.rds\n## │       ├── generation_time.rds\n## │       └── incubation_period.rds\n## ├── case_linelists\n## │   ├── cleaning_dict.csv\n## │   ├── fluH7N9_China_2013.csv\n## │   ├── linelist_cleaned.rds\n## │   ├── linelist_cleaned.xlsx\n## │   └── linelist_raw.xlsx\n## ├── country_demographics.csv\n## ├── covid_example_data\n## │   ├── covid_example_data.xlsx\n## │   └── covid_shapefile\n## │       ├── FultonCountyZipCodes.cpg\n## │       ├── FultonCountyZipCodes.dbf\n## │       ├── FultonCountyZipCodes.prj\n## │       ├── FultonCountyZipCodes.sbn\n## │       ├── FultonCountyZipCodes.sbx\n## │       ├── FultonCountyZipCodes.shp\n## │       ├── FultonCountyZipCodes.shp.xml\n## │       └── FultonCountyZipCodes.shx\n## ├── covid_incidence.csv\n## ├── covid_incidence_map.R\n## ├── district_count_data.xlsx\n## ├── example\n## │   ├── Central Hospital.csv\n## │   ├── district_weekly_count_data.xlsx\n## │   ├── fluH7N9_China_2013.csv\n## │   ├── hospital_linelists.xlsx\n## │   ├── linelists\n## │   │   ├── 20201007linelist.csv\n## │   │   ├── case_linelist20201006.csv\n## │   │   ├── case_linelist_2020-10-02.csv\n## │   │   ├── case_linelist_2020-10-03.csv\n## │   │   ├── case_linelist_2020-10-04.csv\n## │   │   ├── case_linelist_2020-10-05.csv\n## │   │   └── case_linelist_2020-10-08.xlsx\n## │   ├── Military Hospital.csv\n## │   ├── Missing.csv\n## │   ├── Other.csv\n## │   ├── Port Hospital.csv\n## │   └── St. Mark's Maternity Hospital (SMMH).csv\n## ├── facility_count_data.rds\n## ├── flexdashboard\n## │   ├── outbreak_dashboard.html\n## │   ├── outbreak_dashboard.Rmd\n## │   ├── outbreak_dashboard_shiny.Rmd\n## │   ├── outbreak_dashboard_test.html\n## │   └── outbreak_dashboard_test.Rmd\n## ├── fluH7N9_China_2013.csv\n## ├── gis\n## │   ├── africa_countries.geo.json\n## │   ├── covid_incidence.csv\n## │   ├── covid_incidence_map.R\n## │   ├── linelist_cleaned_with_adm3.rds\n## │   ├── population\n## │   │   ├── sle_admpop_adm3_2020.csv\n## │   │   └── sle_population_statistics_sierraleone_2020.xlsx\n## │   └── shp\n## │       ├── README.txt\n## │       ├── sle_adm3.CPG\n## │       ├── sle_adm3.dbf\n## │       ├── sle_adm3.prj\n## │       ├── sle_adm3.sbn\n## │       ├── sle_adm3.sbx\n## │       ├── sle_adm3.shp\n## │       ├── sle_adm3.shp.xml\n## │       ├── sle_adm3.shx\n## │       ├── sle_hf.CPG\n## │       ├── sle_hf.dbf\n## │       ├── sle_hf.prj\n## │       ├── sle_hf.sbn\n## │       ├── sle_hf.sbx\n## │       ├── sle_hf.shp\n## │       └── sle_hf.shx\n## ├── godata\n## │   ├── cases_clean.rds\n## │   ├── contacts_clean.rds\n## │   ├── followups_clean.rds\n## │   └── relationships_clean.rds\n## ├── likert_data.csv\n## ├── linelist_cleaned.rds\n## ├── linelist_cleaned.xlsx\n## ├── linelist_raw.xlsx\n## ├── make_evd_dataset-DESKTOP-JIEUMMI.R\n## ├── make_evd_dataset.R\n## ├── malaria_app\n## │   ├── app.R\n## │   ├── data\n## │   │   └── facility_count_data.rds\n## │   ├── funcs\n## │   │   └── plot_epicurve.R\n## │   ├── global.R\n## │   ├── malaria_app.Rproj\n## │   ├── server.R\n## │   └── ui.R\n## ├── malaria_facility_count_data.rds\n## ├── phylo\n## │   ├── sample_data_Shigella_tree.csv\n## │   ├── Shigella_subtree_2.nwk\n## │   ├── Shigella_subtree_2.txt\n## │   └── Shigella_tree.txt\n## ├── rmarkdown\n## │   ├── outbreak_report.docx\n## │   ├── outbreak_report.html\n## │   ├── outbreak_report.pdf\n## │   ├── outbreak_report.pptx\n## │   ├── outbreak_report.Rmd\n## │   ├── report_tabbed_example.html\n## │   └── report_tabbed_example.Rmd\n## ├── standardization\n## │   ├── country_demographics.csv\n## │   ├── country_demographics_2.csv\n## │   ├── deaths_countryA.csv\n## │   ├── deaths_countryB.csv\n## │   └── world_standard_population_by_sex.csv\n## ├── surveys\n## │   ├── population.xlsx\n## │   ├── survey_data.xlsx\n## │   └── survey_dict.xlsx\n## └── time_series\n##     ├── campylobacter_germany.xlsx\n##     └── weather\n##         ├── germany_weather2002.nc\n##         ├── germany_weather2003.nc\n##         ├── germany_weather2004.nc\n##         ├── germany_weather2005.nc\n##         ├── germany_weather2006.nc\n##         ├── germany_weather2007.nc\n##         ├── germany_weather2008.nc\n##         ├── germany_weather2009.nc\n##         ├── germany_weather2010.nc\n##         └── germany_weather2011.nc"},{"path":"directory-interactions.html","id":"list-files-in-a-directory","chapter":"6 Directory interactions","heading":"6.2 List files in a directory","text":"list just file names directory can use dir() base R. example, command lists file names files “population” subfolder “data” folder R project. relative filepath provided using () (can read [Import export] page).list full file paths directory’s files, can use can use dir_ls() fs. base R alternative list.files().get metadata information file directory, (e.g. path, modification date, etc.) can use dir_info() fs.can particularly useful want extract last modification time file, example want import recent version file. example , see [Import export] page.data frame returned. Scroll right see columns.","code":"\n# file names\ndir(here(\"data\", \"gis\", \"population\"))## [1] \"sle_admpop_adm3_2020.csv\"                        \"sle_population_statistics_sierraleone_2020.xlsx\"\n# file paths\ndir_ls(here(\"data\", \"gis\", \"population\"))## C:/Users/neale/Documents/Applied Epi/repos/epiRhandbook_eng/data/gis/population/sle_admpop_adm3_2020.csv\n## C:/Users/neale/Documents/Applied Epi/repos/epiRhandbook_eng/data/gis/population/sle_population_statistics_sierraleone_2020.xlsx\n# file info\ndir_info(here(\"data\", \"gis\", \"population\"))"},{"path":"directory-interactions.html","id":"file-information","chapter":"6 Directory interactions","heading":"6.3 File information","text":"extract metadata information specific file, can use file_info() fs (file.info() base R).use $ index result return modification_time value.","code":"\nfile_info(here(\"data\", \"case_linelists\", \"linelist_cleaned.rds\"))\nfile_info(here(\"data\", \"case_linelists\", \"linelist_cleaned.rds\"))$modification_time## [1] \"2022-03-03 16:18:33 CET\""},{"path":"directory-interactions.html","id":"check-if-exists","chapter":"6 Directory interactions","heading":"6.4 Check if exists","text":"","code":""},{"path":"directory-interactions.html","id":"r-objects","chapter":"6 Directory interactions","heading":"R objects","text":"can use exists() base R check whether R object exists within R (supply object name quotes).Note base R packages use generic object names like “data” behind scenes, appear TRUE unless inherit = FALSE specified. one reason name dataset “data”.writing function, use missing() base R check argument present , instead exists().","code":"\nexists(\"linelist\")## [1] TRUE\nexists(\"data\")## [1] TRUE\nexists(\"data\", inherit = FALSE)## [1] FALSE"},{"path":"directory-interactions.html","id":"directories","chapter":"6 Directory interactions","heading":"Directories","text":"check whether directory exists, provide file path (file name) is_dir() fs. Scroll right see TRUE printed.alternative file.exists() base R.","code":"\nis_dir(here(\"data\"))## C:/Users/neale/Documents/Applied Epi/repos/epiRhandbook_eng/data \n##                                                             TRUE"},{"path":"directory-interactions.html","id":"files","chapter":"6 Directory interactions","heading":"Files","text":"check specific file exists, use is_file() fs. Scroll right see TRUE printed.base R alternative file.exists().","code":"\nis_file(here(\"data\", \"case_linelists\", \"linelist_cleaned.rds\"))## C:/Users/neale/Documents/Applied Epi/repos/epiRhandbook_eng/data/case_linelists/linelist_cleaned.rds \n##                                                                                                 TRUE"},{"path":"directory-interactions.html","id":"create","chapter":"6 Directory interactions","heading":"6.5 Create","text":"","code":""},{"path":"directory-interactions.html","id":"directories-1","chapter":"6 Directory interactions","heading":"Directories","text":"create new directory (folder) can use dir_create() fs. directory already exists, overwritten error returned.alternative dir.create() base R, show error directory already exists. contrast, dir_create() scenario silent.","code":"\ndir_create(here(\"data\", \"test\"))"},{"path":"directory-interactions.html","id":"files-1","chapter":"6 Directory interactions","heading":"Files","text":"can create (empty) file file_create() fs. file already exists, -written changed.base R alternative file.create(). file already exists, option truncate . use file_create() file left unchanged.","code":"\nfile_create(here(\"data\", \"test.rds\"))"},{"path":"directory-interactions.html","id":"create-if-does-not-exists","chapter":"6 Directory interactions","heading":"Create if does not exists","text":"CONSTRUCTION","code":""},{"path":"directory-interactions.html","id":"delete","chapter":"6 Directory interactions","heading":"6.6 Delete","text":"","code":""},{"path":"directory-interactions.html","id":"r-objects-1","chapter":"6 Directory interactions","heading":"R objects","text":"Use rm() base R remove R object.","code":""},{"path":"directory-interactions.html","id":"directories-2","chapter":"6 Directory interactions","heading":"Directories","text":"Use dir_delete() fs.","code":""},{"path":"directory-interactions.html","id":"files-2","chapter":"6 Directory interactions","heading":"Files","text":"can delete files file_delete() fs.","code":""},{"path":"directory-interactions.html","id":"running-other-files","chapter":"6 Directory interactions","heading":"6.7 Running other files","text":"","code":""},{"path":"directory-interactions.html","id":"source","chapter":"6 Directory interactions","heading":"source()","text":"run one R script another R script, can use source() command (base R).equivalent viewing R script clicking “Source” button upper-right script. execute script silently (output R console) unless specifically intended. See page [Interactive console] examples using source() interact user via R console question--answer mode.","code":"\nsource(here(\"scripts\", \"cleaning_scripts\", \"clean_testing_data.R\"))"},{"path":"directory-interactions.html","id":"render","chapter":"6 Directory interactions","heading":"render()","text":"render() variation source() often used R markdown scripts. provide input = R markdown file, also output_format = (typically either “html_document”, “pdf_document”, “word_document”, ““)See page Reports R Markdown details. Also see documentation render() entering ?render.","code":""},{"path":"directory-interactions.html","id":"run-files-in-a-directory","chapter":"6 Directory interactions","heading":"Run files in a directory","text":"can create loop use source() every file directory, identified dir().want run certain scripts, can identify name like :comparison fs base R functions.","code":"\nfor(script in dir(here(\"scripts\"), pattern = \".R$\")) {   # for each script name in the R Project's \"scripts\" folder (with .R extension)\n  source(here(\"scripts\", script))                        # source the file with the matching name that exists in the scripts folder\n}\nscripts_to_run <- c(\n     \"epicurves.R\",\n     \"demographic_tables.R\",\n     \"survival_curves.R\"\n)\n\nfor(script in scripts_to_run) {\n  source(here(\"scripts\", script))\n}"},{"path":"directory-interactions.html","id":"import-files-in-a-directory","chapter":"6 Directory interactions","heading":"Import files in a directory","text":"See page [Import export] importing exporting individual files.Also see [Import export] page methods automatically import recent file, based date file name looking file meta-data.See page [Iteration, loops, lists] example package purrr demonstrating:Splitting data frame saving multiple CSV filesSplitting data frame saving part separate sheet within one Excel workbookImporting multiple CSV files combining one dataframeImporting Excel workbook multiple sheets combining one dataframe","code":""},{"path":"directory-interactions.html","id":"base-r","chapter":"6 Directory interactions","heading":"6.8 base R","text":"See functions list.files() dir(), perform operation listing files within specified directory. can specify ignore.case = specific pattern look .file currently “open”, display folder tilde front, like “~$hospital_linelists.xlsx”.","code":"\nlist.files(path = here(\"data\"))\n\nlist.files(path = here(\"data\"), pattern = \".csv\")\n# dir(path = here(\"data\"), pattern = \".csv\")\n\nlist.files(path = here(\"data\"), pattern = \"evd\", ignore.case = TRUE)"},{"path":"directory-interactions.html","id":"resources-4","chapter":"6 Directory interactions","heading":"6.9 Resources","text":"https://cran.r-project.org/web/packages/fs/vignettes/function-comparisons.html","code":""},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"version-control-and-collaboration-with-git-and-github","chapter":"7 Version control and collaboration with Git and Github","heading":"7 Version control and collaboration with Git and Github","text":"chapter presents overview using Git collaborate others.\nextensive tutorials can \nfound bottom Resources section.","code":""},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"what-is-git","chapter":"7 Version control and collaboration with Git and Github","heading":"7.1 What is Git?","text":"Git version control software allows tracking changes \nfolder. can used like “track change” option Word, LibreOffice \nGoogle docs, types files. one powerful\nused options version control.never heard ? - people developer\nbackground routinely learn use version control software (Git,\nMercurial, Subversion others), us \nquantitative disciplines taught skills. Consequently, epidemiologists never\nhear studies, learn fly.Wait, heard Github, ? - exactly, \noften use together, show . short:Git version control system, piece software. can use \nlocally computer synchronize folder \nhost website. default, one uses terminal give Git\ninstructions command-line.Git version control system, piece software. can use \nlocally computer synchronize folder \nhost website. default, one uses terminal give Git\ninstructions command-line.can use Git client/interface avoid command-line \nperform actions (least simple, super common\nones).can use Git client/interface avoid command-line \nperform actions (least simple, super common\nones).want store folder host website \ncollaborate others, may create account Github,\nGitlab, Bitbucket others.want store folder host website \ncollaborate others, may create account Github,\nGitlab, Bitbucket others.use client/interface Github Desktop, uses\nGit background manage files, locally \ncomputer, remotely Github server.","code":""},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"why-use-the-combo-git-and-github","chapter":"7 Version control and collaboration with Git and Github","heading":"7.2 Why use the combo Git and Github?","text":"Using Git facilitates:Archiving documented versions incremental changes \ncan easily revert backwards previous stateHaving parallel branches, .e. developing/“working” versions \nstructured ways integrate changes reviewThis can done locally computer, even don’t collaborate\npeople. ever:regretted deleted section code, realize two\nmonths later actually needed ?regretted deleted section code, realize two\nmonths later actually needed ?come back project pause attempted \nremember whether made tricky modification one \nmodels?come back project pause attempted \nremember whether made tricky modification one \nmodels?file model_1.R another file model_1_test.R file\nmodel_1_not_working.R try things ?file model_1.R another file model_1_test.R file\nmodel_1_not_working.R try things ?file report.Rmd, file report_full.Rmd, file\nreport_true_final.Rmd, file report_final_20210304.Rmd, file\nreport_final_20210402.Rmd cursed archiving skills?file report.Rmd, file report_full.Rmd, file\nreport_true_final.Rmd, file report_final_20210304.Rmd, file\nreport_final_20210402.Rmd cursed archiving skills?Git help , worth learn alone.However, becomes even powerful used online repository\nGithub support collaborative projects. facilitates:Collaboration: others can review, comment , \naccept/decline changesCollaboration: others can review, comment , \naccept/decline changesSharing code, data, outputs, invite feedback\npublic (privately, team)Sharing code, data, outputs, invite feedback\npublic (privately, team)avoids:“Oops, forgot send last version now need \nredo two days worth work new file”“Oops, forgot send last version now need \nredo two days worth work new file”Mina, Henry Oumar worked time one script \nneed manually merge changesMina, Henry Oumar worked time one script \nneed manually merge changesTwo people try modify file Dropbox Sharepoint\ncreates synchronization error.Two people try modify file Dropbox Sharepoint\ncreates synchronization error.","code":""},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"this-sounds-complicated-i-am-not-a-programmer","chapter":"7 Version control and collaboration with Git and Github","heading":"This sounds complicated, I am not a programmer","text":"can . Examples advanced uses can quite scary. However, much\nlike R, even Excel, don’t need become expert reap \nbenefits tool. Learning small number functions notions\nlets track changes, synchronize files online\nrepository collaborate colleagues short amount\ntime.Due learning curve, emergency context may best time\nlearn tools. learning can achieved steps. acquire\ncouple notions, workflow can quite efficient fast.\nworking project collaborating people\nGit necessity, actually good time get\nconfident using solo diving collaboration.","code":""},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"setup","chapter":"7 Version control and collaboration with Git and Github","heading":"7.3 Setup","text":"","code":""},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"install-git","chapter":"7 Version control and collaboration with Git and Github","heading":"Install Git","text":"Git engine behind scenes computer, tracks\nchanges, branches (versions), merges, reverting. must first\ninstall Git https://git-scm.com/downloads.","code":""},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"install-an-interface-optional-but-recommended","chapter":"7 Version control and collaboration with Git and Github","heading":"Install an interface (optional but recommended)","text":"Git language commands, can typed command\nline terminal. However, many clients/interfaces non-developpers, \nday--day use, rarely need interact Git directly \ninterface usually provide nice visualisation tools file modifications branches.Many options exist, OS, beginner friendly complex ones.\nGood options beginners include RStudio Git pane \nGithub Desktop, showcase \nchapter.\nIntermediate (powerfull, complex) options include Source Tree,\nGitkracken, Smart Git others.Quick explanation Git clients.Note: since interfaces actually use Git internally, can try several \n, switch one another given project, use console punctually\naction interface support, even perform number \nactions online Github.noted , may occasionally write Git commands \nterminal RStudio terminal pane (tab adjacent R\nConsole) Git Bash terminal.","code":""},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"github-account","chapter":"7 Version control and collaboration with Git and Github","heading":"Github account","text":"Sign-free account github.com.may offered set-two-factor authentication app \nphone. Read Github help\ndocuments.use Github Desktop, can enter Gitub credentials \ninstallation following \nsteps.\ndon’t know, credentials asked later try \nclone project Github.","code":""},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"vocabulary-concepts-and-basic-functions","chapter":"7 Version control and collaboration with Git and Github","heading":"7.4 Vocabulary, concepts and basic functions","text":"learning R, bit vocabulary remember \nunderstand Git. basics get \ngoing\n/ interactive tutorial. next\nsections, show use interfaces, good\nvocabulary concepts mind, build mental model,\n’ll need using interfaces anyway.","code":""},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"repository","chapter":"7 Version control and collaboration with Git and Github","heading":"Repository","text":"Git repository (“repo”) folder contains \nsub-folders files project (data, code, images, etc.) \nrevision histories. begin tracking changes \nrepository , Git create hidden folder contains\ntracking information. typical Git repository \nR Project folder (see handbook page [R projects]).show create (initialize) Git repository\nGithub, Github Desktop Rstudio next\nsections.","code":""},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"commits","chapter":"7 Version control and collaboration with Git and Github","heading":"Commits","text":"commit snapshot project given time.\nmake change project, make new commit\ntrack changes (delta) made \nfiles. example, perhaps edited lines code updated \nrelated dataset. changes saved, can bundle \nchanges together one “commit”.commit unique ID (hash). version control purposes,\ncan revert project back time based commits, best\nkeep relatively small coherent. also attach brief\ndescription changes called “commit message”.Staged changes? stage changes add staging area\npreparation next commit. idea can finely\ndecide changes include given commit. example, \nworked model specification one script, later figure \nanother script, make sense two different commits (easier\ncase wanted revert changes figure model).","code":""},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"branches","chapter":"7 Version control and collaboration with Git and Github","heading":"Branches","text":"branch represents independent line changes repo, \nparallel, alternate version project files.Branches useful test changes incorporated \nmain branch, usually primary/final/“live” version \nproject. done experimenting branch, can bring\nchanges main branch, merging , delete , \nchanges successful.Note: collaborate people use branches,\nneed remote online repository.","code":""},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"local-and-remote-repositories","chapter":"7 Version control and collaboration with Git and Github","heading":"Local and remote repositories","text":"clone create copy Git repository another place.example, can clone online repository Github locally \ncomputer, begin local repository clone\nonline Github.cloned repository, project files exist \ntwo places:LOCAL repository physical computer. \nmake actual changes files/code.LOCAL repository physical computer. \nmake actual changes files/code.REMOTE, online repository: versions project files\nGithub repository (web\nhost).REMOTE, online repository: versions project files\nGithub repository (web\nhost).synchronize repositories, use functions. Indeed,\nunlike Sharepoint, Dropbox synchronizing software, Git \nautomatically update local repository based ’s online,\nvice-versa. get choose synchronize.git fetch downloads new changes remote repository \nchange local repository. Think checking state remote repository.git fetch downloads new changes remote repository \nchange local repository. Think checking state remote repository.git pull downloads new changes remote repositories\nupdate local repository.git pull downloads new changes remote repositories\nupdate local repository.made one several commits locally, can\ngit push commits remote repository. sends \nchanges Github people can see pull \nwant .made one several commits locally, can\ngit push commits remote repository. sends \nchanges Github people can see pull \nwant .","code":""},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"get-started-create-a-new-repository","chapter":"7 Version control and collaboration with Git and Github","heading":"7.5 Get started: create a new repository","text":"many ways create new repositories. can \nconsole, Github, interface.Two general approaches set-:Create new R Project existing new Github repository\n(preferred beginners), orCreate Github repository existing R project","code":""},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"start-up-files","chapter":"7 Version control and collaboration with Git and Github","heading":"Start-up files","text":"create new repository, can optionally create\nfiles, can add repository later stage.\ntypically live “root” folder repository.README file file someone can read understand \nproject exists else know use . \nempty first, complete later.README file file someone can read understand \nproject exists else know use . \nempty first, complete later..gitignore file text file line contain\nfolders files Git ignore (track changes). Read\nsee examples\n..gitignore file text file line contain\nfolders files Git ignore (track changes). Read\nsee examples\n.can choose license work, people\nknow conditions can use reproduce work. \ninformation, see Creative Commons\nlicenses.can choose license work, people\nknow conditions can use reproduce work. \ninformation, see Creative Commons\nlicenses.","code":""},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"create-a-new-repository-in-github","chapter":"7 Version control and collaboration with Git and Github","heading":"Create a new repository in Github","text":"create new repository, log Github look green\nbutton create new repository. now empty repository can \ncloned locally computer (see next section).must choose want repository public (visible \neveryone internet) private (visible \npermission). important implications data sensitive.\nrepository private encounter quotas advanced\nspecial circumstances, using Github actions \nautomatically run code cloud.","code":""},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"clone-from-a-github-repository","chapter":"7 Version control and collaboration with Git and Github","heading":"Clone from a Github repository","text":"can clone existing Github repository create\nnew local R project computer.Github repository one already exists contains\ncontent, empty repository just created. \nlatter case essentially creating Github repo local R\nproject time (see instructions ).Note: contributing rights Github repository,\npossible first fork repository profile, \nproceed actions. Forking explained end \nchapter, recommend read sections first.Step 1: Navigate Github repository, click green “Code”\nbutton copy HTTPS clone URL (see image )next step can performed interface. illustrate \nRstudio Github desktop.","code":""},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"in-rstudio","chapter":"7 Version control and collaboration with Git and Github","heading":"In Rstudio","text":"RStudio, start new R project clicking File > New Project >\nVersion Control > GitWhen prompted “Repository URL”, paste HTTPS URL \nGithubAssign R project short, informative nameChoose new R Project saved locallyCheck “Open new session” click “Create project”now new, local, RStudio project clone \nGithub repository. local project Github repository now\nlinked.","code":""},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"in-github-desktop","chapter":"7 Version control and collaboration with Git and Github","heading":"In Github Desktop","text":"Click File > Clone repositoryClick File > Clone repositorySelect URL tabSelect URL tabPaste HTTPS URL Github first boxPaste HTTPS URL Github first boxSelect folder want local repositorySelect folder want local repositoryClick “CLONE”Click “CLONE”","code":""},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"new-github-repo-from-existing-r-project","chapter":"7 Version control and collaboration with Git and Github","heading":"New Github repo from existing R project","text":"alternative setup scenario existing R project\ncontent, want create Github repository .Create new, empty Github repository project (see\ninstructions )Clone repository locally (see HTTPS instructions )Copy content pre-existing R\nproject (codes, data, etc.) new empty, local, repository (e.g. use copy paste).Open new project RStudio, go Git pane. new files \nregister file changes, now tracked Git. Therefore, can\nbundle changes commit push Github.\npushed, repository Github reflect files.See Github workflow section details process.","code":""},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"what-does-it-look-like-now","chapter":"7 Version control and collaboration with Git and Github","heading":"What does it look like now?","text":"","code":""},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"in-rstudio-1","chapter":"7 Version control and collaboration with Git and Github","heading":"In RStudio","text":"cloned Github repository new R project,\nnow see RStudio “Git” tab. tab appears RStudio pane\nR Environment:Please note buttons circled image , \nreferenced later (left right):Button commit saved file changes local\nbranch (open new window)Blue arrow pull (update local version branch \nchanges made remote/Github version branch)Green arrow push (send commits/changes local\nversion branch remote/Github version branch)Git tab RStudioButton create NEW branch using whichever local branch shown\nright base. almost always want branch \nmain branch (first pull update main branch)branch currently working inChanges made code files appear ","code":""},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"in-github-desktop-1","chapter":"7 Version control and collaboration with Git and Github","heading":"In Github Desktop","text":"Github Desktop independent application allows manage\nrepositories. open , interface allows \nchoose repository want work , perform basic Git\nactions .","code":""},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"git-github-workflow","chapter":"7 Version control and collaboration with Git and Github","heading":"7.6 Git + Github workflow","text":"","code":""},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"process-overview","chapter":"7 Version control and collaboration with Git and Github","heading":"Process overview","text":"completed setup (described ), \nGithub repo connected (cloned) local R project. \nmain branch (created default) -called “live” version \nfiles. want make modifications, good\npractice create new branch main branch (like “Make \nCopy”). typical workflow Git creating branch \neasy fast.typical workflow follow:Make sure local repository --date, update \nnotMake sure local repository --date, update \nnotGo branch working previously, create new\nbranch try thingsGo branch working previously, create new\nbranch try thingsWork files locally computer, make one several\ncommits branchWork files locally computer, make one several\ncommits branchUpdate remote version branch changes (push)Update remote version branch changes (push)satisfied branch, can merge online\nversion working branch online “main” branch \ntransfer changesWhen satisfied branch, can merge online\nversion working branch online “main” branch \ntransfer changesOther team members may thing branches,\nperhaps contributing commits working branch well.go process step--step detail .\nschematic ’ve developed - ’s format two-way\ntable help epidemiologists understand.’s another diagram.Note: recently, term “master” branch used, now\nreferred “main” branch.Image\nsource","code":""},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"create-a-new-branch","chapter":"7 Version control and collaboration with Git and Github","heading":"7.7 Create a new branch","text":"select branch work , Git resets working directory\nway last time branch.","code":""},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"in-rstudio-git-pane","chapter":"7 Version control and collaboration with Git and Github","heading":"In Rstudio Git pane","text":"Ensure “main” branch, click purple icon \ncreate new branch (see image ).prompted name branch one-word descriptive\nname (can use underscores needed).see locally, still R project, \nlonger working “main” branch.created, new branch also appear Github website\nbranch.can visualize branches Git Pane Rstudio clicking “History”","code":""},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"in-github-desktop-2","chapter":"7 Version control and collaboration with Git and Github","heading":"In Github Desktop","text":"process much similar, prompted give branch\nname. , prompted “Publish branch Github” \nmake new branch appear remote repo well.","code":""},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"in-console","chapter":"7 Version control and collaboration with Git and Github","heading":"In console","text":"actually happening behind scenes create new\nbranch git branch, go branch \ngit checkout (.e. tell Git next commits occur ).\ngit repository:information using console, see section \nGit commands end.","code":"git branch my-new-branch  # Create the new branch branch\ngit checkout my-new-branch # Go to the branch\ngit checkout -b my-new-branch # Both at once (shortcut)"},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"commit-changes","chapter":"7 Version control and collaboration with Git and Github","heading":"7.8 Commit changes","text":"Now can edit code, add new files, update datasets, etc.Every one changes tracked, respective file \nsaved. Changed files appear RStudio Git tab, Github\nDesktop, using command git status terminal (see ).Whenever make substantial changes (e.g. adding updating section \ncode), pause commit changes. Think commit “batch”\nchanges related common purpose. can always continue \nrevise file committed changes .Advice commits: generally, better make small commits, \ncan easily reverted problem arises, commit together\nmodifications related common purpose. achieve , \nfind commit often. beginning, ’ll probably\nforget commit often, habit kicks .","code":""},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"in-rstudio-2","chapter":"7 Version control and collaboration with Git and Github","heading":"In Rstudio","text":"example shows , since last commit, R Markdown script “collaboration.Rmd” changed,\nseveral PNG images added.might wondering yellow, blue, green, red squares next \nfile names represent. snapshot RStudio\ncheatsheet\nexplains meaning. Note changes yellow “?” can still\nstaged, committed, pushed.Press “Commit” button Git tab, open new\nwindow (shown )Press “Commit” button Git tab, open new\nwindow (shown )Click file name upper-left boxClick file name upper-left boxReview changes made file (highlighted green\nred)Review changes made file (highlighted green\nred)“Stage” file, include changes commit. \nchecking box next file name. Alternatively, \ncan highlight multiple file names click “Stage”“Stage” file, include changes commit. \nchecking box next file name. Alternatively, \ncan highlight multiple file names click “Stage”Write commit message short descriptive (required)Write commit message short descriptive (required)Press “Commit” button. pop-box appear showing success\nerror message.Press “Commit” button. pop-box appear showing success\nerror message.Now can make changes commits, many times like","code":""},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"in-github-desktop-3","chapter":"7 Version control and collaboration with Git and Github","heading":"In Github Desktop","text":"can see list files changed left. \nselect text file, see summary modifications made\nright pane (view work complex files like .docs .xlsx).stage changes, just tick little box near file names. \nselected files want add commit, give commit\nname, optionally description click commit\nbutton.","code":""},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"in-console-1","chapter":"7 Version control and collaboration with Git and Github","heading":"In console","text":"two functions used behind scenes git add select/stage\nfiles git commit actually commit.","code":"git status # see the changes \n\ngit add new_pages/collaboration.Rmd  # select files to commit (= stage the changes)\n\ngit commit -m \"Describe commit from Github Desktop\" # commit the changes with a message\n\ngit log  # view information on past commits"},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"amend-a-previous-commit","chapter":"7 Version control and collaboration with Git and Github","heading":"Amend a previous commit","text":"happens commit changes, carry working, realize\nmade changes “belong” past commit (opinion).\nFear ! can append changes previous commit.Rstudio, pretty obvious “Amend previous commit”\nbox line COMMIT button.unclear reason, functionality implemented\nGithub Desktop, (conceptually awkward easy)\nway around. committed pushed changes yet,\n“UNDO” button appears just COMMIT button. Click \nrevert commit (keep staged files commit message).\nSave changes, add new files commit necessary commit .console:Note: think modifying commits already public shared collaborators.","code":"git add [YOUR FILES] # Stage your new changes\n\ngit commit --amend  # Amend the previous commit\n\ngit commit --amend -m \"An updated commit message\"  # Amend the previous commit AND update the commit message"},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"pull-and-push-changes-up-to-github","chapter":"7 Version control and collaboration with Git and Github","heading":"7.9 Pull and push changes up to Github","text":"“First PULL, PUSH”good practice fetch pull begin working \nproject, update branch version local computer \nchanges made remote/Github version.PULL often. Don’t hesitate. Always pull pushing.changes made committed happy \nstate project, can push commits \nremote/Github version branch.Rince repeat working repository.Note: much easier revert changes committed \npushed (.e. still local) revert changes pushed \nremote repository (perhaps already pulled someone else), better\npush done introducing changes task \nworking .","code":""},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"in-rstudio-3","chapter":"7 Version control and collaboration with Git and Github","heading":"In Rstudio","text":"PULL - First, click “Pull” icon (downward arrow) fetches \npulls time.PUSH - Clicking green “Pull” icon (upward arrow). may asked\nenter Github username password. first time \nasked, may need enter two Git command lines Terminal:git config –global user.email\n“@example.com” (Github\nemail address), andgit config –global user.name “Github username”learn enter commands, see section \nGit commands.TIP: Asked provide password often? See chapters\n10 & 11 \ntutorial\nconnect repository using SSH key (\ncomplicated)","code":""},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"in-github-desktop-4","chapter":"7 Version control and collaboration with Git and Github","heading":"In Github Desktop","text":"Click “Fetch origin” button check new commits \nremote repository.Git finds new commits remote repository, button \nchange “Pull” button. button used push \npull, push changes don’t pull .can go “History” tab (near “Changes” tab) see \ncommits (others). nice way acquainting \ncollaborators . can read commit message, \ndescription one, compare code two files using\ndiff pane.remote changes pulled, least one local change\ncommitted, can push clicking button.","code":""},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"console","chapter":"7 Version control and collaboration with Git and Github","heading":"Console","text":"Without surprise, commands fetch, pull push.","code":"git fetch  # are there new commits in the remote directory?\ngit pull   # Bring remote commits into your local branch\ngit push   # Puch local commits of this branch to the remote branch"},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"i-want-to-pull-but-i-have-local-work","chapter":"7 Version control and collaboration with Git and Github","heading":"I want to pull but I have local work","text":"can happen sometimes:\nmade changes local repository, remote\nrepository commits didn’t pull.Git refuse pull might overwrite changes.\nseveral strategies keep changes,\nwell described Happy Git R,\namong two main ones :\n- commit changes, fetch remote changes, pull , resolve conflicts\nneeded (see section ), push everything online\n- stash changes, sort stores aside, pull, unstash\n(restore), commit, solve conflicts, push.files concerned remote changes files concerned\nlocal changes overlap, Git may solve conflicts automatically.Github Desktop, can done buttons. stash, go Branch > Stash changes.","code":""},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"merge-branch-into-main","chapter":"7 Version control and collaboration with Git and Github","heading":"7.10 Merge branch into Main","text":"finished making changes, can begin process \nmerging changes main branch. Depending situation,\nmay fast, may deliberate review approval\nsteps involving teammates.","code":""},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"locally-in-github-desktop","chapter":"7 Version control and collaboration with Git and Github","heading":"Locally in Github Desktop","text":"One can merge branches locally using Github Desktop. First, go \n(checkout) branch recipient commits, words, \nbranch want update. go menu Branch > Merge \ncurrent branch click. box allow select branch \nwant import .","code":""},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"in-console-2","chapter":"7 Version control and collaboration with Git and Github","heading":"In console","text":"First move back branch recipient changes.\nusually master, another branch. merge \nworking branch master.\npage\nshows advanced example branching explains bit \nhappening behind scenes.","code":"git checkout master  # Go back to master (or to the branch you want to move your )\ngit merge this_fancy_new_branch"},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"in-github-submitting-pull-requests","chapter":"7 Version control and collaboration with Git and Github","heading":"In Github: submitting pull requests","text":"totally possible merge two branches locally, without\ninforming anybody, merge may discussed investigated several\npeople integrated master branch. help \nprocess, Github offers discussion features around merge: \npull request.pull request (“PR”) request merge one branch another\n(words, request working branch pulled “main” branch).\npull request typically involves multiple commits. pull request usually begins conversation review\nprocess accepted branch merged. example,\ncan read pull request discussions dplyr’s\ngithub.can submit pull request (PR) directly form website (\nillustrated bellow) Github Desktop.Go Github repository (online)View tab “Pull Requests” click “New pull request” buttonSelect drop-menu merge branch mainWrite detailed Pull Request comment click “Create Pull\nRequest”.image , branch “forests” selected merged\n“main”:Now able see pull request (example image ):Review tab “Files changed” see “main” branch \nchange branch merged.right, can request review members team \ntagging Github ID. like, can set repository\nsettings require one approving review order merge \nmain.pull request approved, button \n“Merge pull request” become active. Click .completed, delete branch explained .","code":""},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"resolving-conflicts","chapter":"7 Version control and collaboration with Git and Github","heading":"Resolving conflicts","text":"two people modified line(s) time, \nmerge conflict arises. Indeed, Git refuses make decision \nversion keep, helps find \nconflict . PANIC. time, pretty straightforward\nresolve.example, Github:merge raised conflict, open file favorite editor.\nconflict indicated series characters:text <<<<<<< HEAD ======= comes \nlocal repository, one ======= >>>>>>> \nbranch (may origin, master branch \nchoice).need decide version code prefer (even write \nthird, including changes sides pertinent), delete rest\nremove marks Git added (<<<<<<< HEAD, =======,\n>>>>>>> origin/master/your_branch_name)., save file, stage commit : commit\nmakes merged version “official”. forget push afterwards.often collaborators pull push, smaller \nconflicts .Note: feel ease console, advanced\nmerging\noptions\n(e.g. ignoring whitespace, giving collaborator priority etc.).","code":""},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"delete-your-branch","chapter":"7 Version control and collaboration with Git and Github","heading":"Delete your branch","text":"branch merged master longer needed, can\ndelete .","code":""},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"github-rstudio","chapter":"7 Version control and collaboration with Git and Github","heading":"7.10.0.1 Github + Rstudio","text":"Go repository Github click button view \nbranches (next drop-select branches). Now find \nbranch click trash icon next . Read detail deleting\nbranch\n.sure also delete branch locally computer. \nhappen automatically.RStudio, make sure Main branchSwitch typing Git commands RStudio “Terminal” (tab\nadjacent R console), type: git branch -d\nbranch_name, “branch_name” name branch \ndeletedRefresh Git tab branch gone","code":""},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"in-github-desktop-5","chapter":"7 Version control and collaboration with Git and Github","heading":"7.10.0.2 In Github Desktop","text":"Just checkout branch want delete, go menu\nBranch > Delete.","code":""},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"forking","chapter":"7 Version control and collaboration with Git and Github","heading":"Forking","text":"can fork project like contribute \nrights , just\nwant modify personal use. \nshort description forking can found .Github, click “Fork” button:clone original repository, profile. now,\ntwo versions repository Github: original one,\nmodify, cloned version profile., can proceed clone version online repository locally\ncomputer, using methods described previous sections.\n, can create new branch, make changes, commit push \nremote repository.happy result can create Pull Request\nGithub Github Desktop begin conversation \nowners/maintainers original repository.need newer commits official repository?Imagine someone makes critical modification official repository,\nwant include cloned version.\npossible synchronize fork official repository.\ninvolves using terminal, complicated.\nmostly need remember :\n- upstream = official repository, one modify\n- origin = version repository Github profileYou can read tutorial follow along :First, type Git terminal (inside repo):yet configured upstream repository \nsee two lines, beginning origin. show remote repo\nfetch push point . Remember, origin conventional\nnickname version repository Github. example:Now, add new remote repository:address address Github generates clone\nrepository (see section cloning). Now four remote pointers:Now setup done, whenever want get changes \noriginal (upstream) repository, just go (checkout) \nbranch want update type:conflicts, solve , explained\nResolving conflicts section.Summary: forking cloning, Github server side.\nrest actions typical collaboration workflow actions\n(clone, push, pull, commit, merge, submit pull requests…).Note: forking concept, Git command, also exist Web hosts, like Bitbucket.","code":"git remote -vgit remote add upstream https://github.com/appliedepi/epirhandbook_eng.gitgit fetch upstream # Get the new commits from the remote repository\ngit checkout the_branch_you_want_to_update\ngit merge upstream/the_branch_you_want_to_update  # Merge the upstream branch into your branch.\ngit push # Update your own version of the remote repo"},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"what-we-learned","chapter":"7 Version control and collaboration with Git and Github","heading":"7.11 What we learned","text":"learned :setup Git track modifications folders,connect local repository remote online repository,commit changes,synchronize local remote repositories.get going enough needs \nepidemiologists. usually advanced usage developers.However, know want (need) go , Git offers power simplify\ncommit histories, revert one several commits, cherry-pick commits, etc.\nmay sound like pure wizardry, now basics,\neasier build .Note Git pane Rstudio Github Desktop good \nbeginners / day--day usage line work, offer \ninterface intermediate / advanced Git functions.\ncomplete interfaces allows point--click\n(usually cost complex layout).Remember since can use tool point track repository,\ncan easily install interface try sometimes,\nperform less common complex task occasionally,\npreferring simplified interface rest time (e.g. using\nGithub Desktop time, switching SourceTree Gitbash specific tasks).","code":""},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"git","chapter":"7 Version control and collaboration with Git and Github","heading":"7.12 Git commands","text":"","code":""},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"recommended-learning","chapter":"7 Version control and collaboration with Git and Github","heading":"Recommended learning","text":"learn Git commands interactive tutorial, see \nwebsite.","code":""},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"where-to-enter-commands","chapter":"7 Version control and collaboration with Git and Github","heading":"Where to enter commands","text":"enter commands Git shell.Option 1 can open new Terminal RStudio. tab next \nR Console. type text , click \ndrop-menu “Terminal” select “New terminal”. Type \ncommands blinking space front dollar sign “$”.Option 2 can also open shell (terminal enter commands) \nclicking blue “gears” icon Git tab (near RStudio\nEnvironment). Select “Shell” drop-menu. new window \nopen can type commands dollar sign “$”.Option 3 Right click open “Git Bash ” open \nsort terminal, open Git Bash form application list.\nbeginner-friendly informations Git Bash,\nfind bash commands need.","code":""},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"sample-commands","chapter":"7 Version control and collaboration with Git and Github","heading":"Sample commands","text":"present common git commands. use , keep mind\nbranch active (checked-), change action!commands ,  represents branch name.\n represents hash ID specific\ncommit.  represents number. type \n< > symbols.","code":""},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"resources-5","chapter":"7 Version control and collaboration with Git and Github","heading":"7.13 Resources","text":"Much page informed “Happy Git R”\nwebsite Jenny Bryan. helpful\nsection website helps troubleshoot common Git \nR-related errors.Github.com documentation start\nguide.RStudio “IDE”\ncheatsheet\nincludes tips Git RStudio.https://ohi-science.org/news/github-going-back--timeGit commands beginnersAn interactive\ntutorial learn\nGit commands.https://www.freecodecamp.org/news/-introduction--git--absolute-beginners-86fa1d32ff71/:\ngood learning absolute basics track changes one folder \ncomputer.Nice schematics understand branches:\nhttps://speakerdeck.com/alicebartlett/git--humansTutorials covering basic advanced subjectshttps://tutorialzine.com/2016/06/learn-git--30-minuteshttps://dzone.com/articles/git-tutorial-commands--operations--git\nhttps://swcarpentry.github.io/git-novice/ (short course)\nhttps://rsjakob.gitbooks.io/git/content/chapter1.htmlThe Pro Git book considered official reference.\nchapters ok, usually bit technical. probably good resource\nused Git bit want learn bit precisely\nhappens go .","code":""},{"path":"common-errors.html","id":"common-errors","chapter":"8 Common errors","heading":"8 Common errors","text":"page includes running list common errors suggests solutions troubleshooting .","code":""},{"path":"common-errors.html","id":"interpreting-error-messages","chapter":"8 Common errors","heading":"8.1 Interpreting error messages","text":"R errors can cryptic times, Google friend. Search error message “R” look recent posts StackExchange.com, stackoverflow.com, community.rstudio.com, twitter (#rstats), forums used programmers filed questions answers. Try find recent posts solved similar problems.much searching find answer problem, consider creating reproducible example (“reprex”) posting question . See page Getting help tips create post reproducible example forums.","code":""},{"path":"common-errors.html","id":"common-errors-1","chapter":"8 Common errors","heading":"8.2 Common errors","text":", list common errors potential explanations/solutions. borrowed Noam Ross analyzed common forum posts Stack Overflow R error messages (see analysis )","code":""},{"path":"common-errors.html","id":"typo-errors","chapter":"8 Common errors","heading":"Typo errors","text":"see “unexpected symbol”, check missing commas","code":"Error: unexpected symbol in:\n\"  geom_histogram(stat = \"identity\")+\n  tidyquant::geom_ma(n=7, size = 2, color = \"red\" lty\""},{"path":"common-errors.html","id":"package-errors","chapter":"8 Common errors","heading":"Package errors","text":"likely means typed function name incorrectly, forgot install load package.think using dplyr::select() select() function masked MASS::select() - specify dplyr:: re-order package loading dplyr others.common masking errors stem : plyr::summarise() stats::filter(). Consider using conflicted package.get error saying need remove “00LOCK” file, go “R” library computer directory (e.g. R/win-library/) look folder called “00LOCK”. Delete manually, try installing package . previous install process probably interrupted, led .","code":"could not find function \"x\"...Error in select(data, var) : unused argument (var)Error in install.packages : ERROR: failed to lock directory ‘C:\\Users\\Name\\Documents\\R\\win-library\\4.0’ for modifying\nTry removing ‘C:\\Users\\Name\\Documents\\R\\win-library\\4.0/00LOCK’"},{"path":"common-errors.html","id":"object-errors","chapter":"8 Common errors","heading":"Object errors","text":"see error like try export import: Check spelling file filepath, path contains slashes make sure forward / backward \\. Also make sure used correct file extension (e.g. .csv, .xlsx).means object referencing exist. Perhaps code run properly?means tried access something (element vector list) .","code":"No such file or directory:object 'x' not found Error in 'x': subscript out of bounds"},{"path":"common-errors.html","id":"function-syntax-errors","chapter":"8 Common errors","heading":"Function syntax errors","text":"error (argument .x missing, default) common mutate() supplying function like recode() replace_na() expects provide column name first argument. easy forget.","code":"# ran recode without re-stating the x variable in mutate(x = recode(x, OLD = NEW)\nError: Problem with `mutate()` input `hospital`.\nx argument \".x\" is missing, with no default\ni Input `hospital` is `recode(...)`."},{"path":"common-errors.html","id":"logic-errors","chapter":"8 Common errors","heading":"Logic errors","text":"likely means statement applied something TRUE FALSE.","code":"Error in if"},{"path":"common-errors.html","id":"factor-errors","chapter":"8 Common errors","heading":"Factor errors","text":"see error invalid factor levels, likely column class Factor (contains pre-defined levels) tried add new value . Convert class Character adding new value.","code":"#Tried to add a value (\"Missing\") to a factor (with replace_na operating on a factor)\nProblem with `mutate()` input `age_cat`.\ni invalid factor level, NA generated\ni Input `age_cat` is `replace_na(age_cat, \"Missing\")`.invalid factor level, NA generated"},{"path":"common-errors.html","id":"plotting-errors","chapter":"8 Common errors","heading":"Plotting errors","text":"Error: Insufficient values manual scale. 3 needed 2 provided.\nggplot() scale_fill_manual() values = c(“orange”, “purple”) … insufficient number factor levels … consider whether NA now factor level…probably extra + end ggplot command need delete.","code":"Can't add x object"},{"path":"common-errors.html","id":"r-markdown-errors","chapter":"8 Common errors","heading":"R Markdown errors","text":"error message contains something like Error options[[sprintf(\"fig.%s\", )]], check knitr options top chunk correctly use .width = .height = fig.width= fig.height=.","code":""},{"path":"common-errors.html","id":"miscellaneous-1","chapter":"8 Common errors","heading":"Miscellaneous","text":"Consider whether re-arranged piped dplyr verbs didn’t replace pipe middle, didn’t remove pipe end re-arranging.","code":""},{"path":"common-errors.html","id":"resources-6","chapter":"8 Common errors","heading":"8.3 Resources","text":"another blog post lists common R programming errors faced beginners","code":""},{"path":"getting-help.html","id":"getting-help","chapter":"9 Getting help","heading":"9 Getting help","text":"page covers get help posting Github issue posting reproducible example (“reprex”) online forum.","code":""},{"path":"getting-help.html","id":"github-issues","chapter":"9 Getting help","heading":"9.1 Github issues","text":"Many R packages projects code hosted website Github.com. can communicate directly authors via website posting “Issue”.Read store work Github page [Collaboration Github].Github, project contained within repository. repository contains code, data, outputs, help documentation, etc. also vehicle communicate authors called “Issues”.See Github page incidence2 package (used make epidemic curves). can see “Issues” tab highlighted yellow. can see 5 open issues.Issues tab, can see open issues. Review ensure problem already addressed. can open new issue clicking green button right. need Github account .issue, follow instructions provide minimal, reproducible example. please courteous! people developing R packages projects spare time (like handbook!).read advanced materials handling issues Github repository, check Github documentation Issues.","code":""},{"path":"getting-help.html","id":"reproducible-example","chapter":"9 Getting help","heading":"9.2 Reproducible example","text":"Providing reproducible example (“reprex”) key getting help posting forum Github issue. People want help , give example can work computer. example :Demonstrate problem encounteredBe minimal, includes data code required reproduce problemBe reproducible, objects (e.g. data), package calls (e.g. library() p_load()) includedAlso, sure post sensitive data reprex! can create example data frames, use one data frames built R (enter data() open list datasets).","code":""},{"path":"getting-help.html","id":"the-reprex-package","chapter":"9 Getting help","heading":"The reprex package","text":"reprex package can assist making reproducible example:reprex installed tidyverse, load either packageBegin R script creates problem, step--step, starting loading packages data.Copy code clipboard, run following command:see HTML output appear RStudio Viewer pane. contain code warnings, errors, plot outputs. output also copied clipboard, can post directly Github issue forum post.set session_info = TRUE output sessioninfo::session_info() R R package versions includedYou can provide working directory wd =can read arguments possible variations documentation entering ?reprexIn example , ggplot() command run arguemnt date_format = correct - date_labels =.","code":"\n# install/load tidyverse (which includes reprex)\npacman::p_load(tidyverse)\n# load packages\npacman::p_load(\n     tidyverse,  # data mgmt and vizualization\n     outbreaks)  # example outbreak datasets\n\n# flu epidemic case linelist\noutbreak_raw <- outbreaks::fluH7N9_china_2013  # retrieve dataset from outbreaks package\n\n# Clean dataset\noutbreak <- outbreak_raw %>% \n     mutate(across(contains(\"date\"), as.Date))\n\n# Plot epidemic\n\nggplot(data = outbreak)+\n     geom_histogram(\n          mapping = aes(x = date_of_onset),\n          binwidth = 7\n     )+\n  scale_x_date(\n    date_format = \"%d %m\"\n  )\nreprex::reprex()"},{"path":"getting-help.html","id":"minimal-data","chapter":"9 Getting help","heading":"Minimal data","text":"helpers need able use data - ideally need able create code.create minumal dataset, consider anonymising using subset observations.CONSTRUCTION - can also use function dput() create minimal dataset.","code":""},{"path":"getting-help.html","id":"posting-to-a-forum","chapter":"9 Getting help","heading":"9.3 Posting to a forum","text":"Read lots forum posts. Get understanding posts well-written, ones .First, decide whether ask question . thoroughly reviewed forum website, trying various search terms, see question already asked?First, decide whether ask question . thoroughly reviewed forum website, trying various search terms, see question already asked?Give question informative title (“Help! isn’t working”).Give question informative title (“Help! isn’t working”).Write question:Write question:Introduce situation problemLink posts similar issues explain answer questionInclude relevant information help someone know context workGive minimal reproducible example R session informationUse proper spelling, grammar, punctuation, break question paragraphs easier readMonitor question posted respond requests clarification. courteous gracious - often people answering volunteering time help . follow-question consider whether separate posted question.Monitor question posted respond requests clarification. courteous gracious - often people answering volunteering time help . follow-question consider whether separate posted question.Mark question answered, get answer meets original request. helps others later quickly recognize solution.Mark question answered, get answer meets original request. helps others later quickly recognize solution.Read posts ask good question Stack overflow code conduct.","code":""},{"path":"getting-help.html","id":"resources-7","chapter":"9 Getting help","heading":"9.4 Resources","text":"Tidyverse page get help!Tips producing minimal datasetDocumentation dput function","code":""},{"path":"r-on-network-drives.html","id":"r-on-network-drives","chapter":"10 R on network drives","heading":"10 R on network drives","text":"","code":""},{"path":"r-on-network-drives.html","id":"overview","chapter":"10 R on network drives","heading":"10.1 Overview","text":"Using R network “company” shared drives can present additional challenges. page contains approaches, common errors, suggestions troubleshooting gained experience working issues. include tips particularly delicate situations involving R Markdown.Using R Network Drives: Overarching principlesYou must get administrator access computer. Setup RStudio specifically run administrator.Save packages library lettered drive (e.g. “C:”) possible. Use package library whose path begins “\\\" little possible.rmarkdown package must “\\\" package library, can’t connect TinyTex Pandoc.","code":""},{"path":"r-on-network-drives.html","id":"rstudio-as-administrator","chapter":"10 R on network drives","heading":"10.2 RStudio as administrator","text":"click RStudio icon open RStudio, right-click. Depending machine, may see option “Run Administrator”. Otherwise, may see option select Properties (appear window option “Compatibility”, can select checkbox “Run Administrator”).","code":""},{"path":"r-on-network-drives.html","id":"useful-commands","chapter":"10 R on network drives","heading":"10.3 Useful commands","text":"useful commands trying troubleshoot issues using R network drives.can return path(s) package libraries R using. listed order R using install/load/search packages. Thus, want R use different default library, can switch order paths (see ).may want switch order package libraries used R. example R picking library location begins “\\\" one begins letter e.g. ”D:“. can adjust order .libPaths() following code.difficulties R Markdown connecting Pandoc, begin code find RStudio thinks Pandoc installation .want see library package loading , try code:","code":"\n# Find libraries\n.libPaths()                   # Your library paths, listed in order that R installs/searches. \n                              # Note: all libraries will be listed, but to install to some (e.g. C:) you \n                              # may need to be running RStudio as an administrator (it won't appear in the \n                              # install packages library drop-down menu) \n# Switch order of libraries\n# this can effect the priority of R finding a package. E.g. you may want your C: library to be listed first\nmyPaths <- .libPaths() # get the paths\nmyPaths <- c(myPaths[2], myPaths[1]) # switch them\n.libPaths(myPaths) # reassign them\n# Find Pandoc\nSys.getenv(\"RSTUDIO_PANDOC\")  # Find where RStudio thinks your Pandoc installation is\n# Find a package\n# gives first location of package (note order of your libraries)\nfind.package(\"rmarkdown\", lib.loc = NULL, quiet = FALSE, verbose = getOption(\"verbose\")) "},{"path":"r-on-network-drives.html","id":"troubleshooting-common-errors","chapter":"10 R on network drives","heading":"10.4 Troubleshooting common errors","text":"“Failed compile…tex rmarkdown”Check installation TinyTex, install TinyTex C: location. See [R basics] page install TinyTex.Internet routines loadedFor example, Error tools::startDynamicHelp() : internet routines loadedTry selecting 32-bit version RStudio via Tools/Global Options.\nnote: 32-bit version appear menu, make sure using RStudio v1.2.\nnote: 32-bit version appear menu, make sure using RStudio v1.2.Alternatively, try uninstalling R re-installing different bit version (32 instead 64)C: library appear option try install packages manuallyRun RStudio administrator, option appear.set-RStudio always run administrator (advantageous using Rproject don’t click RStudio icon open)… right-click Rstudio iconThe image shows can manually select library install package . window appears open Packages RStudio pane click “Install”.Pandoc 1 errorIf getting “pandoc error 1” knitting R Markdowns scripts network drives:multiple library locations, one lettered drive listed first (see codes )solution worked knitting local drive networked internet connectionSee tips : https://ciser.cornell.edu/rmarkdown-knit--html-word-pdf/Pandoc Error 83The error look something like : find file...rmarkdown...lua.... means unable find file.See https://stackoverflow.com/questions/58830927/rmarkdown-unable--locate-lua-filter--knitting--wordPossibilities:Rmarkdown package installedRmarkdown package findableAn admin rights issue.possible R able find rmarkdown package file, check library rmarkdown package lives (see code ). package installed library inaccessible (e.g. starts “\\\") consider manually moving C: named drive library. aware rmarkdown package able connect TinyTex installation, can live library network drive.Pandoc Error 61For example: Error: pandoc document conversion failed error 61 fetch...Try running RStudio administrator (right click icon, select run admin, see instructions)Also see specific package unable reached can moved C: library.LaTex error (see )error like: ! Package pdftex.def Error: File 'cict_qm2_2020-06-29_files/figure-latex/unnamed-chunk-5-1.png' found: using draft setting. Error: LaTeX failed compile file_name.tex.See https://yihui.org/tinytex/r/#debugging debugging tips.See file_name.log info.Pandoc Error 127This RAM (space) issue. Re-start R session try .Mapping network drivesMapping network drive can risky. Consult department attempting .tip borrowed forum discussion:one open file “mapped network drive”?First, ’ll need know network location ’re trying access.Next, Windows file manager, need right click “PC” right hand pane, select “Map network drive”.Go dialogue define network location earlier lettered drive.Now two ways get file ’re opening. Using drive-letter path work.Error install.packages()get error includes mention “lock” directory, example: Error install.packages : ERROR: failed lock directory...Look package library see folder whose name begins “00LOCK”. Try following tips:Manually delete “00LOCK” folder directory package library. Try installing package .can also try command pacman::p_unlock() (can also put command Rprofile runs every time project opens.). try installing package . may take several tries.Try running RStudio Administrator mode, try installing packages one--one.else fails, install package another library folder (e.g. Temp) manually copy package’s folder desired library.","code":"\n# check/install tinytex, to C: location\ntinytex::install_tinytex()\ntinytex:::is_tinytex() # should return TRUE (note three colons)"},{"path":"data-table.html","id":"data-table","chapter":"11 Data Table","heading":"11 Data Table","text":"handbook focusses dplyr “verb” functions magrittr pipe operator %>% method clean group data, data.table package offers alternative method may encounter R career.","code":""},{"path":"data-table.html","id":"intro-to-data-tables","chapter":"11 Data Table","heading":"11.1 Intro to data tables","text":"data table 2-dimensional data structure like data frame allows complex grouping operations performed. data.table syntax structured operations can performed rows, columns groups.structure DT[, j, ], separated 3 parts; , j arguments. argument allows subsetting required rows, j argument allows operate columns argument allows operate columns groups.page address following topics:Importing data use fread() fwrite()Selecting filtering rows using argumentUsing helper functions %like%, %chin%, %%Selecting computing columns using j argumentComputing groups using argumentAdding updating data data tables using :=","code":""},{"path":"data-table.html","id":"load-packages-and-import-data","chapter":"11 Data Table","heading":"11.2 Load packages and import data","text":"","code":""},{"path":"data-table.html","id":"load-packages-4","chapter":"11 Data Table","heading":"Load packages","text":"Using p_load() function pacman, load (install necessary) packages required analysis.","code":"\npacman::p_load(\n  rio,        # to import data\n  data.table, # to group and clean data\n  tidyverse,  # allows use of pipe (%>%) function in this chapter\n  here \n  ) "},{"path":"data-table.html","id":"import-data-3","chapter":"11 Data Table","heading":"Import data","text":"page explore core functions data.table using case linelist referenced throughout handbook.import dataset cases simulated Ebola epidemic. want download data follow step--step, see instructions [Download book data] page. dataset imported using import() function rio package. See page [Import export] various ways import data. use data.table() convert data frame data table.fread() function used directly import regular delimited files, .csv files, directly data table format. function, counterpart, fwrite(), used writing data.tables regular delimited files fast computationally efficient options large databases.first 20 rows linelist:Base R commands dim() used data frames can also used data tables","code":"\nlinelist <- rio::import(here(\"data\", \"linelist_cleaned.xlsx\")) %>% data.table()\ndim(linelist) #gives the number of rows and columns in the data table## [1] 5888   30"},{"path":"data-table.html","id":"the-i-argument-selecting-and-filtering-rows","chapter":"11 Data Table","heading":"11.3 The i argument: selecting and filtering rows","text":"Recalling DT[, j, ] structure, can filter rows using either row numbers logical expressions. argument first; therefore, syntax DT[] DT[,] can used.first example retrieves first 5 rows data table, second example subsets cases 18 years , third example subsets cases 18 years old diagnosed Central Hospital:Using .N argument represents total number rows data table. can used subset row numbers:","code":"\nlinelist[1:5] #returns the 1st to 5th row\nlinelist[age >= 18] #subsets cases are equal to or over 18 years\nlinelist[age >= 18 & hospital != \"Central Hospital\"] #subsets cases equal to or over 18 years old but not diagnosed at the Central Hospital\nlinelist[.N] #returns the last row\nlinelist[15:.N] #returns the 15th to the last row"},{"path":"data-table.html","id":"using-helper-functions-for-filtering","chapter":"11 Data Table","heading":"Using helper functions for filtering","text":"Data table uses helper functions make subsetting rows easy. %like% function used match pattern column, %chin% used match specific character, %% helper function used match numeric columns within prespecified range.following examples :\n* filter rows hospital variable contains “Hospital”\n* filter rows outcome “Recover” “Death”\n* filter rows age range 40-60","code":"\nlinelist[hospital %like% \"Hospital\"] #filter rows where the hospital variable contains “Hospital”\nlinelist[outcome %chin% c(\"Recover\", \"Death\")] #filter rows where the outcome is “Recover” or “Death”\nlinelist[age %between% c(40, 60)] #filter rows in the age range 40-60\n\n#%between% must take a vector of length 2, whereas %chin% can take vectors of length >= 1"},{"path":"data-table.html","id":"the-j-argument-selecting-and-computing-on-columns","chapter":"11 Data Table","heading":"11.4 The j argument: selecting and computing on columns","text":"Using DT[, j, ] structure, can select columns using numbers names. j argument second; therefore, syntax DT[, j] used. facilitate computations j argument, column wrapped using either list() .().","code":""},{"path":"data-table.html","id":"selecting-columns","chapter":"11 Data Table","heading":"Selecting columns","text":"first example retrieves first, third fifth columns data table, second example selects columns except height, weight gender columns. third example uses .() wrap select case_id outcome columns.","code":"\nlinelist[ , c(1,3,5)]\nlinelist[ , -c(\"gender\", \"age\", \"wt_kg\", \"ht_cm\")]\nlinelist[ , list(case_id, outcome)] #linelist[ , .(case_id, outcome)] works just as well"},{"path":"data-table.html","id":"computing-on-columns","chapter":"11 Data Table","heading":"Computing on columns","text":"combining j arguments possible filter rows compute columns. Using .N j argument also represents total number rows data table can useful return number rows row filtering.following examples :\n* Count number cases stayed 7 days hospital\n* Calculate mean age cases died military hospital\n* Calculate standard deviation, median, mean age cases recovered central hospitalRemember using .() wrap j argument facilitates computation, returns data table allows column naming.","code":"\nlinelist[days_onset_hosp > 7 , .N]## [1] 189\nlinelist[hospital %like% \"Military\" & outcome %chin% \"Death\", .(mean(age, na.rm = T))] #na.rm = T removes N/A values##         V1\n## 1: 15.9084\nlinelist[hospital == \"Central Hospital\" & outcome == \"Recover\", \n                 .(mean_age = mean(age, na.rm = T),\n                   median_age = median(age, na.rm = T),\n                   sd_age = sd(age, na.rm = T))] #this syntax does not use the helper functions but works just as well##    mean_age median_age   sd_age\n## 1: 16.85185         14 12.93857"},{"path":"data-table.html","id":"the-by-argument-computing-by-groups","chapter":"11 Data Table","heading":"11.5 The by argument: computing by groups","text":"argument third argument DT[, j, ] structure. argument accepts character vector list() .() syntax. Using .() syntax argument allows column renaming fly.following examples :\n* group number cases hospital\n* cases 18 years old , calculate mean height weight cases according gender whether recovered died\n* admissions lasted 7 days, count number cases according month admitted hospital admitted toData.table also allows chaining expressions follows:examples following assumption row data table equal new case, can use .N represent number rows data table. Another useful function represent number unique cases uniqueN(), returns number unique values given input. illustrated :answer 3, unique values gender column m, f N/. Compare base R function unique(), returns unique values given input:find number unique cases given month write following:","code":"\nlinelist[, .N, .(hospital)] #the number of cases by hospital##                                hospital    N\n## 1:                                Other  885\n## 2:                              Missing 1469\n## 3: St. Mark's Maternity Hospital (SMMH)  422\n## 4:                        Port Hospital 1762\n## 5:                    Military Hospital  896\n## 6:                     Central Hospital  454\nlinelist[age > 18, .(mean_wt = mean(wt_kg, na.rm = T),\n                             mean_ht = mean(ht_cm, na.rm = T)), .(gender, outcome)] #NAs represent the categories where the data is missing##    gender outcome  mean_wt  mean_ht\n## 1:      m Recover 71.90227 178.1977\n## 2:      f   Death 63.27273 159.9448\n## 3:      m   Death 71.61770 175.4726\n## 4:      f    <NA> 64.49375 162.7875\n## 5:      m    <NA> 72.65505 176.9686\n## 6:      f Recover 62.86498 159.2996\n## 7:   <NA> Recover 67.21429 175.2143\n## 8:   <NA>   Death 69.16667 170.7917\n## 9:   <NA>    <NA> 70.25000 175.5000\nlinelist[days_onset_hosp > 7, .N, .(month = month(date_hospitalisation), hospital)]##     month                             hospital  N\n##  1:     5                    Military Hospital  3\n##  2:     6                        Port Hospital  4\n##  3:     7                        Port Hospital  8\n##  4:     8 St. Mark's Maternity Hospital (SMMH)  5\n##  5:     8                    Military Hospital  9\n##  6:     8                                Other 10\n##  7:     8                        Port Hospital 10\n##  8:     9                        Port Hospital 28\n##  9:     9                              Missing 27\n## 10:     9                     Central Hospital 10\n## 11:     9 St. Mark's Maternity Hospital (SMMH)  6\n## 12:    10                              Missing  2\n## 13:    10                    Military Hospital  3\n## 14:     3                        Port Hospital  1\n## 15:     4                    Military Hospital  1\n## 16:     5                                Other  2\n## 17:     5                     Central Hospital  1\n## 18:     5                              Missing  1\n## 19:     6                              Missing  7\n## 20:     6 St. Mark's Maternity Hospital (SMMH)  2\n## 21:     6                    Military Hospital  1\n## 22:     7                    Military Hospital  3\n## 23:     7                                Other  1\n## 24:     7                              Missing  2\n## 25:     7 St. Mark's Maternity Hospital (SMMH)  1\n## 26:     8                     Central Hospital  2\n## 27:     8                              Missing  6\n## 28:     9                                Other  9\n## 29:     9                    Military Hospital 11\n## 30:    10                        Port Hospital  3\n## 31:    10                                Other  4\n## 32:    10 St. Mark's Maternity Hospital (SMMH)  1\n## 33:    10                     Central Hospital  1\n## 34:    11                              Missing  2\n## 35:    11                        Port Hospital  1\n## 36:    12                        Port Hospital  1\n##     month                             hospital  N\nlinelist[, .N, .(hospital)][order(-N)][1:3] #1st selects all cases by hospital, 2nd orders the cases in descending order, 3rd subsets the 3 hospitals with the largest caseload##             hospital    N\n## 1:     Port Hospital 1762\n## 2:           Missing 1469\n## 3: Military Hospital  896\nlinelist[, .(uniqueN(gender))] #remember .() in the j argument returns a data table##    V1\n## 1:  3\nlinelist[, .(unique(gender))]##      V1\n## 1:    m\n## 2:    f\n## 3: <NA>\nlinelist[, .(uniqueN(case_id)), .(month = month(date_hospitalisation))]##     month   V1\n##  1:     5   62\n##  2:     6  100\n##  3:     7  198\n##  4:     8  509\n##  5:     9 1170\n##  6:    10 1228\n##  7:    11  813\n##  8:    12  576\n##  9:     1  434\n## 10:     2  310\n## 11:     3  290\n## 12:     4  198"},{"path":"data-table.html","id":"adding-and-updating-to-data-tables","chapter":"11 Data Table","heading":"11.6 Adding and updating to data tables","text":":= operator used add update data data table. Adding columns data table can done following ways:complex aggregations beyond scope introductory chapter, idea provide popular viable alternative dplyr grouping cleaning data. data.table package great package allows neat readable code.","code":"\nlinelist[, adult := age >= 18] #adds one column\nlinelist[, c(\"child\", \"wt_lbs\") := .(age < 18, wt_kg*2.204)] #to add multiple columns requires c(\"\") and list() or .() syntax\nlinelist[, `:=` (bmi_in_range = (bmi > 16 & bmi < 40),\n                         no_infector_source_data = is.na(infector) | is.na(source))] #this method uses := as a functional operator `:=`\nlinelist[, adult := NULL] #deletes the column"},{"path":"data-table.html","id":"resources-8","chapter":"11 Data Table","heading":"11.7 Resources","text":"useful resources information:\n* https://cran.r-project.org/web/packages/data.table/vignettes/datatable-intro.html\n* https://github.com/Rdatatable/data.table\n* https://s3.amazonaws.com/assets.datacamp.com/img/blog/data+table+cheat+sheet.pdf\n* https://www.machinelearningplus.com/data-manipulation/datatable--r-complete-guide/\n* https://www.datacamp.com/community/tutorials/data-table-r-tutorialYou can perform summary function grouped data; see Cheat Sheet info:\nhttps://s3.amazonaws.com/assets.datacamp.com/blog_assets/datatable_Cheat_Sheet_R.pdf","code":""}]
