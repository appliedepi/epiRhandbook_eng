[{"path":"index.html","id":"section","chapter":"","heading":"","text":"","code":""},{"path":"index.html","id":"r-for-applied-epidemiology-and-public-health","chapter":"","heading":"R for applied epidemiology and public health","text":"Usage: handbook used 1 million times 300,000 people around world.Objective: Serve quick R code reference manual (online [offline][Download handbook data]) task-centered examples address common epidemiological problems.just starting R? Try free interactive tutorials synchronous, virtual intro course used US CDC, , 75+ health agencies Field Epi Training Programs worldwide.Languages: Spanish (Español), Vietnamese (Tiếng Việt), Japanese (日本), Turkish (Türkçe)Written epidemiologists, epidemiologists \nApplied Epi nonprofit organisation grassroots movement frontline epis around world. write spare time offer resource community. encouragement feedback welcome:Visit website join contact listcontact@appliedepi.org, tweet @appliedepi, LinkedInSubmit issues Github repositoryWe offer live R training instructors decades applied epidemiology experience - email us discuss.","code":""},{"path":"index.html","id":"how-to-use-this-handbook","chapter":"","heading":"How to use this handbook","text":"Browse pages Table Contents, use search boxClick “copy” icons copy codeYou can follow-along [example data][Download handbook data]Offline versionSee instructions [Download handbook data] page.","code":""},{"path":"index.html","id":"acknowledgements","chapter":"","heading":"Acknowledgements","text":"handbook produced independent collaboration epidemiologists around world drawing upon experience organizations including local, state, provincial, national health agencies, World Health Organization (), Doctors without Borders (MSF), hospital systems, academic institutions.handbook approved product specific organization. Although strive accuracy, provide guarantee content book.","code":""},{"path":"index.html","id":"contributors","chapter":"","heading":"Contributors","text":"Editor: Neale BatraAuthors: Neale Batra, Alex Spina, Paula Blomquist, Finlay Campbell, Henry Laurenson-Schafer, Isaac Florence, Natalie Fischer, Aminata Ndiaye, Liza Coyer, Jonathan Polonsky, Yurie Izawa, Chris Bailey, Daniel Molling, Isha Berry, Emma Buajitti, Mathilde Mousset, Sara Hollis, Wen LinReviewers supporters: Pat Keating, Amrish Baidjoe, Annick Lenglet, Margot Charette, Danielly Xavier, Marie-Amélie Degail Chabrat, Esther Kukielka, Michelle Sloan, Aybüke Koyuncu, Rachel Burke, Kate Kelsey, Berhe Etsay, John Rossow, Mackenzie Zendt, James Wright, Laura Haskins, Flavio Finger, Tim Taylor, Jae Hyoung Tim Lee, Brianna Bradley, Wayne Enanoria, Manual Albela Miranda, Molly Mantus, Pattama Ulrich, Joseph Timothy, Adam Vaughan, Olivia Varsaneux, Lionel Monteiro, Joao MuiangaIllustrations: Calder Fong","code":""},{"path":"index.html","id":"funding-and-support","chapter":"","heading":"Funding and support","text":"book primarily volunteer effort took thousands hours create.handbook received supportive funding via COVID-19 emergency capacity-building grant TEPHINET, global network Field Epidemiology Training Programs (FETPs).Administrative support provided EPIET Alumni Network (EAN), special thanks Annika Wendland. EPIET European Programme Intervention Epidemiology Training.Special thanks Médecins Sans Frontières (MSF) Operational Centre Amsterdam (OCA) support development handbook.publication supported Cooperative Agreement number NU2GGH001873, funded Centers Disease Control Prevention TEPHINET, program Task Force Global Health. contents solely responsibility authors necessarily represent official views Centers Disease Control Prevention, Department Health Human Services, Task Force Global Health, Inc. TEPHINET.","code":""},{"path":"index.html","id":"inspiration","chapter":"","heading":"Inspiration","text":"multitude tutorials vignettes provided knowledge development handbook content credited within respective pages.generally, following sources provided inspiration handbook:“R4Epis” project (collaboration MSF RECON)R Epidemics Consortium (RECON)R Data Science book (R4DS)bookdown: Authoring Books Technical Documents R MarkdownNetlify hosts website","code":""},{"path":"index.html","id":"terms-of-use-and-contribution","chapter":"","heading":"Terms of Use and Contribution","text":"","code":""},{"path":"index.html","id":"license","chapter":"","heading":"License","text":" Applied Epi Incorporated, 2021 work licensed Applied Epi Incorporated Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License.Academic courses epidemiologist training programs welcome contact us use adaptation material (email contact@appliedepi.org).","code":""},{"path":"index.html","id":"citation","chapter":"","heading":"Citation","text":"Batra, Neale, et al. Epidemiologist R Handbook. 2021. ","code":""},{"path":"index.html","id":"contribution","chapter":"","heading":"Contribution","text":"like make content contribution, please contact us first via Github issues email. implementing schedule updates creating contributor guide.Please note epiRhandbook project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"transmission-chains.html","id":"transmission-chains","chapter":"1 Transmission chains","heading":"1 Transmission chains","text":"","code":""},{"path":"transmission-chains.html","id":"overview","chapter":"1 Transmission chains","heading":"1.1 Overview","text":"primary tool handle, analyse visualise transmission chains contact\ntracing data package epicontacts, developed folks \nRECON. Try interactive plot hovering nodes \ninformation, dragging move clicking highlight downstream cases.","code":""},{"path":"transmission-chains.html","id":"preparation","chapter":"1 Transmission chains","heading":"1.2 Preparation","text":"","code":""},{"path":"transmission-chains.html","id":"load-packages","chapter":"1 Transmission chains","heading":"Load packages","text":"First load standard packages required data import manipulation. handbook emphasize p_load() pacman, installs package necessary loads use. can also load packages library() base R. See page [R basics] information R packages.require development version epicontacts, can \ninstalled github using p_install_github() function pacman. need run command\n, every time use package (thereafter, can use p_load() usual).","code":"\npacman::p_load(\n   rio,          # File import\n   here,         # File locator\n   tidyverse,    # Data management + ggplot2 graphics\n   remotes       # Package installation from github\n)\npacman::p_install_gh(\"reconhub/epicontacts@timeline\")"},{"path":"transmission-chains.html","id":"import-data","chapter":"1 Transmission chains","heading":"Import data","text":"import dataset cases simulated Ebola epidemic. want download data follow step--step, see instructions [Download handbook data] page. dataset imported using import() function rio package. See page [Import export] various ways import data.first 50 rows linelist displayed . particular interest columns case_id, generation, infector, source.","code":"\n# import the linelist\nlinelist <- import(\"linelist_cleaned.xlsx\")"},{"path":"transmission-chains.html","id":"creating-an-epicontacts-object","chapter":"1 Transmission chains","heading":"Creating an epicontacts object","text":"need create epicontacts object, requires two types \ndata:linelist documenting cases columns variables rows correspond unique casesa list edges defining links cases basis unique IDs (can contacts,\ntransmission events, etc.)already linelist, just need create list edges \ncases, specifically IDs. can extract transmission links \nlinelist linking infector column case_id column. point can also add “edge\nproperties”, mean variable describing link two\ncases, cases . illustration, add location\nvariable describing location transmission event, duration\nvariable describing duration contact days.code , dplyr function transmute similar mutate, except keeps\ncolumns specified within function. drop_na function \nfilter rows specified columns NA value; \ncase, want keep rows infector known.can now create epicontacts object using make_epicontacts\nfunction. need specify column linelist points unique case\nidentifier, well columns contacts point unique\nidentifiers cases involved link. links directional \ninfection going infector case, need specify\narguments accordingly. therefore also set directed\nargument TRUE, affect future operations.Upon examining epicontacts objects, can see case_id column\nlinelist renamed id case_id infector\ncolumns contacts renamed . ensures\nconsistency subsequent handling, visualisation analysis operations.","code":"\n## generate contacts\ncontacts <- linelist %>%\n  transmute(\n    infector = infector,\n    case_id = case_id,\n    location = sample(c(\"Community\", \"Nosocomial\"), n(), TRUE),\n    duration = sample.int(10, n(), TRUE)\n  ) %>%\n  drop_na(infector)\n## generate epicontacts object\nepic <- make_epicontacts(\n  linelist = linelist,\n  contacts = contacts,\n  id = \"case_id\",\n  from = \"infector\",\n  to = \"case_id\",\n  directed = TRUE\n)\n## view epicontacts object\nepic## \n## /// Epidemiological Contacts //\n## \n##   // class: epicontacts\n##   // 5,888 cases in linelist; 3,800 contacts; directed \n## \n##   // linelist\n## \n## # A tibble: 5,888 × 30\n##    id     generation date_inf…¹ date_onset date_hos…² date_out…³ outcome gender   age age_u…⁴ age_y…⁵ age_cat age_c…⁶ hospi…⁷   lon   lat infec…⁸ source wt_kg ht_cm ct_bl…⁹ fever chills cough\n##    <chr>       <dbl> <date>     <date>     <date>     <date>     <chr>   <chr>  <dbl> <chr>     <dbl> <fct>   <fct>   <chr>   <dbl> <dbl> <chr>   <chr>  <dbl> <dbl>   <dbl> <chr> <chr>  <chr>\n##  1 5fe599          4 2014-05-08 2014-05-13 2014-05-15 NA         <NA>    m          2 years         2 0-4     0-4     Other   -13.2  8.47 f547d6  other     27    48      22 no    no     yes  \n##  2 8689b7          4 NA         2014-05-13 2014-05-14 2014-05-18 Recover f          3 years         3 0-4     0-4     Missing -13.2  8.45 <NA>    <NA>      25    59      22 <NA>  <NA>   <NA> \n##  3 11f8ea          2 NA         2014-05-16 2014-05-18 2014-05-30 Recover m         56 years        56 50-69   55-59   St. Ma… -13.2  8.46 <NA>    <NA>      91   238      21 <NA>  <NA>   <NA> \n##  4 b8812a          3 2014-05-04 2014-05-18 2014-05-20 NA         <NA>    f         18 years        18 15-19   15-19   Port H… -13.2  8.48 f90f5f  other     41   135      23 no    no     no   \n##  5 893f25          3 2014-05-18 2014-05-21 2014-05-22 2014-05-29 Recover m          3 years         3 0-4     0-4     Milita… -13.2  8.46 11f8ea  other     36    71      23 no    no     yes  \n##  6 be99c8          3 2014-05-03 2014-05-22 2014-05-23 2014-05-24 Recover f         16 years        16 15-19   15-19   Port H… -13.2  8.46 aec8ec  other     56   116      21 no    no     yes  \n##  7 07e3e8          4 2014-05-22 2014-05-27 2014-05-29 2014-06-01 Recover f         16 years        16 15-19   15-19   Missing -13.2  8.46 893f25  other     47    87      21 <NA>  <NA>   <NA> \n##  8 369449          4 2014-05-28 2014-06-02 2014-06-03 2014-06-07 Death   f          0 years         0 0-4     0-4     Missing -13.2  8.46 133ee7  other      0    11      22 no    no     yes  \n##  9 f393b4          4 NA         2014-06-05 2014-06-06 2014-06-18 Recover m         61 years        61 50-69   60-64   Missing -13.2  8.46 <NA>    <NA>      86   226      22 no    no     yes  \n## 10 1389ca          4 NA         2014-06-05 2014-06-07 2014-06-09 Death   f         27 years        27 20-29   25-29   Missing -13.3  8.47 <NA>    <NA>      69   174      22 no    no     yes  \n## # … with 5,878 more rows, 6 more variables: aches <chr>, vomit <chr>, temp <dbl>, time_admission <chr>, bmi <dbl>, days_onset_hosp <dbl>, and abbreviated variable names ¹​date_infection,\n## #   ²​date_hospitalisation, ³​date_outcome, ⁴​age_unit, ⁵​age_years, ⁶​age_cat5, ⁷​hospital, ⁸​infector, ⁹​ct_blood\n## \n##   // contacts\n## \n## # A tibble: 3,800 × 4\n##    from   to     location   duration\n##    <chr>  <chr>  <chr>         <int>\n##  1 f547d6 5fe599 Nosocomial        8\n##  2 f90f5f b8812a Nosocomial        4\n##  3 11f8ea 893f25 Nosocomial        5\n##  4 aec8ec be99c8 Community        10\n##  5 893f25 07e3e8 Community         4\n##  6 133ee7 369449 Nosocomial        1\n##  7 996f3a 2978ac Community         4\n##  8 133ee7 57a565 Nosocomial        6\n##  9 37a6f6 fc15ef Community         5\n## 10 9f6884 2eaa9a Nosocomial        7\n## # … with 3,790 more rows"},{"path":"transmission-chains.html","id":"handling","chapter":"1 Transmission chains","heading":"1.3 Handling","text":"","code":""},{"path":"transmission-chains.html","id":"subsetting","chapter":"1 Transmission chains","heading":"Subsetting","text":"subset() method epicontacts objects allows , among things,\nfiltering networks based properties linelist (“node attributes”) contacts\ndatabase (“edge attributes”). values must passed named lists \nrespective argument. example, code keeping \nmale cases linelist infection date April \nJuly 2014 (dates specified ranges), transmission links occured\nhospital.can use thin function either filter linelist include cases\nfound contacts setting argument = \"linelist\", \nfilter contacts include cases found linelist setting\nargument = \"contacts\". code , filtering \nepicontacts object keep transmission links involving male cases\ninfected April July filtered . can see \ntwo known transmission links fit specification.addition subsetting node edge attributes, networks can pruned \ninclude components connected certain nodes. cluster_id\nargument takes vector case IDs returns linelist individuals \nlinked, directly indirectly, IDs. code , can see\ntotal 13 linelist cases involved clusters containing\n2ae019 71577a.subset() method epicontacts objects also allows filtering cluster\nsize using cs, cs_min cs_max arguments. code , \nkeeping cases linked clusters 10 cases larger, can see \n271 linelist cases involved clusters.","code":"\nsub_attributes <- subset(\n  epic,\n  node_attribute = list(\n    gender = \"m\",\n    date_infection = as.Date(c(\"2014-04-01\", \"2014-07-01\"))\n  ), \n  edge_attribute = list(location = \"Nosocomial\")\n)\nsub_attributes## \n## /// Epidemiological Contacts //\n## \n##   // class: epicontacts\n##   // 69 cases in linelist; 1,870 contacts; directed \n## \n##   // linelist\n## \n## # A tibble: 69 × 30\n##    id     generation date_inf…¹ date_onset date_hos…² date_out…³ outcome gender   age age_u…⁴ age_y…⁵ age_cat age_c…⁶ hospi…⁷   lon   lat infec…⁸ source wt_kg ht_cm ct_bl…⁹ fever chills cough\n##    <chr>       <dbl> <date>     <date>     <date>     <date>     <chr>   <chr>  <dbl> <chr>     <dbl> <fct>   <fct>   <chr>   <dbl> <dbl> <chr>   <chr>  <dbl> <dbl>   <dbl> <chr> <chr>  <chr>\n##  1 5fe599          4 2014-05-08 2014-05-13 2014-05-15 NA         <NA>    m          2 years         2 0-4     0-4     Other   -13.2  8.47 f547d6  other     27    48      22 no    no     yes  \n##  2 893f25          3 2014-05-18 2014-05-21 2014-05-22 2014-05-29 Recover m          3 years         3 0-4     0-4     Milita… -13.2  8.46 11f8ea  other     36    71      23 no    no     yes  \n##  3 2978ac          4 2014-05-30 2014-06-06 2014-06-08 2014-06-15 Death   m         12 years        12 10-14   10-14   Port H… -13.2  8.48 996f3a  other     67   112      22 no    no     yes  \n##  4 57a565          4 2014-05-28 2014-06-13 2014-06-15 NA         Death   m         42 years        42 30-49   40-44   Milita… -13.3  8.46 133ee7  other     84   186      22 no    no     yes  \n##  5 fc15ef          6 2014-06-14 2014-06-16 2014-06-17 2014-07-09 Recover m         19 years        19 15-19   15-19   Missing -13.2  8.48 37a6f6  other     68   174      22 no    no     yes  \n##  6 99e8fa          7 2014-06-24 2014-06-28 2014-06-29 2014-07-09 Recover m         19 years        19 15-19   15-19   Port H… -13.2  8.47 ab634e  other     71   150      21 no    no     yes  \n##  7 f327be          6 2014-06-14 2014-07-12 2014-07-13 2014-07-14 Death   m         31 years        31 30-49   30-34   St. Ma… -13.2  8.46 a15e13  other     68   188      24 no    no     yes  \n##  8 90e5fe          5 2014-06-18 2014-07-13 2014-07-14 2014-07-16 <NA>    m         67 years        67 50-69   65-69   Port H… -13.3  8.46 ea3740  other    100   233      20 <NA>  <NA>   <NA> \n##  9 a47529          5 2014-06-13 2014-07-17 2014-07-18 2014-07-26 Death   m         45 years        45 30-49   45-49   Milita… -13.2  8.48 a2086d  other     72   214      21 no    no     yes  \n## 10 da8ecb          5 2014-06-20 2014-07-18 2014-07-20 2014-08-01 <NA>    m         12 years        12 10-14   10-14   Missing -13.2  8.48 eb2277  funer…    69   157      21 <NA>  <NA>   <NA> \n## # … with 59 more rows, 6 more variables: aches <chr>, vomit <chr>, temp <dbl>, time_admission <chr>, bmi <dbl>, days_onset_hosp <dbl>, and abbreviated variable names ¹​date_infection,\n## #   ²​date_hospitalisation, ³​date_outcome, ⁴​age_unit, ⁵​age_years, ⁶​age_cat5, ⁷​hospital, ⁸​infector, ⁹​ct_blood\n## \n##   // contacts\n## \n## # A tibble: 1,870 × 4\n##    from   to     location   duration\n##    <chr>  <chr>  <chr>         <int>\n##  1 f547d6 5fe599 Nosocomial        8\n##  2 f90f5f b8812a Nosocomial        4\n##  3 11f8ea 893f25 Nosocomial        5\n##  4 133ee7 369449 Nosocomial        1\n##  5 133ee7 57a565 Nosocomial        6\n##  6 9f6884 2eaa9a Nosocomial        7\n##  7 4802b1 bbfa93 Nosocomial        6\n##  8 b799eb bc2adf Nosocomial        6\n##  9 beb26e 959170 Nosocomial        4\n## 10 894024 e56412 Nosocomial        4\n## # … with 1,860 more rows\nsub_attributes <- thin(sub_attributes, what = \"contacts\")\nnrow(sub_attributes$contacts)## [1] 4\nsub_id <- subset(epic, cluster_id = c(\"2ae019\",\"71577a\"))\nnrow(sub_id$linelist)## [1] 13\nsub_cs <- subset(epic, cs_min = 10)\nnrow(sub_cs$linelist)## [1] 271"},{"path":"transmission-chains.html","id":"accessing-ids","chapter":"1 Transmission chains","heading":"Accessing IDs","text":"get_id() function retrieves information case IDs \ndataset, can parameterized follows:linelist: IDs line list datacontacts: IDs contact dataset (“” “” combined): IDs “” column contact datsetto IDs “” column contact datasetall: IDs appear anywhere either datasetcommon: IDs appear contacts dataset line listFor example, first ten IDs contacts dataset?many IDs found linelist contacts?","code":"\ncontacts_ids <- get_id(epic, \"contacts\")\nhead(contacts_ids, n = 10)##  [1] \"f547d6\" \"f90f5f\" \"11f8ea\" \"aec8ec\" \"893f25\" \"133ee7\" \"996f3a\" \"37a6f6\" \"9f6884\" \"4802b1\"\nlength(get_id(epic, \"common\"))## [1] 4352"},{"path":"transmission-chains.html","id":"visualization","chapter":"1 Transmission chains","heading":"1.4 Visualization","text":"","code":""},{"path":"transmission-chains.html","id":"basic-plotting","chapter":"1 Transmission chains","heading":"Basic plotting","text":"visualisations epicontacts objects handled plot\nfunction. first filter epicontacts object include \ncases onset dates June 2014 using subset function, \ninclude contacts linked cases using thin function.can create basic, interactive plot simply follows:can move nodes around dragging , hover \ninformation click highlight connected cases.large number arguments modify plot. cover\nmain ones , check documentation via ?vis_epicontacts (\nfunction called using plot epicontacts object) get full\ndescription function arguments.","code":"\n## subset epicontacts object\nsub <- epic %>%\n  subset(\n    node_attribute = list(date_onset = c(as.Date(c(\"2014-06-30\", \"2014-06-01\"))))\n  ) %>%\n thin(\"contacts\")\n## plot epicontacts object\nplot(\n  sub,\n  width = 700,\n  height = 700\n)"},{"path":"transmission-chains.html","id":"visualising-node-attributes","chapter":"1 Transmission chains","heading":"Visualising node attributes","text":"Node color, node shape node size can mapped given column linelist\nusing node_color, node_shape node_size arguments. similar\naes syntax may recognise ggplot2.specific colors, shapes sizes nodes can specified follows:Colors via col_pal argument, either providing name list manual\nspecification color done , providing color palette\nfunction colorRampPalette(c(\"black\", \"red\", \"orange\")), \nprovide gradient colours ones specified.Colors via col_pal argument, either providing name list manual\nspecification color done , providing color palette\nfunction colorRampPalette(c(\"black\", \"red\", \"orange\")), \nprovide gradient colours ones specified.Shapes passing named list shapes argument, specifying one shape\nunique element linelist column specified node_shape\nargument. See codeawesome available shapes.Shapes passing named list shapes argument, specifying one shape\nunique element linelist column specified node_shape\nargument. See codeawesome available shapes.Size passing size range nodes size_range argument.Size passing size range nodes size_range argument.example, color represents outcome, shape gender size\nage:","code":"\nplot(\n  sub, \n  node_color = \"outcome\",\n  node_shape = \"gender\",\n  node_size = 'age',\n  col_pal = c(Death = \"firebrick\", Recover = \"green\"),\n  shapes = c(f = \"female\", m = \"male\"),\n  size_range = c(40, 60),\n  height = 700,\n  width = 700\n)"},{"path":"transmission-chains.html","id":"visualising-edge-attributes","chapter":"1 Transmission chains","heading":"Visualising edge attributes","text":"Edge color, width linetype can mapped given column contacts\ndataframe using edge_color, edge_width edge_linetype\narguments. specific colors widths edges can specified follows:Colors via edge_col_pal argument, manner used col_pal.Colors via edge_col_pal argument, manner used col_pal.Widths passing size range nodes width_range argument.Widths passing size range nodes width_range argument.example:","code":"\nplot(\n  sub, \n  node_color = \"outcome\",\n  node_shape = \"gender\",\n  node_size = 'age',\n  col_pal = c(Death = \"firebrick\", Recover = \"green\"),\n  shapes = c(f = \"female\", m = \"male\"),\n  size_range = c(40, 60),\n  edge_color = 'location',\n  edge_linetype = 'location',\n  edge_width = 'duration',\n  edge_col_pal = c(Community = \"orange\", Nosocomial = \"purple\"),\n  width_range = c(1, 3),\n  height = 700,\n  width = 700\n)"},{"path":"transmission-chains.html","id":"temporal-axis","chapter":"1 Transmission chains","heading":"Temporal axis","text":"can also visualise network along temporal axis mapping x_axis\nargument column linelist. example , x-axis\nrepresents date symptom onset. also specified arrow_size\nargument ensure arrows large, set label = FALSE make\nfigure less cluttered.large number additional arguments futher specify \nnetwork visualised along temporal axis, can check \nvia ?vis_temporal_interactive (function called using plot \nepicontacts object x_axis specified). ’ll go \n.","code":"\nplot(\n  sub,\n  x_axis = \"date_onset\",\n  node_color = \"outcome\",\n  col_pal = c(Death = \"firebrick\", Recover = \"green\"),\n  arrow_size = 0.5,\n  node_size = 13,\n  label = FALSE,\n  height = 700,\n  width = 700\n)"},{"path":"transmission-chains.html","id":"specifying-transmission-tree-shape","chapter":"1 Transmission chains","heading":"Specifying transmission tree shape","text":"two main shapes transmission tree can assume, specified using\nnetwork_shape argument. first branching shape shown ,\nstraight edge connects two nodes. intuitive\nrepresentation, however can result overlapping edges densely connected\nnetwork. second shape rectangle, produces tree resembling \nphylogeny. example:case node can assigned unique vertical position toggling \nposition_dodge argument. position unconnected cases (.e. \nreported contacts) specified using unlinked_pos argument.position parent node relative children nodes can \nspecified using parent_pos argument. default option place \nparent node middle, however can placed bottom (parent_pos = 'bottom') top (parent_pos = 'top').","code":"\nplot(\n  sub,\n  x_axis = \"date_onset\",\n  network_shape = \"rectangle\",\n  node_color = \"outcome\",\n  col_pal = c(Death = \"firebrick\", Recover = \"green\"),\n  arrow_size = 0.5,\n  node_size = 13,\n  label = FALSE,\n  height = 700,\n  width = 700\n)\nplot(\n  sub,\n  x_axis = \"date_onset\",\n  network_shape = \"rectangle\",\n  node_color = \"outcome\",\n  col_pal = c(Death = \"firebrick\", Recover = \"green\"),\n  position_dodge = TRUE,\n  unlinked_pos = \"bottom\",\n  arrow_size = 0.5,\n  node_size = 13,\n  label = FALSE,\n  height = 700,\n  width = 700\n)\nplot(\n  sub,\n  x_axis = \"date_onset\",\n  network_shape = \"rectangle\",\n  node_color = \"outcome\",\n  col_pal = c(Death = \"firebrick\", Recover = \"green\"),\n  parent_pos = \"top\",\n  arrow_size = 0.5,\n  node_size = 13,\n  label = FALSE,\n  height = 700,\n  width = 700\n)"},{"path":"transmission-chains.html","id":"saving-plots-and-figures","chapter":"1 Transmission chains","heading":"Saving plots and figures","text":"can save plot interactive, self-contained html file \nvisSave function VisNetwork package:Saving network outputs image unfortunately less easy requires\nsave file html take screenshot file using\nwebshot package. code , converting html file saved\nPNG:","code":"\nplot(\n  sub,\n  x_axis = \"date_onset\",\n  network_shape = \"rectangle\",\n  node_color = \"outcome\",\n  col_pal = c(Death = \"firebrick\", Recover = \"green\"),\n  parent_pos = \"top\",\n  arrow_size = 0.5,\n  node_size = 13,\n  label = FALSE,\n  height = 700,\n  width = 700\n) %>%\n  visNetwork::visSave(\"network.html\")\nwebshot(url = \"network.html\", file = \"network.png\")"},{"path":"transmission-chains.html","id":"timelines","chapter":"1 Transmission chains","heading":"Timelines","text":"can also case timelines network, represented x-axis\ncase. can used visualise case locations, example, time\noutcome. generate timeline, need create data.frame least\nthree columns indicating case ID, start date “event” end\ndate “event”. can also add number columns can\nmapped node edge properties timeline. code ,\ngenerate timeline going date symptom onset date \noutcome, keep outcome hospital variables use define \nnode shape colour. Note can one timeline row/event\nper case, example case transferred multiple hospitals.pass timeline element timeline argument. can map\ntimeline attributes timeline node colours, shapes sizes way\ndefined previous sections, except two nodes: start end\nnode timeline, seperate arguments. example,\ntl_start_node_color defines timeline column mapped colour \nstart node, tl_end_node_shape defines timeline column \nmapped shape end node. can also map colour, width, linetype \nlabels timeline edge via tl_edge_* arguments.See ?vis_temporal_interactive (function called plotting \nepicontacts object) detailed documentation arguments. argument\nannotated code :","code":"\n## generate timeline\ntimeline <- linelist %>%\n  transmute(\n    id = case_id,\n    start = date_onset,\n    end = date_outcome,\n    outcome = outcome,\n    hospital = hospital\n  )\n## define shapes\nshapes <- c(\n  f = \"female\",\n  m = \"male\",\n  Death = \"user-times\",\n  Recover = \"heartbeat\",\n  \"NA\" = \"question-circle\"\n)\n\n## define colours\ncolours <- c(\n  Death = \"firebrick\",\n  Recover = \"green\",\n  \"NA\" = \"grey\"\n)\n\n## make plot\nplot(\n  sub,\n  ## max x coordinate to date of onset\n  x_axis = \"date_onset\",\n  ## use rectangular network shape\n  network_shape = \"rectangle\",\n  ## mape case node shapes to gender column\n  node_shape = \"gender\",\n  ## we don't want to map node colour to any columns - this is important as the\n  ## default value is to map to node id, which will mess up the colour scheme\n  node_color = NULL,\n  ## set case node size to 30 (as this is not a character, node_size is not\n  ## mapped to a column but instead interpreted as the actual node size)\n  node_size = 30,\n  ## set transmission link width to 4 (as this is not a character, edge_width is\n  ## not mapped to a column but instead interpreted as the actual edge width)\n  edge_width = 4,\n  ## provide the timeline object\n  timeline = timeline,\n  ## map the shape of the end node to the outcome column in the timeline object\n  tl_end_node_shape = \"outcome\",\n  ## set the size of the end node to 15 (as this is not a character, this\n  ## argument is not mapped to a column but instead interpreted as the actual\n  ## node size)\n  tl_end_node_size = 15,\n  ## map the colour of the timeline edge to the hospital column\n  tl_edge_color = \"hospital\",\n  ## set the width of the timeline edge to 2 (as this is not a character, this\n  ## argument is not mapped to a column but instead interpreted as the actual\n  ## edge width)\n  tl_edge_width = 2,\n  ## map edge labels to the hospital variable\n  tl_edge_label = \"hospital\",\n  ## specify the shape for everyone node attribute (defined above)\n  shapes = shapes,\n  ## specify the colour palette (defined above)\n  col_pal = colours,\n  ## set the size of the arrow to 0.5\n  arrow_size = 0.5,\n  ## use two columns in the legend\n  legend_ncol = 2,\n  ## set font size\n  font_size = 15,\n  ## define formatting for dates\n  date_labels = c(\"%d %b %Y\"),\n  ## don't plot the ID labels below nodes\n  label = FALSE,\n  ## specify height\n  height = 1000,\n  ## specify width\n  width = 1200,\n  ## ensure each case node has a unique y-coordinate - this is very important\n  ## when using timelines, otherwise you will have overlapping timelines from\n  ## different cases\n  position_dodge = TRUE\n)## Warning in assert_timeline(timeline, x, x_axis): 5865 timeline row(s) removed as ID not found in linelist or start/end date is NA"},{"path":"transmission-chains.html","id":"analysis","chapter":"1 Transmission chains","heading":"1.5 Analysis","text":"","code":""},{"path":"transmission-chains.html","id":"summarising","chapter":"1 Transmission chains","heading":"Summarising","text":"can get overview network properties using \nsummary function.example, can see 57% contacts cases \nlinelist; means linelist data significant\nnumber cases involved transmission chains.","code":"\n## summarise epicontacts object\nsummary(epic)## \n## /// Overview //\n##   // number of unique IDs in linelist: 5888\n##   // number of unique IDs in contacts: 5511\n##   // number of unique IDs in both: 4352\n##   // number of contacts: 3800\n##   // contacts with both cases in linelist: 56.868 %\n## \n## /// Degrees of the network //\n##   // in-degree summary:\n##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n##  0.0000  0.0000  1.0000  0.5392  1.0000  1.0000 \n## \n##   // out-degree summary:\n##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n##  0.0000  0.0000  0.0000  0.5392  1.0000  6.0000 \n## \n##   // in and out degree summary:\n##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n##   0.000   1.000   1.000   1.078   1.000   7.000 \n## \n## /// Attributes //\n##   // attributes in linelist:\n##  generation date_infection date_onset date_hospitalisation date_outcome outcome gender age age_unit age_years age_cat age_cat5 hospital lon lat infector source wt_kg ht_cm ct_blood fever chills cough aches vomit temp time_admission bmi days_onset_hosp\n## \n##   // attributes in contacts:\n##  location duration"},{"path":"transmission-chains.html","id":"pairwise-characteristics","chapter":"1 Transmission chains","heading":"Pairwise characteristics","text":"get_pairwise() function allows processing variable(s) line list\naccording pair contact dataset. following example, date\nonset disease extracted line list order compute \ndifference disease date onset pair. value \nproduced comparison represents serial interval (si).get_pairwise() interpret class column used \ncomparison, adjust method comparing values accordingly. \nnumbers dates (like si example ), function subtract\nvalues. applied columns characters categorical,\nget_pairwise() paste values together. function also allows\narbitrary processing (see “f” argument), discrete combinations can \neasily tabulated analyzed., see significant association transmission links gender.","code":"\nsi <- get_pairwise(epic, \"date_onset\")   \nsummary(si)##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n##    0.00    5.00    9.00   11.01   15.00   99.00    1820\ntibble(si = si) %>%\n  ggplot(aes(si)) +\n  geom_histogram() +\n  labs(\n    x = \"Serial interval\",\n    y = \"Frequency\"\n  )## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.## Warning: Removed 1820 rows containing non-finite values (stat_bin).\nhead(get_pairwise(epic, \"gender\"), n = 10)##  [1] \"f -> m\" NA       \"m -> m\" NA       \"m -> f\" \"f -> f\" NA       \"f -> m\" NA       \"m -> f\"\nget_pairwise(epic, \"gender\", f = table)##            values.to\n## values.from   f   m\n##           f 464 516\n##           m 510 468\nfisher.test(get_pairwise(epic, \"gender\", f = table))## \n##  Fisher's Exact Test for Count Data\n## \n## data:  get_pairwise(epic, \"gender\", f = table)\n## p-value = 0.03758\n## alternative hypothesis: true odds ratio is not equal to 1\n## 95 percent confidence interval:\n##  0.6882761 0.9892811\n## sample estimates:\n## odds ratio \n##  0.8252575"},{"path":"transmission-chains.html","id":"identifying-clusters","chapter":"1 Transmission chains","heading":"Identifying clusters","text":"get_clusters() function can used identify connected components\nepicontacts object. First, use retrieve data.frame\ncontaining cluster information:Let us look largest clusters. , add cluster information \nepicontacts object subset keep largest clusters:","code":"\nclust <- get_clusters(epic, output = \"data.frame\")\ntable(clust$cluster_size)## \n##    1    2    3    4    5    6    7    8    9   10   11   12   13   14 \n## 1536 1680 1182  784  545  342  308  208  171  100   99   24   26   42\nggplot(clust, aes(cluster_size)) +\n  geom_bar() +\n  labs(\n    x = \"Cluster size\",\n    y = \"Frequency\"\n  )\nepic <- get_clusters(epic)\nmax_size <- max(epic$linelist$cluster_size)\nplot(subset(epic, cs = max_size))"},{"path":"transmission-chains.html","id":"calculating-degrees","chapter":"1 Transmission chains","heading":"Calculating degrees","text":"degree node corresponds number edges connections \nnodes. get_degree() provides easy method calculating value \nepicontacts networks. high degree context indicates individual\ncontact many others. type argument indicates want\ncount -degree -degree, only_linelist argument\nindicates want calculate degree cases linelist.individuals ten contacts?mean number contacts?","code":"\ndeg_both <- get_degree(epic, type = \"both\", only_linelist = TRUE)\nhead(sort(deg_both, decreasing = TRUE), 10)## 916d0a 858426 6833d7 f093ea 11f8ea 3a4372 38fc71 c8c4d5 a127a7 02d8fd \n##      7      6      6      6      5      5      5      5      5      5\nmean(deg_both)## [1] 1.078473"},{"path":"transmission-chains.html","id":"resources","chapter":"1 Transmission chains","heading":"1.6 Resources","text":"\nepicontacts page\nprovides overview package functions includes -depth\nvignettes.github page can used raise\nissues request features.","code":""}]
